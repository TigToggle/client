// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.6.0.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_209", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    L10nDe$() {
      return new B.L10nDe(A.canonicalizedLocale("de"));
    },
    L10nDe: function L10nDe(t0) {
      this.localeName = t0;
    }
  };
  A = holdersList[0];
  C = holdersList[51];
  B = hunkHelpers.updateHolder(holdersList[11], B);
  B.L10nDe.prototype = {
    get$alwaysUse24HourFormat() {
      return "true";
    },
    get$repeatPassword() {
      return "Passwort wiederholen";
    },
    get$notAnImage() {
      return "Keine Bilddatei.";
    },
    get$remove(_) {
      return "Entfernen";
    },
    get$importNow() {
      return "Jetzt importieren";
    },
    get$importEmojis() {
      return "Emojis importieren";
    },
    get$importFromZipFile() {
      return "Aus ZIP-Datei importieren";
    },
    get$exportEmotePack() {
      return "Emote-Paket als ZIP-Datei exportieren";
    },
    get$replace(_) {
      return "Ersetzen";
    },
    aboutHomeserver$1(homeserver) {
      return "\xdcber " + homeserver;
    },
    get$accept(_) {
      return "Annehmen";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " hat die Einladung angenommen";
    },
    get$account() {
      return "Konto";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " hat Ende-zu-Ende Verschl\xfcsselung aktiviert";
    },
    get$addEmail() {
      return "E-Mail hinzuf\xfcgen";
    },
    get$confirmMatrixId() {
      return "Bitte best\xe4tigen deine Matrix-ID, um dein Konto zu l\xf6schen.";
    },
    supposedMxid$1(mxid) {
      return "das sollte sein " + mxid;
    },
    get$addToSpace() {
      return "Zum Space hinzuf\xfcgen";
    },
    get$admin() {
      return "Admin";
    },
    get$alias() {
      return "Alias";
    },
    get$all() {
      return "Alle";
    },
    get$commandHint_googly() {
      return "Glupschaugen senden";
    },
    get$commandHint_cuddle() {
      return "Umarmung senden";
    },
    get$commandHint_hug() {
      return "Umarmung senden";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " hat dir Googly Eyes gesendet";
    },
    cuddleContent$1(senderName) {
      return senderName + " knuddelt dich";
    },
    hugContent$1(senderName) {
      return senderName + " umarmt dich";
    },
    answeredTheCall$1(senderName) {
      return senderName + " hat den Anruf angenommen";
    },
    get$anyoneCanJoin() {
      return "Jeder darf beitreten";
    },
    get$archive() {
      return "Archiv";
    },
    get$areGuestsAllowedToJoin() {
      return "D\xfcrfen G\xe4ste beitreten";
    },
    get$areYouSure() {
      return "Bist du sicher?";
    },
    get$areYouSureYouWantToLogout() {
      return "Willst du dich wirklich abmelden?";
    },
    get$askSSSSSign() {
      return "Bitte gib, um die andere Person signieren zu k\xf6nnen, dein Sicherheitsschl\xfcssel oder Wiederherstellungsschl\xfcssel ein.";
    },
    askVerificationRequest$1(username) {
      return "Diese Best\xe4tigungsanfrage von " + username + " annehmen?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "Der Homeserver unterst\xfctzt diese Anmelde-Typen:\n" + serverVersions + "\nAber diese App unterst\xfctzt nur:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Tippbenachrichtigungen senden";
    },
    get$swipeRightToLeftToReply() {
      return "Wische von rechts nach links zum Antworten";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "Der Homeserver unterst\xfctzt die Spec-Versionen:\n" + serverVersions + "\nAber diese App unterst\xfctzt nur:\n" + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return A.S(chats) + " Chats und " + A.S(participants) + " Teilnehmer";
    },
    get$noMoreChatsFound() {
      return "Keine weiteren Chats gefunden ...";
    },
    get$noChatsFoundHere() {
      return "Hier wurden noch keine Chats gefunden. Starte einen neuen Chat mit jemandem, indem du die Schaltfl\xe4che unten verwenden. \u2935\ufe0f";
    },
    get$unread() {
      return "Ungelesen";
    },
    get$space() {
      return "Space";
    },
    get$spaces() {
      return "Spaces";
    },
    get$banFromChat() {
      return "Aus dem Chat verbannen";
    },
    get$banned() {
      return "Verbannt";
    },
    bannedUser$2(username, targetName) {
      return username + " hat " + targetName + " verbannt";
    },
    get$blockDevice() {
      return "Blockiere Ger\xe4t";
    },
    get$blocked() {
      return "Blockiert";
    },
    get$botMessages() {
      return "Bot-Nachrichten";
    },
    get$cancel(_) {
      return "Abbrechen";
    },
    cantOpenUri$1(uri) {
      return "Die URI " + uri + " kann nicht ge\xf6ffnet werden";
    },
    get$changeDeviceName() {
      return "Ger\xe4tenamen \xe4ndern";
    },
    changedTheChatAvatar$1(username) {
      return username + " hat den Chat-Avatar ge\xe4ndert";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " hat die Chat-Beschreibung ge\xe4ndert zu: \u201e" + description + "\u201c";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " hat den Chat-Namen ge\xe4ndert zu: \u201e" + chatname + "\u201c";
    },
    changedTheChatPermissions$1(username) {
      return username + " hat die Chat-Berechtigungen ge\xe4ndert";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " hat den Nicknamen ge\xe4ndert zu: \u201e" + displayname + "\u201c";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " hat die Zugangsregeln f\xfcr G\xe4ste ge\xe4ndert";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " hat die Zugangsregeln f\xfcr G\xe4ste ge\xe4ndert zu: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " hat die Sichtbarkeit des Chat-Verlaufs ge\xe4ndert";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " hat die Sichtbarkeit des Chat-Verlaufs ge\xe4ndert zu: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " hat die Zugangsregeln ge\xe4ndert";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " hat die Zugangsregeln ge\xe4ndert zu: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " hat das Profilbild ge\xe4ndert";
    },
    changedTheRoomAliases$1(username) {
      return username + " hat die Raum-Aliasse ge\xe4ndert";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " hat den Einladungslink ge\xe4ndert";
    },
    get$changePassword() {
      return "Passwort \xe4ndern";
    },
    get$changeTheme() {
      return "\xc4ndere Deinen Style";
    },
    get$changeTheNameOfTheGroup() {
      return "Gruppenname \xe4ndern";
    },
    get$changeYourAvatar() {
      return "Deinen Avatar \xe4ndern";
    },
    get$channelCorruptedDecryptError() {
      return "Die Verschl\xfcsselung wurde korrumpiert";
    },
    get$chat() {
      return "Chat";
    },
    get$chatDetails() {
      return "Chatdetails";
    },
    get$chats() {
      return "Chats";
    },
    get$chooseAStrongPassword() {
      return "W\xe4hle ein sicheres Passwort";
    },
    get$clearArchive() {
      return "Archiv leeren";
    },
    get$close(_) {
      return "Schlie\xdfen";
    },
    get$commandHint_markasdm() {
      return "Als Direktnachrichtenraum f\xfcr die angegebene Matrix-ID markieren";
    },
    get$commandHint_markasgroup() {
      return "Als Gruppe markieren";
    },
    get$commandHint_ban() {
      return "Banne ausgew\xe4hlten Benutzer aus diesen Raum";
    },
    get$commandHint_clearcache() {
      return "Zwischenspeicher l\xf6schen";
    },
    get$commandHint_create() {
      return "Erstelle ein leeren Gruppenchat\nBenutze --no-encryption, um die Verschl\xfcsselung auszuschalten";
    },
    get$commandHint_discardsession() {
      return "Sitzung verwerfen";
    },
    get$commandHint_dm() {
      return "Starte einen direkten Chat\nBenutze --no-encryption, um die Verschl\xfcsselung auszuschalten";
    },
    get$commandHint_html() {
      return "Sende HTML-formatierten Text";
    },
    get$commandHint_invite() {
      return "Lade den Benutzer in diesen Raum ein";
    },
    get$commandHint_join() {
      return "Betritt den ausgew\xe4hlten Raum";
    },
    get$commandHint_kick() {
      return "Entferne den \xfcbergebenen Benutzer aus diesem Raum";
    },
    get$commandHint_leave() {
      return "Diesen Raum verlassen";
    },
    get$commandHint_me() {
      return "Beschreibe dich selbst";
    },
    get$commandHint_myroomavatar() {
      return "Setze dein Profilbild nur f\xfcr diesen Raum (MXC-Uri)";
    },
    get$commandHint_myroomnick() {
      return "Setze deinen Anzeigenamen nur f\xfcr diesen Raum";
    },
    get$commandHint_op() {
      return "Setze den \xfcbergeben Powerlevel des Benutzers (Standard: 50)";
    },
    get$commandHint_plain() {
      return "Sende unformatierten Text";
    },
    get$commandHint_react() {
      return "Sende die Antwort als Reaction";
    },
    get$commandHint_send() {
      return "Text senden";
    },
    get$commandHint_unban() {
      return "Hebe die Verbannung dieses Benutzers in diesem Raum auf";
    },
    get$commandInvalid() {
      return "Befehl ung\xfcltig";
    },
    commandMissing$1(command) {
      return command + " ist kein Befehl.";
    },
    get$compareEmojiMatch() {
      return "Bitte vergleiche die Emojis";
    },
    get$compareNumbersMatch() {
      return "Bitte vergleiche die Zahlen";
    },
    get$configureChat() {
      return "Chat konfigurieren";
    },
    get$confirm(_) {
      return "Best\xe4tigen";
    },
    get$containsDisplayName() {
      return "Enth\xe4lt Anzeigenamen";
    },
    get$containsUserName() {
      return "Enth\xe4lt Benutzernamen";
    },
    get$contentHasBeenReported() {
      return "Der Inhalt wurde den Serveradministratoren gemeldet";
    },
    get$copiedToClipboard() {
      return "Wurde in die Zwischenablage kopiert";
    },
    get$copy(_) {
      return "Kopieren";
    },
    couldNotDecryptMessage$1(error) {
      return "Nachricht konnte nicht entschl\xfcsselt werden: " + error;
    },
    countParticipants$1(count) {
      return A.S(count) + " Mitglieder";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " hat den Chat erstellt";
    },
    get$currentlyActive() {
      return "Jetzt gerade online";
    },
    get$darkTheme() {
      return "Dunkel";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Dies deaktiviert dein Konto. Es kann nicht r\xfcckg\xe4ngig gemacht werden! Bist du sicher?";
    },
    get$defaultPermissionLevel() {
      return "Standardberechtigungsstufe f\xfcr neue Benutzer";
    },
    get$$delete(_) {
      return "L\xf6schen";
    },
    get$deleteAccount() {
      return "Konto l\xf6schen";
    },
    get$deleteMessage() {
      return "Nachricht l\xf6schen";
    },
    get$devices() {
      return "Ger\xe4te";
    },
    get$directChats() {
      return "Direkte Chats";
    },
    get$allRooms() {
      return "Alle Gruppenchats";
    },
    get$displaynameHasBeenChanged() {
      return "Anzeigename wurde ge\xe4ndert";
    },
    get$downloadFile() {
      return "Datei herunterladen";
    },
    get$edit() {
      return "Bearbeiten";
    },
    get$editBlockedServers() {
      return "Blockierte Server einstellen";
    },
    get$chatPermissions() {
      return "Chatberechtigungen";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    get$editDisplayname() {
      return "Anzeigename \xe4ndern";
    },
    get$editRoomAliases() {
      return "Raum-Aliase bearbeiten";
    },
    get$editRoomAvatar() {
      return "Raumavatar bearbeiten";
    },
    get$emoteExists() {
      return "Emoticon existiert bereits!";
    },
    get$emoteInvalid() {
      return "Ung\xfcltiges Emoticon-K\xfcrzel!";
    },
    get$emoteKeyboardNoRecents() {
      return "K\xfcrzlich verwendete Emotes werden hier angezeigt ...";
    },
    get$emotePacks() {
      return "Emoticon-B\xfcndel f\xfcr Raum";
    },
    get$globalChatId() {
      return "Globale Chat-ID";
    },
    get$accessAndVisibility() {
      return "Zugang und Sichtbarkeit";
    },
    get$customEmojisAndStickers() {
      return "Eigene Emojis und Sticker";
    },
    get$emoteShortcode() {
      return "Emoticon-K\xfcrzel";
    },
    get$emoteWarnNeedToPick() {
      return "W\xe4hle ein Emoticon-K\xfcrzel und ein Bild!";
    },
    get$emptyChat() {
      return "Leerer Chat";
    },
    get$enableEmotesGlobally() {
      return "Aktiviere Emoticon-B\xfcndel global";
    },
    get$enableEncryption() {
      return "Verschl\xfcsselung anschalten";
    },
    get$encrypted() {
      return "Verschl\xfcsselt";
    },
    get$encryptionNotEnabled() {
      return "Verschl\xfcsselung ist nicht aktiviert";
    },
    endedTheCall$1(senderName) {
      return senderName + " hat den Anruf beendet";
    },
    get$enterAnEmailAddress() {
      return "Gib eine E-Mail-Adresse ein";
    },
    errorObtainingLocation$1(error) {
      return "Fehler beim Suchen des Standortes: " + error;
    },
    get$extremeOffensive() {
      return "Extrem beleidigend";
    },
    get$fontSize(_) {
      return "Schriftgr\xf6\xdfe";
    },
    get$forward(_) {
      return "Weiterleiten";
    },
    get$fromJoining() {
      return "Ab dem Beitritt";
    },
    get$fromTheInvitation() {
      return "Ab der Einladung";
    },
    get$goToTheNewRoom() {
      return "Zum neuen Raum wechseln";
    },
    get$group() {
      return "Gruppe";
    },
    get$chatDescription() {
      return "Chatbeschreibung";
    },
    get$groups() {
      return "Gruppen";
    },
    groupWith$1(displayname) {
      return "Gruppe mit " + displayname;
    },
    get$guestsAreForbidden() {
      return "G\xe4ste sind verboten";
    },
    get$guestsCanJoin() {
      return "G\xe4ste d\xfcrfen beitreten";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " hat die Einladung f\xfcr " + targetName + " zur\xfcckgezogen";
    },
    get$help() {
      return "Hilfe";
    },
    get$hideRedactedMessages() {
      return "Geschw\xe4rzte Nachrichten verstecken";
    },
    get$hideRedactedMessagesBody() {
      return "Wenn jemand eine Nachricht schw\xe4rzt/l\xf6scht, dann wird diese Nachricht im Chat nicht mehr sichtbar sein.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Ung\xfcltige und unbekannte Nachrichten-Formate ausblenden";
    },
    get$howOffensiveIsThisContent() {
      return "Wie beleidigend ist dieser Inhalt?";
    },
    get$block() {
      return "Blockieren";
    },
    get$blockedUsers() {
      return "Blockierte Benutzer";
    },
    get$blockListDescription() {
      return "Du kannst Benutzer blockieren, die dich st\xf6ren. Von Benutzern auf deiner pers\xf6nlichen Blocklierliste kannst du keine Nachrichten oder Raumeinladungen mehr erhalten.";
    },
    get$blockUsername() {
      return "Blockiere Benutzername";
    },
    get$iHaveClickedOnLink() {
      return "Ich habe den Link angeklickt";
    },
    get$incorrectPassphraseOrKey() {
      return "Falsches Passwort oder Wiederherstellungsschl\xfcssel";
    },
    get$inoffensive() {
      return "Harmlos";
    },
    get$inviteContact() {
      return "Kontakt einladen";
    },
    get$noChatDescriptionYet() {
      return "Noch keine Chatbeschreibung vorhanden.";
    },
    get$tryAgain() {
      return "Neuer Versuch";
    },
    get$invited() {
      return "Eingeladen";
    },
    get$redactMessageDescription() {
      return "Die Nachricht wird f\xfcr alle Teilnehmer dieses Gespr\xe4chs gel\xf6scht. Dies kann nicht r\xfcckg\xe4ngig gemacht werden.";
    },
    get$optionalRedactReason() {
      return "(Optional) Grund f\xfcr die L\xf6schung dieser Nachricht...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " hat " + targetName + " eingeladen";
    },
    get$invitedUsersOnly() {
      return "Nur eingeladene Mitglieder";
    },
    get$inviteForMe() {
      return "Einladung f\xfcr mich";
    },
    inviteText$2(username, link) {
      return username + " hat Dich zu FluffyChat eingeladen. \n1. Gehe auf fluffychat.im und installiere die App \n2. Melde Dich in der App an \n3. \xd6ffne den Einladungslink: \n " + link;
    },
    get$isTyping() {
      return "schreibt \u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " ist dem Chat beigetreten";
    },
    get$joinRoom() {
      return "Raum beitreten";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " hat " + targetName + " hinausgeworfen";
    },
    get$kickFromChat() {
      return "Aus dem Chat hinauswerfen";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Zuletzt aktiv: " + localizedTimeShort;
    },
    get$leave() {
      return "Verlassen";
    },
    get$leftTheChat() {
      return "Hat den Chat verlassen";
    },
    get$lightTheme() {
      return "Hell";
    },
    loadCountMoreParticipants$1(count) {
      return count + " weitere Mitglieder laden";
    },
    get$dehydrate() {
      return "Sitzung exportieren und Ger\xe4t l\xf6schen";
    },
    get$dehydrateWarning() {
      return "Diese Aktion kann nicht r\xfcckg\xe4ngig gemacht werden. Stelle sicher, dass du die Sicherungsdatei sicher aufbewahrst.";
    },
    get$dehydrateTor() {
      return "TOR-Benutzer: Sitzung exportieren";
    },
    get$dehydrateTorLong() {
      return "F\xfcr TOR-Benutzer wird empfohlen, die Sitzung zu exportieren, bevor das Fenster geschlossen wird.";
    },
    get$loadingPleaseWait() {
      return "Lade \u2026 Bitte warten.";
    },
    get$loadMore() {
      return "Mehr laden \u2026";
    },
    get$locationDisabledNotice() {
      return "Standort ist deaktiviert. Bitte aktivieren, um den Standort teilen zu k\xf6nnen.";
    },
    get$locationPermissionDeniedNotice() {
      return "Standort-Berechtigung wurde abgelehnt. Bitte akzeptieren, um den Standort teilen zu k\xf6nnen.";
    },
    get$logout() {
      return "Abmelden";
    },
    get$memberChanges() {
      return "\xc4nderungen der Mitglieder";
    },
    get$mention() {
      return "Erw\xe4hnen";
    },
    get$messages() {
      return "Nachrichten";
    },
    get$messagesStyle() {
      return "Nachrichten:";
    },
    get$moderator() {
      return "Moderator";
    },
    get$newChat() {
      return "Neuer Chat";
    },
    get$newVerificationRequest() {
      return "Neue Verifikationsanfrage!";
    },
    get$next(_) {
      return "Weiter";
    },
    get$no() {
      return "Nein";
    },
    get$noConnectionToTheServer() {
      return "Keine Verbindung zum Server";
    },
    get$noEmotesFound() {
      return "Keine Emoticons gefunden. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Einladungslink teilen";
    },
    get$noPasswordRecoveryDescription() {
      return "Du hast bisher keine M\xf6glichkeit hinzugef\xfcgt, um dein Passwort zur\xfcckzusetzen.";
    },
    get$noPermission() {
      return "Keine Berechtigung";
    },
    get$noRoomsFound() {
      return "Keine R\xe4ume gefunden \u2026";
    },
    get$notifications() {
      return "Benachrichtigungen";
    },
    get$notificationsEnabledForThisAccount() {
      return "Benachrichtigungen f\xfcr dieses Konto aktiviert";
    },
    get$obtainingLocation() {
      return "Standort wird ermittelt \u2026";
    },
    get$offensive() {
      return "Beleidigend";
    },
    get$ok() {
      return "Ok";
    },
    get$oopsSomethingWentWrong() {
      return "Hoppla, da ist etwas schiefgelaufen\u2026";
    },
    get$oneClientLoggedOut() {
      return "Einer deiner Clients wurde abgemeldet";
    },
    get$addAccount() {
      return "Konto hinzuf\xfcgen";
    },
    get$enableMultiAccounts() {
      return "(BETA) Aktiviere Multi-Accounts f\xfcr dieses Ger\xe4t";
    },
    get$openInMaps() {
      return "In Maps \xf6ffnen";
    },
    get$link() {
      return "Link";
    },
    get$serverRequiresEmail() {
      return "Dieser Server muss deine E-Mail-Adresse f\xfcr die Registrierung \xfcberpr\xfcfen.";
    },
    get$or() {
      return "Oder";
    },
    get$participant() {
      return "Mitglied";
    },
    get$passphraseOrKey() {
      return "Passwort oder Wiederherstellungsschl\xfcssel";
    },
    get$password(_) {
      return "Passwort";
    },
    get$passwordHasBeenChanged() {
      return "Passwort wurde ge\xe4ndert";
    },
    get$overview() {
      return "\xdcbersicht";
    },
    get$notifyMeFor() {
      return "Benachrichtige mich f\xfcr";
    },
    get$passwordRecoverySettings() {
      return "Passwort-Wiederherstellungs-Einstellungen";
    },
    get$passwordRecovery() {
      return "Passwort wiederherstellen";
    },
    get$pickImage() {
      return "Bild w\xe4hlen";
    },
    get$pin() {
      return "Anpinnen";
    },
    get$pleaseChoose() {
      return "Bitte w\xe4hlen";
    },
    get$pleaseClickOnLink() {
      return "Bitte auf den Link in der E-Mail klicken und dann fortfahren.";
    },
    get$pleaseEnterYourPassword() {
      return "Bitte dein Passwort eingeben";
    },
    get$pleaseEnterYourPin() {
      return "Bitte gib deine Pin ein";
    },
    get$pleaseEnterYourUsername() {
      return "Bitte deinen Benutzernamen eingeben";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Bitte folge den Anweisungen auf der Website und tippe auf Weiter.";
    },
    get$privacy() {
      return "Privatsph\xe4re";
    },
    get$reason(_) {
      return "Grund";
    },
    redactedBy$1(username) {
      return "Gel\xf6scht von " + username;
    },
    get$directChat() {
      return "Privater Chat";
    },
    redactedByBecause$2(username, reason) {
      return "Gel\xf6scht von " + username + ' weil: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " hat ein Ereignis gel\xf6scht";
    },
    get$redactMessage() {
      return "Nachricht l\xf6schen";
    },
    get$reject() {
      return "Ablehnen";
    },
    rejectedTheInvitation$1(username) {
      return username + " hat die Einladung abgelehnt";
    },
    get$removeAllOtherDevices() {
      return "Alle anderen Ger\xe4te entfernen";
    },
    get$unbanFromChat() {
      return "Verbannung aufheben";
    },
    get$removeYourAvatar() {
      return "Deinen Avatar l\xf6schen";
    },
    get$replaceRoomWithNewerVersion() {
      return "Raum mit neuer Version ersetzen";
    },
    get$reply(_) {
      return "Antworten";
    },
    get$reportMessage() {
      return "Nachricht melden";
    },
    get$roomHasBeenUpgraded() {
      return "Der Raum wurde ge-upgraded";
    },
    get$roomVersion() {
      return "Raumversion";
    },
    get$search(_) {
      return "Suchen";
    },
    get$security() {
      return "Sicherheit";
    },
    get$send(_) {
      return "Senden";
    },
    get$sendAsText() {
      return "Sende als Text";
    },
    get$sendAudio() {
      return "Sende Audiodatei";
    },
    get$sendFile() {
      return "Datei senden";
    },
    get$sendImage() {
      return "Bild senden";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "Nachrichten senden";
    },
    get$sendVideo() {
      return "Sende Video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " hat eine Datei gesendet";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " hat eine Audio-Datei gesendet";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " hat ein Bild gesendet";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " hat einen Sticker gesendet";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " hat ein Video gesendet";
    },
    sentCallInformations$1(senderName) {
      return senderName + " hat Anrufinformationen geschickt";
    },
    get$separateChatTypes() {
      return "Separate Direktchats und Gruppen";
    },
    get$setAsCanonicalAlias() {
      return "Als Haupt-Alias festlegen";
    },
    get$setChatDescription() {
      return "Chatbeschreibung festlegen";
    },
    get$setPermissionsLevel() {
      return "Berechtigungsstufe einstellen";
    },
    get$settings() {
      return "Einstellungen";
    },
    get$share(_) {
      return "Teilen";
    },
    sharedTheLocation$1(username) {
      return username + " hat den Standort geteilt";
    },
    get$shareLocation() {
      return "Standort teilen";
    },
    get$presencesToggle() {
      return "Status-Nachrichten anderer Benutzer anzeigen";
    },
    get$skip(_) {
      return "\xdcberspringe";
    },
    get$sourceCode() {
      return "Quellcode";
    },
    get$spaceName() {
      return "Space-Name";
    },
    startedACall$1(senderName) {
      return senderName + " hat einen Anruf get\xe4tigt";
    },
    get$status(_) {
      return "Status";
    },
    get$submit(_) {
      return "Absenden";
    },
    get$synchronizingPleaseWait() {
      return "Synchronisiere... Bitte warten.";
    },
    get$systemTheme() {
      return "System";
    },
    get$theyDontMatch() {
      return "Stimmen nicht \xfcberein";
    },
    get$theyMatch() {
      return "Stimmen \xfcberein";
    },
    get$tooManyRequestsWarning() {
      return "Zu viele Anfragen. Bitte versuche es sp\xe4ter noch einmal!";
    },
    get$tryToSendAgain() {
      return "Noch mal versuchen zu senden";
    },
    unbannedUser$2(username, targetName) {
      return username + " hat die Verbannung von " + targetName + " aufgehoben";
    },
    get$unblockDevice() {
      return "Ger\xe4teblockierung aufheben";
    },
    get$unknownDevice() {
      return "Unbekanntes Ger\xe4t";
    },
    get$unknownEncryptionAlgorithm() {
      return "Unbekannter Verschl\xfcsselungsalgorithmus";
    },
    unknownEvent$1(type) {
      return "Unbekanntes Ereignis '" + type + "'";
    },
    get$unpin() {
      return "Nicht mehr anpinnen";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " und " + count + " andere schreiben \u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " und " + username2 + " schreiben \u2026";
    },
    userIsTyping$1(username) {
      return username + " schreibt\xa0\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " hat den Chat verlassen";
    },
    get$username(_) {
      return "Benutzername";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " hat ein " + type + "-Ereignis gesendet";
    },
    get$unverified() {
      return "Unverifiziert";
    },
    get$verified() {
      return "Verifiziert";
    },
    get$verifyStart() {
      return "Starte Verifikation";
    },
    get$verifySuccess() {
      return "Erfolgreich verifiziert!";
    },
    get$verifyTitle() {
      return "Anderes Konto wird verifiziert";
    },
    get$visibilityOfTheChatHistory() {
      return "Sichtbarkeit des Chat-Verlaufs";
    },
    get$visibleForAllParticipants() {
      return "Sichtbar f\xfcr alle Mitglieder";
    },
    get$visibleForEveryone() {
      return "F\xfcr jeden sichtbar";
    },
    get$voiceMessage() {
      return "Sprachnachricht";
    },
    get$waitingPartnerAcceptRequest() {
      return "Warte darauf, dass der Partner die Anfrage annimmt\xa0\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Warte darauf, dass der Partner die Emoji annimmt\xa0\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Warten, dass der Partner die Zahlen annimmt\xa0\u2026";
    },
    get$warning() {
      return "Achtung!";
    },
    get$weSentYouAnEmail() {
      return "Wir haben dir eine E-Mail gesendet";
    },
    get$whoCanPerformWhichAction() {
      return "Wer kann welche Aktion ausf\xfchren";
    },
    get$whoIsAllowedToJoinThisGroup() {
      return "Wer darf der Gruppe beitreten";
    },
    get$whyDoYouWantToReportThis() {
      return "Warum willst du dies melden?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Mit diesen Adressen kannst du dein Passwort wiederherstellen, wenn du es vergessen hast.";
    },
    get$writeAMessage() {
      return "Schreibe eine Nachricht \u2026";
    },
    writeAMessageFlag$2(l1flag, l2flag) {
      return "Write a message in " + l1flag + " or " + l2flag;
    },
    get$yes() {
      return "Ja";
    },
    get$you() {
      return "Du";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Du bist kein Mitglied mehr in diesem Chat";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Du wurdest aus dem Chat verbannt";
    },
    get$yourPublicKey() {
      return "Dein \xf6ffentlicher Schl\xfcssel";
    },
    get$messageInfo() {
      return "Nachrichten-Info";
    },
    get$time(_) {
      return "Zeit";
    },
    get$sender() {
      return "Absender:in";
    },
    get$openGallery() {
      return "Galerie \xf6ffnen";
    },
    get$removeFromSpace() {
      return "Aus dem Space entfernen";
    },
    videoWithSize$1(size) {
      return "Video (" + size + ")";
    },
    get$markAsRead() {
      return "Als gelesen markiert";
    },
    get$reportUser() {
      return "Benutzer melden";
    },
    reactedWith$2(sender, reaction) {
      return sender + " reagierte mit " + reaction;
    },
    get$pinMessage() {
      return "An Raum anheften";
    },
    get$confirmEventUnpin() {
      return "M\xf6chtest du das Ereignis wirklich dauerhaft l\xf6sen?";
    },
    get$emojis() {
      return "Emojis";
    },
    get$youRejectedTheInvitation() {
      return "Du hast die Einladung abgelehnt";
    },
    get$youJoinedTheChat() {
      return "Du bist dem Chat beigetreten";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Du hast die Einladung angenommen";
    },
    youBannedUser$1(user) {
      return "Du hast den " + user + " verbannt";
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Du hast die Einladung f\xfcr " + user + " zur\xfcckgezogen";
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Du wurdest von " + user + " eingeladen";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Du hast " + user + " eingeladen";
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Du hast " + user + " rausgeworfen";
    },
    youUnbannedUser$1(user) {
      return "Du hast die Verbannung von " + user + " r\xfcckg\xe4ngig gemacht";
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " hat angeklopft";
    },
    get$usersMustKnock() {
      return "Benutzer m\xfcssen anklopfen";
    },
    get$noOneCanJoin() {
      return "Niemand kann beitreten";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " w\xfcrde dem Chat gerne beitreten.";
    },
    get$knock() {
      return "Anklopfen";
    },
    get$users() {
      return "Benutzer";
    },
    countFiles$1(count) {
      return count + " Dateien";
    },
    get$user() {
      return "Benutzer";
    },
    get$custom() {
      return "Benutzerdefiniert";
    },
    get$noKeyForThisMessage() {
      return "Dies kann passieren, wenn die Nachricht gesendet wurde, bevor du dich auf diesem Ger\xe4t bei deinem Konto angemeldet hast.\n\nEs ist auch m\xf6glich, dass der Absender dein Ger\xe4t blockiert hat oder etwas mit der Internetverbindung schief gelaufen ist.\n\nKannst du die Nachricht in einer anderen Sitzung lesen? Dann kannst du die Nachricht davon \xfcbertragen! Gehe zu den Einstellungen > Ger\xe4te und vergewissere dich, dass sich deine Ger\xe4te gegenseitig verifiziert haben. Wenn du den Raum das n\xe4chste Mal \xf6ffnest und beide Sitzungen im Vordergrund sind, werden die Schl\xfcssel automatisch \xfcbertragen.\n\nDu m\xf6chtest die Schl\xfcssel beim Abmelden oder Ger\xe4tewechsel nicht verlieren? Stelle sicher, dass du das Chat-Backup in den Einstellungen aktiviert hast.";
    },
    get$newSpace() {
      return "Neuer Space";
    },
    get$doNotShowAgain() {
      return "Nicht mehr anzeigen";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Leerer Chat (war " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Chat wieder er\xf6ffnen";
    },
    get$noBackupWarning() {
      return "Achtung! Ohne Aktivierung des Chat-Backups verlierst du den Zugriff auf deine verschl\xfcsselten Nachrichten. Vor dem Ausloggen wird dringend empfohlen, das Chat-Backup zu aktivieren.";
    },
    get$noOtherDevicesFound() {
      return "Keine anderen Ger\xe4te anwesend";
    },
    fileIsTooBigForServer$1(max) {
      return "Kann nicht gesendet werden! Der Server unterst\xfctzt nur Anh\xe4nge bis h\xf6chstens " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "Zur letzten ungelesenen Nachricht";
    },
    get$readUpToHere() {
      return "Bis hier gelesen";
    },
    get$jump() {
      return "Springen";
    },
    get$openLinkInBrowser() {
      return "Link im Browser \xf6ffnen";
    },
    get$profileNotFound() {
      return "Der Benutzer konnte auf dem Server nicht gefunden werden. Vielleicht gibt es ein Verbindungsproblem oder der Benutzer existiert nicht.";
    },
    get$setColorTheme() {
      return "Farbdesign einstellen:";
    },
    get$invite() {
      return "Einladen";
    },
    get$invitePrivateChat() {
      return "\ud83d\udce8 Einladungen zum privaten Chat";
    },
    get$invalidInput() {
      return "Ung\xfcltige Eingabe!";
    },
    wrongPinEntered$1(seconds) {
      return "Falsche PIN eingegeben! Bitte in " + seconds + " Sekunden erneut versuchen ...";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$myLanguages() {
      return "My base and target languages";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$sourceLanguage() {
      return "Base language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By enabling this option, I confirm that I am of legal age in my country of residence";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$toggleToolSettingsDescription() {
      return "Here you can toggle your individual language tool settings.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$inviteStudentByUserNameDesc() {
      return "If your student already has an account, you can search for them.";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocabulary";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$abDisplayName() {
      return "Abkhaz";
    },
    get$aaDisplayName() {
      return "Afar";
    },
    get$afDisplayName() {
      return "Afrikaans";
    },
    get$akDisplayName() {
      return "Akan";
    },
    get$sqDisplayName() {
      return "Albanian";
    },
    get$amDisplayName() {
      return "Amharic";
    },
    get$arDisplayName() {
      return "Arabic";
    },
    get$anDisplayName() {
      return "Aragonese";
    },
    get$hyDisplayName() {
      return "Armenian";
    },
    get$asDisplayName() {
      return "Assamese";
    },
    get$avDisplayName() {
      return "Avaric";
    },
    get$aeDisplayName() {
      return "Avestan";
    },
    get$ayDisplayName() {
      return "Aymara";
    },
    get$azDisplayName() {
      return "Azerbaijani";
    },
    get$bmDisplayName() {
      return "Bambara";
    },
    get$baDisplayName() {
      return "Bashkir";
    },
    get$euDisplayName() {
      return "Basque";
    },
    get$beDisplayName() {
      return "Belarusian";
    },
    get$bnDisplayName() {
      return "Bengali";
    },
    get$bhDisplayName() {
      return "Bihari";
    },
    get$biDisplayName() {
      return "Bislama";
    },
    get$bsDisplayName() {
      return "Bosnian";
    },
    get$brDisplayName() {
      return "Breton";
    },
    get$bgDisplayName() {
      return "Bulgarian";
    },
    get$myDisplayName() {
      return "Burmese";
    },
    get$caDisplayName() {
      return "Catalan, Valencian";
    },
    get$chDisplayName() {
      return "Chamorro";
    },
    get$ceDisplayName() {
      return "Chechen";
    },
    get$nyDisplayName() {
      return "Chichewa, Chewa, Nyanja";
    },
    get$zhDisplayName() {
      return "Chinese";
    },
    get$cvDisplayName() {
      return "Chuvash";
    },
    get$kwDisplayName() {
      return "Cornish";
    },
    get$coDisplayName() {
      return "Corsican";
    },
    get$crDisplayName() {
      return "Cree";
    },
    get$hrDisplayName() {
      return "Croatian";
    },
    get$csDisplayName() {
      return "Czech";
    },
    get$daDisplayName() {
      return "Danish";
    },
    get$dvDisplayName() {
      return "Divehi; Dhivehi; Maldivian;";
    },
    get$nlDisplayName() {
      return "Dutch";
    },
    get$enDisplayName() {
      return "English";
    },
    get$eoDisplayName() {
      return "Esperanto";
    },
    get$etDisplayName() {
      return "Estonian";
    },
    get$eeDisplayName() {
      return "Ewe";
    },
    get$foDisplayName() {
      return "Faroese";
    },
    get$fjDisplayName() {
      return "Fijian";
    },
    get$fiDisplayName() {
      return "Finnish";
    },
    get$frDisplayName() {
      return "French";
    },
    get$ffDisplayName() {
      return "Fula; Fulah; Pulaar; Pular";
    },
    get$glDisplayName() {
      return "Galician";
    },
    get$kaDisplayName() {
      return "Georgian";
    },
    get$deDisplayName() {
      return "German";
    },
    get$elDisplayName() {
      return "Greek, Modern";
    },
    get$gnDisplayName() {
      return "Guaran\xed";
    },
    get$guDisplayName() {
      return "Gujarati";
    },
    get$htDisplayName() {
      return "Haitian, Haitian Creole";
    },
    get$haDisplayName() {
      return "Hausa";
    },
    get$heDisplayName() {
      return "Hebrew (modern)";
    },
    get$hzDisplayName() {
      return "Herero";
    },
    get$hiDisplayName() {
      return "Hindi";
    },
    get$hoDisplayName() {
      return "Hiri Motu";
    },
    get$huDisplayName() {
      return "Hungarian";
    },
    get$iaDisplayName() {
      return "Interlingua";
    },
    get$idDisplayName() {
      return "Indonesian";
    },
    get$ieDisplayName() {
      return "Interlingue";
    },
    get$gaDisplayName() {
      return "Irish";
    },
    get$igDisplayName() {
      return "Igbo";
    },
    get$ikDisplayName() {
      return "Inupiaq";
    },
    get$ioDisplayName() {
      return "Ido";
    },
    get$isDisplayName() {
      return "Icelandic";
    },
    get$itDisplayName() {
      return "Italian";
    },
    get$iuDisplayName() {
      return "Inuktitut";
    },
    get$jaDisplayName() {
      return "Japanese";
    },
    get$jvDisplayName() {
      return "Javanese";
    },
    get$klDisplayName() {
      return "Kalaallisut, Greenlandic";
    },
    get$knDisplayName() {
      return "Kannada";
    },
    get$krDisplayName() {
      return "Kanuri";
    },
    get$ksDisplayName() {
      return "Kashmiri";
    },
    get$kkDisplayName() {
      return "Kazakh";
    },
    get$kmDisplayName() {
      return "Khmer";
    },
    get$kiDisplayName() {
      return "Kikuyu, Gikuyu";
    },
    get$rwDisplayName() {
      return "Kinyarwanda";
    },
    get$kyDisplayName() {
      return "Kirghiz, Kyrgyz";
    },
    get$kvDisplayName() {
      return "Komi";
    },
    get$kgDisplayName() {
      return "Kongo";
    },
    get$koDisplayName() {
      return "Korean";
    },
    get$kuDisplayName() {
      return "Kurdish";
    },
    get$kjDisplayName() {
      return "Kwanyama, Kuanyama";
    },
    get$laDisplayName() {
      return "Latin";
    },
    get$lbDisplayName() {
      return "Luxembourgish, Letzeburgesch";
    },
    get$lgDisplayName() {
      return "Luganda";
    },
    get$liDisplayName() {
      return "Limburgish, Limburgan, Limburger";
    },
    get$lnDisplayName() {
      return "Lingala";
    },
    get$loDisplayName() {
      return "Lao";
    },
    get$ltDisplayName() {
      return "Lithuanian";
    },
    get$luDisplayName() {
      return "Luba-Katanga";
    },
    get$lvDisplayName() {
      return "Latvian";
    },
    get$gvDisplayName() {
      return "Manx";
    },
    get$mkDisplayName() {
      return "Macedonian";
    },
    get$mgDisplayName() {
      return "Malagasy";
    },
    get$msDisplayName() {
      return "Malay";
    },
    get$mlDisplayName() {
      return "Malayalam";
    },
    get$mtDisplayName() {
      return "Maltese";
    },
    get$miDisplayName() {
      return "M\u0101ori";
    },
    get$mrDisplayName() {
      return "Marathi (Mar\u0101\u1e6dh\u012b)";
    },
    get$mhDisplayName() {
      return "Marshallese";
    },
    get$mnDisplayName() {
      return "Mongolian";
    },
    get$naDisplayName() {
      return "Nauru";
    },
    get$nvDisplayName() {
      return "Navajo, Navaho";
    },
    get$nbDisplayName() {
      return "Norwegian Bokm\xe5l";
    },
    get$ndDisplayName() {
      return "North Ndebele";
    },
    get$neDisplayName() {
      return "Nepali";
    },
    get$ngDisplayName() {
      return "Ndonga";
    },
    get$nnDisplayName() {
      return "Norwegian Nynorsk";
    },
    get$noDisplayName() {
      return "Norwegian";
    },
    get$iiDisplayName() {
      return "Nuosu";
    },
    get$nrDisplayName() {
      return "South Ndebele";
    },
    get$ocDisplayName() {
      return "Occitan";
    },
    get$ojDisplayName() {
      return "Ojibwe, Ojibwa";
    },
    get$cuDisplayName() {
      return "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic";
    },
    get$omDisplayName() {
      return "Oromo";
    },
    get$orDisplayName() {
      return "Oriya";
    },
    get$osDisplayName() {
      return "Ossetian, Ossetic";
    },
    get$paDisplayName() {
      return "Panjabi, Punjabi";
    },
    get$piDisplayName() {
      return "P\u0101li";
    },
    get$faDisplayName() {
      return "Persian";
    },
    get$plDisplayName() {
      return "Polish";
    },
    get$psDisplayName() {
      return "Pashto, Pushto";
    },
    get$ptDisplayName() {
      return "Portuguese";
    },
    get$quDisplayName() {
      return "Quechua";
    },
    get$rmDisplayName() {
      return "Romansh";
    },
    get$rnDisplayName() {
      return "Kirundi";
    },
    get$roDisplayName() {
      return "Romanian, Moldavian, Moldovan";
    },
    get$ruDisplayName() {
      return "Russian";
    },
    get$saDisplayName() {
      return "Sanskrit (Sa\u1e41sk\u1e5bta)";
    },
    get$scDisplayName() {
      return "Sardinian";
    },
    get$sdDisplayName() {
      return "Sindhi";
    },
    get$seDisplayName() {
      return "Northern Sami";
    },
    get$smDisplayName() {
      return "Samoan";
    },
    get$sgDisplayName() {
      return "Sango";
    },
    get$srDisplayName() {
      return "Serbian";
    },
    get$gdDisplayName() {
      return "Scottish Gaelic, Gaelic";
    },
    get$snDisplayName() {
      return "Shona";
    },
    get$siDisplayName() {
      return "Sinhala, Sinhalese";
    },
    get$skDisplayName() {
      return "Slovak";
    },
    get$slDisplayName() {
      return "Slovene";
    },
    get$soDisplayName() {
      return "Somali";
    },
    get$stDisplayName() {
      return "Southern Sotho";
    },
    get$esDisplayName() {
      return "Spanish";
    },
    get$suDisplayName() {
      return "Sundanese";
    },
    get$swDisplayName() {
      return "Swahili";
    },
    get$ssDisplayName() {
      return "Swati";
    },
    get$svDisplayName() {
      return "Swedish";
    },
    get$taDisplayName() {
      return "Tamil";
    },
    get$teDisplayName() {
      return "Telugu";
    },
    get$tgDisplayName() {
      return "Tajik";
    },
    get$thDisplayName() {
      return "Thai";
    },
    get$tiDisplayName() {
      return "Tigrinya";
    },
    get$boDisplayName() {
      return "Tibetan Standard, Tibetan, Central";
    },
    get$tkDisplayName() {
      return "Turkmen";
    },
    get$tlDisplayName() {
      return "Tagalog";
    },
    get$tnDisplayName() {
      return "Tswana";
    },
    get$toDisplayName() {
      return "Tonga (Tonga Islands)";
    },
    get$trDisplayName() {
      return "Turkish";
    },
    get$tsDisplayName() {
      return "Tsonga";
    },
    get$ttDisplayName() {
      return "Tatar";
    },
    get$twDisplayName() {
      return "Twi";
    },
    get$tyDisplayName() {
      return "Tahitian";
    },
    get$ugDisplayName() {
      return "Uighur, Uyghur";
    },
    get$ukDisplayName() {
      return "Ukrainian";
    },
    get$urDisplayName() {
      return "Urdu";
    },
    get$uzDisplayName() {
      return "Uzbek";
    },
    get$veDisplayName() {
      return "Venda";
    },
    get$viDisplayName() {
      return "Vietnamese";
    },
    get$voDisplayName() {
      return "Volap\xfck";
    },
    get$waDisplayName() {
      return "Walloon";
    },
    get$cyDisplayName() {
      return "Welsh";
    },
    get$woDisplayName() {
      return "Wolof";
    },
    get$fyDisplayName() {
      return "Western Frisian";
    },
    get$xhDisplayName() {
      return "Xhosa";
    },
    get$yiDisplayName() {
      return "Yiddish";
    },
    get$yoDisplayName() {
      return "Yoruba";
    },
    get$zaDisplayName() {
      return "Zhuang, Chuang";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$zuDisplayName() {
      return "Zulu";
    },
    get$hawDisplayName() {
      return "Hawaiian";
    },
    get$hmnDisplayName() {
      return "Hmong";
    },
    get$multiDisplayName() {
      return "Multi";
    },
    get$cebDisplayName() {
      return "Cebuano";
    },
    get$dzDisplayName() {
      return "Dzongkha";
    },
    get$iwDisplayName() {
      return "Hebrew";
    },
    get$jwDisplayName() {
      return "Javanese";
    },
    get$moDisplayName() {
      return "Moldavian";
    },
    get$shDisplayName() {
      return "Serbo-Croatian";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$declinedInvitation() {
      return "Declined invitation";
    },
    get$acceptedInvitation() {
      return "Accepted invitation";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    get$pleaseEnterANumber() {
      return "Bitte eine Zahl gr\xf6\xdfer 0 eingeben";
    },
    get$archiveRoomDescription() {
      return "Der Chat wird in das Archiv verschoben. Andere Benutzer k\xf6nnen sehen, dass du den Chat verlassen hast.";
    },
    get$roomUpgradeDescription() {
      return "Der Chat wird dann mit der neuen Raumversion neu erstellt. Alle Teilnehmer werden benachrichtigt, dass sie zum neuen Chat wechseln m\xfcssen. Mehr \xfcber Raumversionen erf\xe4hrst du unter https://spec.matrix.org/latest/rooms/";
    },
    get$removeDevicesDescription() {
      return "Du wirst von diesem Ger\xe4t abgemeldet und kannst dann dort keine Nachrichten mehr empfangen.";
    },
    get$banUserDescription() {
      return "Der Benutzer wird aus dem Chat gebannt und kann den Chat erst wieder betreten, wenn die Verbannung aufgehoben wird.";
    },
    get$unbanUserDescription() {
      return "Der Benutzer kann den Chat dann wieder betreten, wenn er es versucht.";
    },
    get$kickUserDescription() {
      return "Der Benutzer wird aus dem Chat geworfen, aber nicht gebannt. In \xf6ffentlichen Chats kann der Benutzer jederzeit wieder beitreten.";
    },
    get$makeAdminDescription() {
      return "Sobald du diesen Benutzer zum Administrator gemacht hast, kannst du das m\xf6glicherweise nicht mehr r\xfcckg\xe4ngig machen, da er dann \xfcber dieselben Berechtigungen wie du verf\xfcgt.";
    },
    get$yourGlobalUserIdIs() {
      return "Deine globale Benutzer-ID ist: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Leider konnte mit "' + query + '" kein Benutzer gefunden werden. Bitte schau nach, ob dir ein Tippfehler unterlaufen ist.';
    },
    get$knocking() {
      return "Klopft";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "Chat kann \xfcber die Suche auf " + server + " gefunden werden";
    },
    get$searchChatsRooms() {
      return "Suche nach #Chats, @Nutzer ...";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$nothingFound() {
      return "Nichts gefunden ...";
    },
    get$wrongRecoveryKey() {
      return "Entschuldigung ... das scheint nicht der richtige Wiederherstellungsschl\xfcssel zu sein.";
    },
    get$startConversation() {
      return "Unterhaltung starten";
    },
    get$commandHint_sendraw() {
      return "Rohes JSON senden";
    },
    get$searchForUsers() {
      return "Suche nach @benutzer ...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Bitte dein aktuelles Passwort eingeben";
    },
    get$newPassword() {
      return "Neues Passwort";
    },
    get$pleaseChooseAStrongPassword() {
      return "Bitte w\xe4hle ein starkes Passwort";
    },
    get$passwordsDoNotMatch() {
      return "Passw\xf6rter stimmen nicht \xfcberein";
    },
    get$passwordIsWrong() {
      return "Dein eingegebenes Passwort ist falsch";
    },
    get$publicChatAddresses() {
      return "\xd6ffentliche Chat-Adressen";
    },
    get$createNewAddress() {
      return "Neue Adresse erstellen";
    },
    get$joinSpace() {
      return "Space beitreten";
    },
    get$publicSpaces() {
      return "\xd6ffentliche Spaces";
    },
    get$decline() {
      return "Ablehnen";
    },
    get$thisDevice() {
      return "Dieses Ger\xe4t:";
    },
    get$initAppError() {
      return "Beim Starten der App ist ein Fehler aufgetreten";
    },
    get$userRole() {
      return "Benutzerrolle";
    },
    searchIn$1(chat) {
      return 'In Chat "' + chat + '" suchen ...';
    },
    get$searchMore() {
      return "Weiter suchen ...";
    },
    get$gallery() {
      return "Galerie";
    },
    get$files(_) {
      return "Dateien";
    },
    sessionLostBody$2(url, error) {
      return string$.Die_Ap + url + ". Die Fehlermeldung lautet: " + error;
    },
    restoreSessionBody$2(url, error) {
      return string$.Die_Ap + url + ". Die Fehlermeldung lautet: " + error;
    },
    forwardMessageTo$1(roomName) {
      return "Nachricht weiterleiten an " + roomName + "?";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$sendReadReceipts() {
      return "Lesebest\xe4tigungen senden";
    },
    get$sendTypingNotificationsDescription() {
      return "Andere Teilnehmer in einem Chat k\xf6nnen sehen, wenn du eine neue Nachricht tippst.";
    },
    get$sendReadReceiptsDescription() {
      return "Andere Teilnehmer in einem Chat k\xf6nnen sehen, ob du eine Nachricht gelesen hast.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Anderes Ger\xe4t verifizieren";
    },
    get$verifyOtherDeviceDescription() {
      return "Wenn du ein anderes Ger\xe4t verifizieren, k\xf6nnen diese Ger\xe4teschl\xfcssel austauschen, was die Sicherheit insgesamt erh\xf6ht. \ud83d\udcaa\n\nSobald du eine Verifizierung starten, erscheint ein Pop-up in der App auf beiden Ger\xe4ten. Dort siehst du dann eine Reihe von Emojis oder Zahlen, die du miteinander vergleichen musst.\n\nAm besten h\xe4ltst du beide Ger\xe4te bereit, bevor du die Verifizierung startest. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " hat die Schl\xfcsselverifikation akzeptiert";
    },
    canceledKeyVerification$1(sender) {
      return sender + " hat die Schl\xfcsselverifikation abgebrochen";
    },
    completedKeyVerification$1(sender) {
      return sender + " hat die Schl\xfcsselverifikation abgeschlossen";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " ist bereit f\xfcr die Schl\xfcsselverifikation";
    },
    requestedKeyVerification$1(sender) {
      return sender + " hat eine Schl\xfcsselverifikation angefragt";
    },
    startedKeyVerification$1(sender) {
      return sender + " hat die Schl\xfcsselverifikation gestartet";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$stickers() {
      return "Sticker";
    },
    get$discover() {
      return "Entdecken";
    },
    get$commandHint_ignore() {
      return "Angegebene Matrix-ID ignorieren";
    },
    get$commandHint_unignore() {
      return "Angegebene Matrix-ID nicht mehr ignorieren";
    },
    get$accuracy(_) {
      return "Accuracy";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run language assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run language assistance after typing messages";
    },
    get$leaveRoomDescription() {
      return "The chat will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$leaveSpaceDescription() {
      return "All chats within this space will be moved to the archive. Other users will be able to see that you have left the space.";
    },
    get$onlyAdminDescription() {
      return "Since there are no other admins, all other participants will also be removed.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$spaceCapacity() {
      return "Space capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$spaceCapacityHasBeenChanged() {
      return "Space capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of non-admins.";
    },
    get$spaceCapacitySetTooLow() {
      return "Space capacity cannot be set below the current number of non-admins.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of non-admins allowed in a chat.";
    },
    get$spaceCapacityExplanation() {
      return "Space capacity limits the number of non-admins allowed in a space.";
    },
    get$chatExceedsCapacity() {
      return "This chat exceeds its capacity.";
    },
    get$spaceExceedsCapacity() {
      return "This space exceeds its capacity.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Im Augenblick werden " + count + " Benutzer blockiert.";
    },
    get$restricted() {
      return "Beschr\xe4nkt";
    },
    get$knockRestricted() {
      return "Anklopfen beschr\xe4nkt";
    },
    get$createNewSpace() {
      return "Neuer Space";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "See how well you did by looking at your Accuracy and Words Per Minute scores";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$continueText() {
      return "Fortfahren";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$sendCanceled() {
      return "Senden abgebrochen";
    },
    goToSpace$1(space) {
      return "Geh zum Space: " + space;
    },
    get$markAsUnread() {
      return "Als ungelesen markieren";
    },
    userLevel$1(level) {
      return "" + level + " - Benutzer";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Administrator";
    },
    get$changeGeneralChatSettings() {
      return "Allgemeine Chat-Einstellungen \xe4ndern";
    },
    get$inviteOtherUsers() {
      return "Lade andere Benutzer in diesen Chat ein";
    },
    get$changeTheChatPermissions() {
      return "\xc4ndere die Chat-Berechtigungen";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Wechsele die Sichtbarkeit der Chat-Historie";
    },
    get$changeTheCanonicalRoomAlias() {
      return "\xc4ndern der Hauptadresse f\xfcr den \xf6ffentlichen Chat";
    },
    get$sendRoomNotifications() {
      return "Sende eine @room-Benachrichtigung";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Chat-Beschreibung \xe4ndern";
    },
    get$chatPermissionsDescription() {
      return "Einstellen, welches Level f\xfcr bestimmte Aktionen in diesem Chat erforderlich ist. Die Level 0, 50 und 100 stehen \xfcblicherweise f\xfcr Benutzer, Moderatoren und Admins, aber jede Abstufung ist m\xf6glich.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Update " + version + " installiert!";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Scheint kein kompatibler Homeserver zu sein. Falsche URL?";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$unlockedLanguageTools() {
      return "You\u2019ve unlocked the language tools for this message. Try them out by clicking below!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$calculatingFileSize() {
      return "Dateigr\xf6\xdfe wird berechnet ...";
    },
    get$prepareSendingAttachment() {
      return "Anhang zum Senden vorbereiten ...";
    },
    get$sendingAttachment() {
      return "Anhang wird gesendet ...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Sende Anhang " + index + " von " + $length + " ...";
    },
    serverLimitReached$1(seconds) {
      return "Server-Limit erreicht! Warte " + seconds + " Sekunden ...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Hinweis: Wenn du alle deine Ger\xe4te mit dem Chat-Backup verbindest, sind sie automatisch verifiziert.";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$blur(_) {
      return "Verwischen:";
    },
    get$opacity(_) {
      return "Deckkraft:";
    },
    get$setWallpaper() {
      return "Hintergrund \xe4ndern";
    },
    get$noContactInformationProvided() {
      return "Der Server stellt keine g\xfcltigen Kontaktinformationen bereit";
    },
    get$contactServerAdmin() {
      return "Serveradministrator kontaktieren";
    },
    get$contactServerSecurity() {
      return "Contact server security";
    },
    get$supportPage() {
      return "Support page";
    },
    get$serverInformation() {
      return "Server information:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Fetter Text";
    },
    get$italicText() {
      return "Kursiver Text";
    },
    get$strikeThrough() {
      return "Durchgestrichen";
    },
    get$pleaseFillOut() {
      return "Bitte ausf\xfcllen";
    },
    get$invalidUrl() {
      return "Ung\xfcltige URL";
    },
    get$addLink() {
      return "Link hinzuf\xfcgen";
    },
    get$unableToJoinChat() {
      return "Chat kann nicht beigetreten werden. M\xf6glicherweise hat die Gegenseite das Gespr\xe4ch bereits beendet.";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$mandatoryUpdateRequired() {
      return "Mandatory Update Required";
    },
    get$updateAvailable() {
      return "Update Available";
    },
    get$mandatoryUpdateRequiredDesc() {
      return "A new version of the app is required to continue. Please update now to proceed.";
    },
    get$updateAvailableDesc() {
      return "A new version of the app is available. Update now for the latest features and improvements!";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language";
    },
    get$couldNotFindTTS() {
      return "We couldn't find a text-to-speech engine for your current target language. ";
    },
    get$ttsInstructionsHyperlink() {
      return "Click here to view instructions for downloading a new voice on your device.";
    },
    get$currentVersion() {
      return "Current Version";
    },
    get$latestVersion() {
      return "Latest Version";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseAgreeToTOS() {
      return "Please agree to the Terms and Conditions";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.L10nDe, C.L10n);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nDe":{"L10n":[]}}'));
  var string$ = {
    Die_Ap: "Die App versucht nun, deine Sitzung aus der Sicherung wiederherzustellen. Bitte melde diesen Fehler an die Entwickler unter "
  };
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_209", e: "endPart", h: h});
})($__dart_deferred_initializers__, "P/mQADJG6qQjZDqR85ixRKjGFC0=");
;
//# sourceMappingURL=main.dart.js_209.part.js.map
