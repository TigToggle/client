// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.6.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_248", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nNl$() {
      return new A.L10nNl(B.canonicalizedLocale("nl"));
    },
    L10nNl: function L10nNl(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[51];
  A = hunkHelpers.updateHolder(holdersList[38], A);
  A.L10nNl.prototype = {
    get$alwaysUse24HourFormat() {
      return "true";
    },
    get$repeatPassword() {
      return "Wachtwoord herhalen";
    },
    get$notAnImage() {
      return "Geen afbeeldingsbestand.";
    },
    get$remove(_) {
      return "Verwijder";
    },
    get$importNow() {
      return "Nu importeren";
    },
    get$importEmojis() {
      return "Emoji's importeren";
    },
    get$importFromZipFile() {
      return "Uit zip-bestand importeren";
    },
    get$exportEmotePack() {
      return "Emote-pakket als zip exporteren";
    },
    get$replace(_) {
      return "Vervang";
    },
    aboutHomeserver$1(homeserver) {
      return "Over " + homeserver;
    },
    get$accept(_) {
      return "Accepteren";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " heeft de uitnodiging geaccepteerd";
    },
    get$account() {
      return "Account";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " heeft eind-tot-eindversleuteling geactiveerd";
    },
    get$addEmail() {
      return "Email toevoegen";
    },
    supposedMxid$1(mxid) {
      return "Dit moet " + mxid + " zijn";
    },
    get$addToSpace() {
      return "Aan space toevoegen";
    },
    get$admin() {
      return "Beheerder";
    },
    get$alias() {
      return "alias";
    },
    get$all() {
      return "Alle";
    },
    get$commandHint_googly() {
      return "Wat wiebelogen versturen";
    },
    get$commandHint_cuddle() {
      return "Een knuffel versturen";
    },
    get$commandHint_hug() {
      return "Een knuffel versturen";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " stuurt je wiebelogen";
    },
    cuddleContent$1(senderName) {
      return senderName + " knuffelt je";
    },
    hugContent$1(senderName) {
      return senderName + " omhelst je";
    },
    answeredTheCall$1(senderName) {
      return senderName + " heeft de oproep beantwoord";
    },
    get$anyoneCanJoin() {
      return "Iedereen kan deelnemen";
    },
    get$archive() {
      return "Archief";
    },
    get$areGuestsAllowedToJoin() {
      return "Mogen gasten deelnemen";
    },
    get$areYouSure() {
      return "Weet je het zeker?";
    },
    get$areYouSureYouWantToLogout() {
      return "Weet je zeker dat je wilt uitloggen?";
    },
    get$askSSSSSign() {
      return "Voer je beveiligde opslag wachtwoordzin of herstelsleutel in om de andere persoon te kunnen ondertekenen.";
    },
    askVerificationRequest$1(username) {
      return "Accepteer je dit verificatieverzoek van " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "De homeserver ondersteunt de login types:\n" + serverVersions + "\nMaar deze app ondersteunt alleen:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Typemeldingen verzenden";
    },
    get$swipeRightToLeftToReply() {
      return "Veeg van rechts naar links om te reageren";
    },
    get$sendOnEnter() {
      return "Verstuur met enter";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "De homeserver ondersteunt de Spec-versies:\n" + serverVersions + "\nMaar deze app ondersteunt alleen " + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " chats en " + participants + " deelnemers";
    },
    get$noMoreChatsFound() {
      return "Geen chats gevonden...";
    },
    get$noChatsFoundHere() {
      return "Hier zijn nog geen chats. Begin een nieuwe chat met iemand door op de onderstaande knop te klikken. \u2935\ufe0f";
    },
    get$unread() {
      return "Zet als ongelezen";
    },
    get$space() {
      return "Space";
    },
    get$spaces() {
      return "Spaces";
    },
    get$banFromChat() {
      return "Van chat verbannen";
    },
    get$banned() {
      return "Verbannen";
    },
    bannedUser$2(username, targetName) {
      return username + " verbant " + targetName;
    },
    get$blockDevice() {
      return "Apparaat blokkeren";
    },
    get$blocked() {
      return "Geblokkeerd";
    },
    get$cancel(_) {
      return "Annuleren";
    },
    cantOpenUri$1(uri) {
      return "Kan de URI " + uri + " niet openen";
    },
    get$changeDeviceName() {
      return "Apparaatnaam wijzigen";
    },
    changedTheChatAvatar$1(username) {
      return username + " heeft de chatavatar gewijzigd";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " heeft de chatomschrijving gewijzigd in: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " heeft de chatnaam gewijzigd in: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " heeft de chatrechten gewijzigd";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + "'s naam is nu '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " heeft de toegangsregels voor gasten gewijzigd";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " heeft de gastenregels gewijzigd in: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " heeft de zichtbaarheid van de geschiedenis gewijzigd";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " heeft de zichtbaarheid van de geschiedenis gewijzigd in: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " heeft de deelnameregels gewijzigd";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " heeft de deelnameregels gewijzigd in: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + "'s avatar is gewijzigd";
    },
    changedTheRoomAliases$1(username) {
      return username + " heeft de kameraliassen gewijzigd";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " heeft de uitnodigingslink gewijzigd";
    },
    get$changePassword() {
      return "Wachtwoord wijzigen";
    },
    get$changeTheme() {
      return "Stijl veranderen";
    },
    get$changeYourAvatar() {
      return "Jouw avatar veranderen";
    },
    get$channelCorruptedDecryptError() {
      return "De versleuteling is beschadigd";
    },
    get$chat() {
      return "Chat";
    },
    get$chatDetails() {
      return "Chatdetails";
    },
    get$chats() {
      return "Chats";
    },
    get$chooseAStrongPassword() {
      return "Kies een sterk wachtwoord";
    },
    get$clearArchive() {
      return "Archief wissen";
    },
    get$close(_) {
      return "Sluiten";
    },
    get$commandHint_markasdm() {
      return "Markeer als priv\xe9berichtenkamer voor Matrix ID";
    },
    get$commandHint_markasgroup() {
      return "Markeer als groep";
    },
    get$commandHint_ban() {
      return "Persoon uit deze kamer verbannen";
    },
    get$commandHint_clearcache() {
      return "Cache wissen";
    },
    get$commandHint_create() {
      return "Maak een lege groepschat\nGebruik --no-encryption om de versleuteling uit te schakelen";
    },
    get$commandHint_discardsession() {
      return "Sessie weggooien";
    },
    get$commandHint_dm() {
      return "Start een directe chat\nGebruik --no-encryption om de versleuteling uit te schakelen";
    },
    get$commandHint_html() {
      return "Tekst met HTML-opmaak versturen";
    },
    get$commandHint_invite() {
      return "Persoon in deze kamer uitnodigen";
    },
    get$commandHint_join() {
      return "Deelnemen aan de kamer";
    },
    get$commandHint_kick() {
      return "Persoon uit deze kamer verwijderen";
    },
    get$commandHint_leave() {
      return "Deze kamer verlaten";
    },
    get$commandHint_me() {
      return "Beschrijf jezelf";
    },
    get$commandHint_myroomavatar() {
      return "Jouw avatar voor deze kamer instellen (met mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Jouw naam voor deze kamer instellen";
    },
    get$commandHint_op() {
      return "Machtsniveau van de persoon instellen (standaard: 50)";
    },
    get$commandHint_plain() {
      return "Niet-opgemaakte tekst versturen";
    },
    get$commandHint_react() {
      return "Antwoord als reactie versturen";
    },
    get$commandHint_send() {
      return "Tekst versturen";
    },
    get$commandHint_unban() {
      return "Persoon weer in deze kamer toestaan";
    },
    get$commandInvalid() {
      return "Opdracht ongeldig";
    },
    commandMissing$1(command) {
      return command + " is geen opdracht.";
    },
    get$compareEmojiMatch() {
      return "Vergelijk de emoji's";
    },
    get$compareNumbersMatch() {
      return "Vergelijk de cijfers";
    },
    get$configureChat() {
      return "Chat configureren";
    },
    get$confirm(_) {
      return "Bevestigen";
    },
    get$contentHasBeenReported() {
      return "De inhoud is gerapporteerd aan de serverbeheerders";
    },
    get$copiedToClipboard() {
      return "Gekopieerd naar klembord";
    },
    get$copy(_) {
      return "Bericht kopi\xebren";
    },
    couldNotDecryptMessage$1(error) {
      return "Kan het bericht niet ontsleutelen: " + error;
    },
    countParticipants$1(count) {
      return "" + count + " personen";
    },
    get$create(_) {
      return "Aanmaken";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " heeft de chat gemaakt";
    },
    get$createGroup() {
      return "Groep aanmaken";
    },
    get$createNewSpace() {
      return "Nieuwe space";
    },
    get$currentlyActive() {
      return "Momenteel actief";
    },
    get$darkTheme() {
      return "Donker";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Hierdoor wordt je account gedeactiveerd. Dit kan niet ongedaan gemaakt worden! Weet je het zeker?";
    },
    get$defaultPermissionLevel() {
      return "Standaard machtigingsniveau voor nieuwe personen";
    },
    get$$delete(_) {
      return "Verwijderen";
    },
    get$deleteAccount() {
      return "Account verwijderen";
    },
    get$deleteMessage() {
      return "Bericht verwijderen";
    },
    get$devices() {
      return "Apparaten";
    },
    get$displaynameHasBeenChanged() {
      return "De naam is gewijzigd";
    },
    get$downloadFile() {
      return "Bestand downloaden";
    },
    get$edit() {
      return "Wijzig";
    },
    get$editBlockedServers() {
      return "Geblokkeerde servers wijzigen";
    },
    get$chatPermissions() {
      return "Chat toestemmingen";
    },
    get$editDisplayname() {
      return "Naam wijzigen";
    },
    get$editRoomAliases() {
      return "Kameraliassen wijzigen";
    },
    get$editRoomAvatar() {
      return "Kameravatar wijzigen";
    },
    get$emoteExists() {
      return "Emoticon bestaat al!";
    },
    get$emoteInvalid() {
      return "Ongeldige emoticon korte code!";
    },
    get$emoteKeyboardNoRecents() {
      return "Recent-gebruikte emoticons zullen hier verschijnen...";
    },
    get$emotePacks() {
      return "Emoticonpakketten voor de kamer";
    },
    get$globalChatId() {
      return "Globale chat ID";
    },
    get$accessAndVisibility() {
      return "Toegang en zichtbaarheid";
    },
    get$customEmojisAndStickers() {
      return "Aangepaste emojis and stickers";
    },
    get$emoteShortcode() {
      return "Emoticon korte code";
    },
    get$emoteWarnNeedToPick() {
      return "Je moet een emoticon korte code en afbeelding kiezen!";
    },
    get$emptyChat() {
      return "Lege chat";
    },
    get$enableEmotesGlobally() {
      return "Emoticonpakket overal inschakelen";
    },
    get$enableEncryption() {
      return "Versleuteling inschakelen";
    },
    get$encrypted() {
      return "Versleuteld";
    },
    get$encryptionNotEnabled() {
      return "Versleuteling is niet ingeschakeld";
    },
    endedTheCall$1(senderName) {
      return senderName + " heeft het gesprek be\xebindigd";
    },
    get$enterAnEmailAddress() {
      return "Voer een email in";
    },
    errorObtainingLocation$1(error) {
      return "Locatie ophalen fout: " + error;
    },
    get$extremeOffensive() {
      return "Extreem beledigend";
    },
    get$fontSize(_) {
      return "Lettergrootte";
    },
    get$forward(_) {
      return "Stuur door";
    },
    get$fromJoining() {
      return "Vanaf deelname";
    },
    get$fromTheInvitation() {
      return "Vanaf uitnodiging";
    },
    get$goToTheNewRoom() {
      return "Ga naar de nieuwe kamer";
    },
    get$groups() {
      return "Groepen";
    },
    get$guestsAreForbidden() {
      return "Gasten zijn verboden";
    },
    get$guestsCanJoin() {
      return "Gasten kunnen deelnemen";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " heeft de uitnodiging voor " + targetName + " ingetrokken";
    },
    get$help() {
      return "Help";
    },
    get$hideRedactedMessages() {
      return "Verberg verwijderde berichten";
    },
    get$hideRedactedMessagesBody() {
      return "Als iemand een bericht verwijdert, is dit bericht niet meer zichtbaar in de chat.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Verberg ongeldige of onbekende berichtformaten";
    },
    get$howOffensiveIsThisContent() {
      return "Hoe beledigend is deze inhoud?";
    },
    get$block() {
      return "Blokkeren";
    },
    get$blockedUsers() {
      return "Geblokkeerde personen";
    },
    get$blockListDescription() {
      return "Je kunt personen blokkeren die je lastig vallen. Je kan dan geen berichten meer ontvangen of kameruitnodigingen krijgen van de personen op je blokkeerlijst.";
    },
    get$blockUsername() {
      return "Negeer gebruikersnaam";
    },
    get$iHaveClickedOnLink() {
      return "Ik heb op de link geklikt";
    },
    get$incorrectPassphraseOrKey() {
      return "Onjuiste wachtwoordzin of herstelsleutel";
    },
    get$inviteContact() {
      return "Contact uitnodigen";
    },
    get$noChatDescriptionYet() {
      return "Nog geen chatbeschrijving gemaakt.";
    },
    get$tryAgain() {
      return "Opnieuw proberen";
    },
    get$invited() {
      return "Uitgenodigd";
    },
    get$redactMessageDescription() {
      return "Het bericht zal worden aangepast voor alle deelnemers in dit gesprek. Dit kan niet ongedaan gemaakt worden.";
    },
    get$optionalRedactReason() {
      return "(Optioneel) Reden voor aanpassing van dit bericht...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " heeft " + targetName + " uitgenodigd";
    },
    get$invitedUsersOnly() {
      return "Alleen uitgenodigde personen";
    },
    inviteText$2(username, link) {
      return username + " heeft je uitgenodigd voor FluffyChat.\n1. Bezoek https://fluffychat.im en installeer de app\n2. Registreer of log in\n3. Open deze uitnodigingslink:\n" + link;
    },
    get$isTyping() {
      return "is aan het typen\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " is toegetreden tot de chat";
    },
    get$joinRoom() {
      return "Deelnemen";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " heeft " + targetName + " verwijderd";
    },
    get$kickFromChat() {
      return "Uit chat verwijderen";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Laatst actief: " + localizedTimeShort;
    },
    get$leave() {
      return "Chat verlaten";
    },
    get$leftTheChat() {
      return "Verliet de chat";
    },
    get$lightTheme() {
      return "Licht";
    },
    loadCountMoreParticipants$1(count) {
      return "Laad nog " + count + " personen";
    },
    get$dehydrate() {
      return "Sessie exporteren en apparaat wissen";
    },
    get$dehydrateWarning() {
      return "Deze actie kan niet ongedaan worden gemaakt. Zorg ervoor dat je het back-upbestand veilig opslaat.";
    },
    get$dehydrateTor() {
      return "TOR-sessies: Exporteer sessie";
    },
    get$dehydrateTorLong() {
      return "Voor TOR-sessies is het aanbevolen de sessie te exporteren alvorens het venster te sluiten.";
    },
    get$loadingPleaseWait() {
      return "Bezig met laden\u2026 Even geduld.";
    },
    get$loadMore() {
      return "Meer laden\u2026";
    },
    get$locationDisabledNotice() {
      return "Locatievoorzieningen is uitgeschakeld. Zet dit eerst aan om je locatie te delen.";
    },
    get$locationPermissionDeniedNotice() {
      return "Locatievoorzieningen is geweigerd. Zet hem aan om locatie delen te gebruiken.";
    },
    get$logout() {
      return "Uitloggen";
    },
    get$mention() {
      return "Vermeld";
    },
    get$messages() {
      return "Berichten";
    },
    get$messagesStyle() {
      return "Berichten:";
    },
    get$moderator() {
      return "Moderator";
    },
    get$newChat() {
      return "Nieuwe chat";
    },
    get$newVerificationRequest() {
      return "Nieuw verificatieverzoek!";
    },
    get$next(_) {
      return "Volgende";
    },
    get$no() {
      return "Nee";
    },
    get$noConnectionToTheServer() {
      return "Geen verbinding met de server";
    },
    get$noEmotesFound() {
      return "Geen emoticons gevonden. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Uitnodigingslink delen";
    },
    get$noPasswordRecoveryDescription() {
      return "Je hebt nog geen manier toegevoegd om je wachtwoord te herstellen.";
    },
    get$noPermission() {
      return "Geen toestemming";
    },
    get$noRoomsFound() {
      return "Geen kamers gevonden \u2026";
    },
    get$notifications() {
      return "Notificaties";
    },
    get$obtainingLocation() {
      return "Locatie ophalen\u2026";
    },
    get$offensive() {
      return "Beledigend";
    },
    get$ok() {
      return "OK";
    },
    get$oopsSomethingWentWrong() {
      return "Oeps, er ging iets mis\u2026";
    },
    get$oneClientLoggedOut() {
      return "\xc9\xe9n van jouw apparaten is uitgelogd";
    },
    get$addAccount() {
      return "Account toevoegen";
    },
    get$enableMultiAccounts() {
      return "(BETA) Multi-accounts inschakelen op dit apparaat";
    },
    get$openInMaps() {
      return "In kaarten openen";
    },
    get$link() {
      return "Link";
    },
    get$serverRequiresEmail() {
      return "Deze server wil je email laten bevestigen bij de registratie.";
    },
    get$or() {
      return "Of";
    },
    get$participant() {
      return "Personen";
    },
    get$passphraseOrKey() {
      return "wachtwoordzin of herstelsleutel";
    },
    get$password(_) {
      return "Wachtwoord";
    },
    get$passwordForgotten() {
      return "Wachtwoord vergeten";
    },
    get$passwordHasBeenChanged() {
      return "Wachtwoord gewijzigd";
    },
    get$overview() {
      return "Overzicht";
    },
    get$passwordRecoverySettings() {
      return "Wachtwoord herstel instellingen";
    },
    get$passwordRecovery() {
      return "Wachtwoordherstel";
    },
    get$pickImage() {
      return "Kies een afbeelding";
    },
    get$pin() {
      return "Pin";
    },
    get$pleaseChoose() {
      return "Maak een keuze";
    },
    get$pleaseEnterYourPassword() {
      return "Voer jouw wachtwoord in";
    },
    get$pleaseEnterYourPin() {
      return "Voer je pincode in";
    },
    get$pleaseEnterYourUsername() {
      return "Voer je inlognaam in";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Volg de instructies op de website en tik op volgende.";
    },
    get$privacy() {
      return "Privacy";
    },
    get$reason(_) {
      return "Reden";
    },
    redactedBy$1(username) {
      return "Aangepast door " + username;
    },
    get$directChat() {
      return "Directe chat";
    },
    redactedByBecause$2(username, reason) {
      return "Aangepast door " + username + ', reden: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " heeft een event verwijderd";
    },
    get$redactMessage() {
      return "Aangepast bericht";
    },
    get$reject() {
      return "Afwijzen";
    },
    rejectedTheInvitation$1(username) {
      return username + " heeft de uitnodiging afgewezen";
    },
    get$removeAllOtherDevices() {
      return "Verwijder alle andere apparaten";
    },
    get$unbanFromChat() {
      return "Verbanning opheffen";
    },
    get$removeYourAvatar() {
      return "Jouw avatar verwijderen";
    },
    get$replaceRoomWithNewerVersion() {
      return "Kamerversie upgraden";
    },
    get$reply(_) {
      return "Antwoord";
    },
    get$reportMessage() {
      return "Bericht rapporteren";
    },
    get$roomHasBeenUpgraded() {
      return "Kamer is ge\xfcpgrade";
    },
    get$roomVersion() {
      return "Kamerversie";
    },
    get$search(_) {
      return "Zoeken";
    },
    get$security() {
      return "Beveiliging";
    },
    get$send(_) {
      return "Verstuur";
    },
    get$sendAMessage() {
      return "Stuur een bericht";
    },
    get$sendAsText() {
      return "Als tekst versturen";
    },
    get$sendAudio() {
      return "Audio versturen";
    },
    get$sendFile() {
      return "Bestand versturen";
    },
    get$sendImage() {
      return "Afbeelding versturen";
    },
    sendImages$1(count) {
      return "Stuur " + count + " afbeelding(en)";
    },
    get$sendMessages() {
      return "Berichten versturen";
    },
    get$sendVideo() {
      return "Video versturen";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " heeft een bestand verzonden";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " heeft een audio verzonden";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " heeft een afbeelding verzonden";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " heeft een sticker verzonden";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " heeft een video verzonden";
    },
    sentCallInformations$1(senderName) {
      return senderName + " heeft oproepgegevens verzonden";
    },
    get$separateChatTypes() {
      return "Gescheiden directe chats en groepen";
    },
    get$setAsCanonicalAlias() {
      return "Als hoofdalias instellen";
    },
    get$setChatDescription() {
      return "Chatbeschrijving instellen";
    },
    get$setPermissionsLevel() {
      return "Machtigingsniveau instellen";
    },
    get$settings() {
      return "Instellingen";
    },
    get$share(_) {
      return "Delen";
    },
    sharedTheLocation$1(username) {
      return username + " heeft deze locatie gedeeld";
    },
    get$shareLocation() {
      return "Locatie delen";
    },
    get$presencesToggle() {
      return "Toon statusberichten van andere personen";
    },
    get$skip(_) {
      return "Overslaan";
    },
    get$sourceCode() {
      return "Broncode";
    },
    get$spaceName() {
      return "Spacenaam";
    },
    startedACall$1(senderName) {
      return senderName + " heeft een gesprek gestart";
    },
    get$status(_) {
      return "Status";
    },
    get$submit(_) {
      return "Indienen";
    },
    get$synchronizingPleaseWait() {
      return "Synchroniseren... Even geduld.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Synchronizing\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "Systeem";
    },
    get$theyDontMatch() {
      return "Ze komen niet overeen";
    },
    get$theyMatch() {
      return "Ze komen overeen";
    },
    get$tooManyRequestsWarning() {
      return "Te veel verzoeken. Probeer het later nog eens!";
    },
    get$tryToSendAgain() {
      return "Probeer nogmaals te verzenden";
    },
    get$unavailable() {
      return "Niet beschikbaar";
    },
    unbannedUser$2(username, targetName) {
      return username + " heeft verbanning " + targetName + " ongedaan gemaakt";
    },
    get$unblockDevice() {
      return "Deblokkeer apparaat";
    },
    get$unknownDevice() {
      return "Onbekend apparaat";
    },
    get$unknownEncryptionAlgorithm() {
      return "Onbekend versleutelingsalgoritme";
    },
    unknownEvent$1(type) {
      return "Onbekend evenement '" + type + "'";
    },
    get$unpin() {
      return "Losmaken";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " en " + count + " anderen zijn aan het typen \u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " en " + username2 + " zijn aan het typen \u2026";
    },
    userIsTyping$1(username) {
      return username + " is aan het typen \u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " is vertrokken uit de chat";
    },
    get$username(_) {
      return "Gebruikersnaam";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " heeft een " + type + " -gebeurtenis gestuurd";
    },
    get$unverified() {
      return "Niet geverifieerd";
    },
    get$verified() {
      return "Geverifieerd";
    },
    get$verifyStart() {
      return "Verificatie starten";
    },
    get$verifySuccess() {
      return "Je bent succesvol geverifieerd!";
    },
    get$verifyTitle() {
      return "Ander account verifi\xebren";
    },
    get$visibilityOfTheChatHistory() {
      return "Chatgeschiedenis zichtbaarheid";
    },
    get$visibleForAllParticipants() {
      return "Zichtbaar voor alle personen";
    },
    get$visibleForEveryone() {
      return "Zichtbaar voor iedereen";
    },
    get$voiceMessage() {
      return "Spraakbericht versturen";
    },
    get$waitingPartnerAcceptRequest() {
      return "Wachten tot partner het verzoek accepteert \u2026";
    },
    get$waitingPartnerEmoji() {
      return "Wachten tot partner de emoji accepteert \u2026";
    },
    get$waitingPartnerNumbers() {
      return "Wachten tot partner de nummers accepteert \u2026";
    },
    get$warning() {
      return "Waarschuwing!";
    },
    get$weSentYouAnEmail() {
      return "We hebben je een email gestuurd";
    },
    get$whoCanPerformWhichAction() {
      return "Wie kan welke actie uitvoeren";
    },
    get$whyDoYouWantToReportThis() {
      return "Waarom wil je dit rapporteren?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Met deze adressen kan je je wachtwoord herstellen.";
    },
    get$writeAMessage() {
      return "Schrijf een bericht\u2026";
    },
    get$yes() {
      return "Ja";
    },
    get$you() {
      return "Jij";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Je neemt niet langer deel aan deze chat";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Je bent verbannen uit deze chat";
    },
    get$yourPublicKey() {
      return "Je publieke sleutel";
    },
    get$messageInfo() {
      return "Berichtinfo";
    },
    get$time(_) {
      return "Tijd";
    },
    get$sender() {
      return "Afzender";
    },
    get$openGallery() {
      return "Galerij openen";
    },
    get$removeFromSpace() {
      return "Uit de space verwijderen";
    },
    videoWithSize$1(size) {
      return "Video (" + size + ")";
    },
    get$markAsRead() {
      return "Markeer als gelezen";
    },
    reactedWith$2(sender, reaction) {
      return sender + " reageerde met " + reaction;
    },
    get$pinMessage() {
      return "Maak vast aan kamer";
    },
    get$confirmEventUnpin() {
      return "Weet je zeker dat je de gebeurtenis definitief wilt losmaken?";
    },
    get$emojis() {
      return "Emoji's";
    },
    get$youRejectedTheInvitation() {
      return "Je hebt de uitnodiging afgewezen";
    },
    get$youJoinedTheChat() {
      return "Je bent toegetreden tot de chat";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Je hebt de uitnodiging geaccepteerd";
    },
    youBannedUser$1(user) {
      return "Je hebt " + user + " verbannen";
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Je hebt de uitnodiging voor " + user + " ingetrokken";
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Je bent uitgenodigd door " + user;
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Je hebt " + user + " uitgenodigd";
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Je hebt " + user + " weggestuurd";
    },
    youUnbannedUser$1(user) {
      return "Je hebt de ban op " + user + " opgeheven";
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " heeft geklopt";
    },
    get$usersMustKnock() {
      return "Users must knock";
    },
    get$noOneCanJoin() {
      return "Niemand kan deelnemen";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " would like to join the chat.";
    },
    get$knock() {
      return "Kloppen";
    },
    get$users() {
      return "Personen";
    },
    countFiles$1(count) {
      return "" + count + " bestanden";
    },
    get$user() {
      return "Persoon";
    },
    get$custom() {
      return "Aangepast";
    },
    get$noKeyForThisMessage() {
      return "Dit kan gebeuren als het bericht is verzonden voordat je bij je account op dit apparaat hebt aangemeld.\n\nHet is ook mogelijk dat de afzender je apparaat heeft geblokkeerd of dat er iets mis is gegaan met de internetverbinding.\n\nKan je het bericht wel lezen op een andere sessie? Dan kan je het bericht daarvandaan overzetten! Ga naar Instellingen > Apparaten en zorg ervoor dat je apparaten elkaar hebben geverifieerd. Wanneer je de kamer de volgende keer opent en beide sessies op de voorgrond staan, zullen de sleutels automatisch worden verzonden.\n\nWil je de sleutels niet verliezen als je uitlogt of van apparaat wisselt? Zorg er dan voor dat je de chatback-up hebt aangezet in de instellingen.";
    },
    get$newSpace() {
      return "Nieuwe space";
    },
    get$doNotShowAgain() {
      return "Niet meer tonen";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Lege chat (was " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Chat heropenen";
    },
    get$noOtherDevicesFound() {
      return "Geen andere apparaten gevonden";
    },
    fileIsTooBigForServer$1(max) {
      return "Kan niet verzenden! De server ondersteunt alleen bijlages tot " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "Spring naar het laatst gelezen bericht";
    },
    get$readUpToHere() {
      return "Lees tot hier";
    },
    get$jump() {
      return "Spring";
    },
    get$openLinkInBrowser() {
      return "Link in browser openen";
    },
    get$profileNotFound() {
      return "De persoon kan niet gevonden worden op de server. Misschien is er een verbindingsprobleem of de persoon bestaat niet.";
    },
    get$setColorTheme() {
      return "Kleurthema instellen:";
    },
    get$invite() {
      return "Uitnodigen";
    },
    get$invalidInput() {
      return "Ongeldige invoer!";
    },
    wrongPinEntered$1(seconds) {
      return "Verkeerde pin ingevoerd! Probeer het nog eens over " + seconds + " seconden...";
    },
    get$pleaseEnterANumber() {
      return "Vul een getal in groter dan 0";
    },
    get$roomUpgradeDescription() {
      return "De chat zal dan opnieuw gemaakt worden met de nieuwe kamerversie. Alle deelnemers worden ge\xefnformeerd dat ze moeten overstappen naar de nieuwe chat. Je kan meer lezen over kamerversies op https://spec.matrix.org/latest/rooms/";
    },
    get$removeDevicesDescription() {
      return "Je wordt op dit apparaat uitgelogd en zal niet langer in staat zijn om berichten te ontvangen.";
    },
    get$banUserDescription() {
      return "De persoon zal worden verbannen van de chat en kan niet meer toetreden totdat de verbanning is opgeheven.";
    },
    get$unbanUserDescription() {
      return "De persoon zal weer in staat zijn om de chat te betreden als ze het proberen.";
    },
    get$kickUserDescription() {
      return "De persoon is verwijderd uit de chat, maar is niet verbannen. In publieke chats kan de persoon op elk moment opnieuw deelnemen.";
    },
    get$makeAdminDescription() {
      return "Wanneer je deze persoon beheerder maakt kun je dit niet ongedaan maken als jullie dezelfde rechten hebben.";
    },
    get$yourGlobalUserIdIs() {
      return "Je globale gebruikers-ID is: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Unfortunately no user could be found with "' + query + '". Please check whether you made a typo.';
    },
    get$knocking() {
      return "Kloppen";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "Chat can be discovered via the search on " + server;
    },
    get$searchChatsRooms() {
      return "Zoek naar #chats, @personen...";
    },
    get$nothingFound() {
      return "Niets gevonden...";
    },
    get$wrongRecoveryKey() {
      return "Sorry... this does not seem to be the correct recovery key.";
    },
    get$startConversation() {
      return "Start conversation";
    },
    get$commandHint_sendraw() {
      return "Send raw json";
    },
    get$searchForUsers() {
      return "Zoek naar @personen...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Please enter your current password";
    },
    get$newPassword() {
      return "New password";
    },
    get$pleaseChooseAStrongPassword() {
      return "Please choose a strong password";
    },
    get$passwordsDoNotMatch() {
      return "Passwords do not match";
    },
    get$passwordIsWrong() {
      return "Your entered password is wrong";
    },
    get$publicChatAddresses() {
      return "Publieke chat adressen";
    },
    get$createNewAddress() {
      return "Cre\xeber nieuw adres";
    },
    get$joinSpace() {
      return "Deelname aan space";
    },
    get$publicSpaces() {
      return "Publieke spaces";
    },
    get$decline() {
      return "Decline";
    },
    get$thisDevice() {
      return "This device:";
    },
    get$initAppError() {
      return "An error occured while init the app";
    },
    get$userRole() {
      return "User role";
    },
    searchIn$1(chat) {
      return 'Zoek in chat "' + chat + '"...';
    },
    get$searchMore() {
      return "Zoek meer...";
    },
    get$gallery() {
      return "Gallerij";
    },
    get$files(_) {
      return "Bestanden";
    },
    sessionLostBody$2(url, error) {
      return "Your session is lost. Please report this error to the developers at " + url + ". The error message is: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "The app now tries to restore your session from the backup. Please report this error to the developers at " + url + ". The error message is: " + error;
    },
    get$sendReadReceipts() {
      return "Send read receipts";
    },
    get$sendTypingNotificationsDescription() {
      return "Other participants in a chat can see when you are typing a new message.";
    },
    get$sendReadReceiptsDescription() {
      return "Other participants in a chat can see when you have read a message.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verify other device";
    },
    get$verifyOtherDeviceDescription() {
      return "When you verify another device, those devices can exchange keys, increasing your overall security. \ud83d\udcaa When you start a verification, a popup will appear in the app on both devices. There you will then see a series of emojis or numbers that you have to compare with each other. It's best to have both devices handy before you start the verification. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " accepted key verification";
    },
    canceledKeyVerification$1(sender) {
      return sender + " canceled key verification";
    },
    completedKeyVerification$1(sender) {
      return sender + " completed key verification";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " is ready for key verification";
    },
    requestedKeyVerification$1(sender) {
      return sender + " requested key verification";
    },
    startedKeyVerification$1(sender) {
      return sender + " started key verification";
    },
    get$stickers() {
      return "Stickers";
    },
    get$discover() {
      return "Ontdek";
    },
    get$commandHint_ignore() {
      return "Negeer de gegeven matrix ID";
    },
    get$commandHint_unignore() {
      return "Unignore the given matrix ID";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Nu zijn er " + count + " personen geblokkeerd.";
    },
    get$restricted() {
      return "Beperkt";
    },
    get$knockRestricted() {
      return "Knock restricted";
    },
    goToSpace$1(space) {
      return "Go to space: " + space;
    },
    get$markAsUnread() {
      return "Markeer als ongelezen";
    },
    userLevel$1(level) {
      return "" + level + " - Persoon";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Administrator";
    },
    get$changeGeneralChatSettings() {
      return "Wijzig algemene chat instellingen";
    },
    get$inviteOtherUsers() {
      return "Invite other users to this chat";
    },
    get$changeTheChatPermissions() {
      return "Change the chat permissions";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Change the visibility of the chat history";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Change the main public chat address";
    },
    get$sendRoomNotifications() {
      return "Send a @room notifications";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Change the description of the chat";
    },
    get$chatPermissionsDescription() {
      return "Define which power level is necessary for certain actions in this chat. The power levels 0, 50 and 100 are usually representing users, moderators and admins, but any gradation is possible.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Update " + version + " installed!";
    },
    get$sendCanceled() {
      return "Sending canceled";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Doesn't seem to be a compatible homeserver. Wrong URL?";
    },
    get$calculatingFileSize() {
      return "Calculating file size...";
    },
    get$prepareSendingAttachment() {
      return "Prepare sending attachment...";
    },
    get$sendingAttachment() {
      return "Sending attachment...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Sending attachment " + index + " of " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Server limit reached! Waiting " + seconds + " seconds...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Note: When you connect all your devices to the chat backup, they are automatically verified.";
    },
    get$continueText() {
      return "Continue";
    },
    get$blur(_) {
      return "Blur:";
    },
    get$opacity(_) {
      return "Opacity:";
    },
    get$setWallpaper() {
      return "Set wallpaper";
    },
    get$noContactInformationProvided() {
      return "Server does not provide any valid contact information";
    },
    get$contactServerAdmin() {
      return "Contact server admin";
    },
    get$contactServerSecurity() {
      return "Contact server security";
    },
    get$supportPage() {
      return "Support page";
    },
    get$serverInformation() {
      return "Server information:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$compress() {
      return "Comprimeren";
    },
    get$boldText() {
      return "Vet gedrukte tekst";
    },
    get$italicText() {
      return "Cursieve tekst";
    },
    get$strikeThrough() {
      return "Doorhalen";
    },
    get$pleaseFillOut() {
      return "Vul alsjeblieft in";
    },
    get$invalidUrl() {
      return "Ongeldige url";
    },
    get$addLink() {
      return "Koppeling toevoegen";
    },
    get$unableToJoinChat() {
      return "Kan niet deelnemen aan chat. Misschien heeft de andere partij het gesprek al afgesloten.";
    },
    get$previous() {
      return "Vorige";
    },
    get$otherPartyNotLoggedIn() {
      return "De andere partij is momenteel niet ingelogd en kan daarom geen berichten ontvangen!";
    },
    get$open(_) {
      return "Open";
    },
    get$waitingForServer() {
      return "Waiting for server...";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 New chat request";
    },
    get$contentNotificationSettings() {
      return "Content notification settings";
    },
    get$generalNotificationSettings() {
      return "General notification settings";
    },
    get$roomNotificationSettings() {
      return "Room notification settings";
    },
    get$userSpecificNotificationSettings() {
      return "User specific notification settings";
    },
    get$otherNotificationSettings() {
      return "Other notification settings";
    },
    get$notificationRuleContainsUserName() {
      return "Contains User Name";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "Notifies the user when a message contains their username.";
    },
    get$notificationRuleMaster() {
      return "Mute all notifications";
    },
    get$notificationRuleMasterDescription() {
      return "Overrides all other rules and disables all notifications.";
    },
    get$notificationRuleSuppressNotices() {
      return "Suppress Automated Messages";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Suppresses notifications from automated clients like bots.";
    },
    get$notificationRuleInviteForMe() {
      return "Invite for Me";
    },
    get$notificationRuleInviteForMeDescription() {
      return "Notifies the user when they are invited to a room.";
    },
    get$notificationRuleMemberEvent() {
      return "Member Event";
    },
    get$notificationRuleMemberEventDescription() {
      return "Suppresses notifications for membership events.";
    },
    get$notificationRuleIsUserMention() {
      return "User Mention";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "Notifies the user when they are directly mentioned in a message.";
    },
    get$notificationRuleContainsDisplayName() {
      return "Contains Display Name";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "Notifies the user when a message contains their display name.";
    },
    get$notificationRuleIsRoomMention() {
      return "Room Mention";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "Notifies the user when there is a room mention.";
    },
    get$notificationRuleRoomnotif() {
      return "Room Notification";
    },
    get$notificationRuleRoomnotifDescription() {
      return "Notifies the user when a message contains '@room'.";
    },
    get$notificationRuleTombstone() {
      return "Tombstone";
    },
    get$notificationRuleTombstoneDescription() {
      return "Notifies the user about room deactivation messages.";
    },
    get$notificationRuleReaction() {
      return "Reaction";
    },
    get$notificationRuleReactionDescription() {
      return "Suppresses notifications for reactions.";
    },
    get$notificationRuleRoomServerAcl() {
      return "Room Server ACL";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Suppresses notifications for room server access control lists (ACL).";
    },
    get$notificationRuleSuppressEdits() {
      return "Suppress Edits";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Suppresses notifications for edited messages.";
    },
    get$notificationRuleCall() {
      return "Call";
    },
    get$notificationRuleCallDescription() {
      return "Notifies the user about calls.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "Encrypted Room One-to-One";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return "Notifies the user about messages in encrypted one-to-one rooms.";
    },
    get$notificationRuleRoomOneToOne() {
      return "Room One-to-One";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return "Notifies the user about messages in one-to-one rooms.";
    },
    get$notificationRuleMessage() {
      return "Message";
    },
    get$notificationRuleMessageDescription() {
      return "Notifies the user about general messages.";
    },
    get$notificationRuleEncrypted() {
      return "Encrypted";
    },
    get$notificationRuleEncryptedDescription() {
      return "Notifies the user about messages in encrypted rooms.";
    },
    get$notificationRuleJitsi() {
      return "Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "Notifies the user about Jitsi widget events.";
    },
    get$notificationRuleServerAcl() {
      return "Suppress Server ACL Events";
    },
    get$notificationRuleServerAclDescription() {
      return "Suppresses notifications for Server ACL events.";
    },
    unknownPushRule$1(rule) {
      return "Unknown push rule '" + rule + "'";
    },
    get$deletePushRuleCanNotBeUndone() {
      return "If you delete this notification setting, this can not be undone.";
    },
    get$more() {
      return "More";
    },
    get$shareKeysWith() {
      return "Share keys with...";
    },
    get$shareKeysWithDescription() {
      return "Which devices should be trusted so that they can read along your messages in encrypted chats?";
    },
    get$allDevices() {
      return "All devices";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Cross verified devices if enabled";
    },
    get$crossVerifiedDevices() {
      return "Cross verified devices";
    },
    get$verifiedDevicesOnly() {
      return "Verified devices only";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$interactiveTranslatorRequired() {
      return "Required";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of members.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "SuApine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete the highlighted word activities to unlock";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$couldNotFindTTS() {
      return "We couldn't find a text-to-speech engine for your current target language. ";
    },
    get$ttsInstructionsHyperlink() {
      return "Click here to view instructions for downloading a new voice on your device.";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseAgreeToTOS() {
      return "Please agree to the Terms and Conditions";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "Click on a word or the buttons below to learn more";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$noEmojiSelectedTooltip() {
      return "No emoji selected";
    },
    get$writingExercisesTooltip() {
      return "Writing activities";
    },
    get$listeningExercisesTooltip() {
      return "Listening activities";
    },
    get$readingExercisesTooltip() {
      return "Reading activities";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$formsNotFound() {
      return "Forms could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$downloadSpaceAnalytics() {
      return "Download space analytics";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    pickAnEmoji$2(lemma, partOfSpeech) {
      return "What's your favorite emoji for '" + lemma + "'?";
    },
    get$lemmaMeaningInstructionsBody() {
      return "Above is the meaning of the lemma. Double-click to edit.";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$notInClass() {
      return "Not in a class!";
    },
    get$noClassCode() {
      return "No class code!";
    },
    get$chooseCorrectLabel() {
      return "Choose the correct label.";
    },
    levelPopupTitle$1(level) {
      return "Congratulations on reaching\nLevel " + level;
    },
    get$activityPlannerTitle() {
      return "Activity Planner";
    },
    get$topicLabel() {
      return "Topic";
    },
    get$topicPlaceholder() {
      return "Choose a topic...";
    },
    get$modeLabel() {
      return "Mode";
    },
    get$modePlaceholder() {
      return "Choose a mode...";
    },
    get$learningObjectiveLabel() {
      return "Learning Objective";
    },
    get$learningObjectivePlaceholder() {
      return "Choose a learning objective...";
    },
    get$mediaLabel() {
      return "Media learners should share";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$generateActivitiesButton() {
      return "Generate Activities";
    },
    get$launchActivityButton() {
      return "Launch Activity";
    },
    get$image(_) {
      return "Image";
    },
    get$video() {
      return "Video";
    },
    get$nan() {
      return "Not applicable";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$myBookmarkedActivities() {
      return "My Bookmarked Activities";
    },
    get$noBookmarkedActivities() {
      return "No bookmarked activities";
    },
    get$activityTitle() {
      return "Activity Title";
    },
    get$addVocabulary() {
      return "Add Vocabulary";
    },
    get$instructions() {
      return "Instructions";
    },
    get$numberOfLearners() {
      return "Number of learners";
    },
    get$mustBeInteger() {
      return "Must be an integer e.g. 1, 2, 3, ...";
    },
    noLemmasFound$1(xp) {
      return "There's no vocabulary with more than " + xp + " XP. Keep practicing!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the space, you will leave all of the chats within it. Other users will see that you have left the space.";
    },
    get$whatIsLemma() {
      return "What is the lemma?";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$clickForMeaningActivity() {
      return "Click here for a Meaning Challenge";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$slightlyOffensive() {
      return "Slightly offensive";
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed. In rare cases, the email can be sent to spam or take up to 5 minutes to arrive.";
    },
    get$whoIsAllowedToJoinThisChat() {
      return "Who is allowed to join this chat";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language your learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No space description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$displayName(_) {
      return "Display name";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Pick an emoji for the word! There's no wrong answer and you can switch anytime! \ud83d\ude00";
    },
    pickAnEmojiFor$1(lemma) {
      return "Pick an emoji for $" + lemma;
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this space! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nNl, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nNl":{"L10n":[]}}'));
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_248", e: "endPart", h: h});
})($__dart_deferred_initializers__, "HbA+5M3HPdCh0PIbEX94nbkE2d4=");
;
//# sourceMappingURL=main.dart.js_248.part.js.map
