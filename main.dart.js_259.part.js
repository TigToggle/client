// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.6.1.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_259", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nSv$() {
      return new A.L10nSv(B.canonicalizedLocale("sv"));
    },
    L10nSv: function L10nSv(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[51];
  A = hunkHelpers.updateHolder(holdersList[45], A);
  A.L10nSv.prototype = {
    get$alwaysUse24HourFormat() {
      return "false";
    },
    get$repeatPassword() {
      return "Upprepa l\xf6senord";
    },
    get$notAnImage() {
      return "Inte en bildfil.";
    },
    get$remove(_) {
      return "Ta bort";
    },
    get$importNow() {
      return "Importera nu";
    },
    get$importEmojis() {
      return "Importera emojier";
    },
    get$importFromZipFile() {
      return "Importera fr\xe5n .zip-fil";
    },
    get$exportEmotePack() {
      return "Exportera Emote-pack som .zip";
    },
    get$replace(_) {
      return "Ers\xe4tt";
    },
    aboutHomeserver$1(homeserver) {
      return "About " + homeserver;
    },
    get$accept(_) {
      return "Acceptera";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " accepterade inbjudan";
    },
    get$account() {
      return "Konto";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " aktiverade \xe4ndpunktskryptering";
    },
    get$addEmail() {
      return "L\xe4gg till e-post";
    },
    get$confirmMatrixId() {
      return "Bekr\xe4fta ditt Matrix-ID f\xf6r att radera ditt konto.";
    },
    supposedMxid$1(mxid) {
      return "Detta b\xf6r vara " + mxid;
    },
    get$addToSpace() {
      return "L\xe4gg till i utrymme";
    },
    get$admin() {
      return "Admin";
    },
    get$alias() {
      return "alias";
    },
    get$all() {
      return "Alla";
    },
    get$commandHint_googly() {
      return "Skicka n\xe5gra googly \xf6gon";
    },
    get$commandHint_cuddle() {
      return "Skicka en omfamning";
    },
    get$commandHint_hug() {
      return "Skicka en kram";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " skickar dig googly \xf6gon";
    },
    cuddleContent$1(senderName) {
      return senderName + " omfamnar dig";
    },
    hugContent$1(senderName) {
      return senderName + " kramar dig";
    },
    answeredTheCall$1(senderName) {
      return senderName + " besvarade samtalet";
    },
    get$anyoneCanJoin() {
      return "Vem som helst kan g\xe5 med";
    },
    get$archive() {
      return "Arkiv";
    },
    get$areGuestsAllowedToJoin() {
      return "F\xe5r g\xe4stanv\xe4ndare g\xe5 med";
    },
    get$areYouSure() {
      return "\xc4r du s\xe4ker?";
    },
    get$areYouSureYouWantToLogout() {
      return "\xc4r du s\xe4ker p\xe5 att du vill logga ut?";
    },
    get$askSSSSSign() {
      return "F\xf6r att kunna signera den andra personen, v\xe4nligen ange din l\xf6senfras eller \xe5terst\xe4llningsnyckel f\xf6r s\xe4ker lagring.";
    },
    askVerificationRequest$1(username) {
      return "Acceptera denna verifikationsf\xf6rfr\xe5gan fr\xe5n " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "Hemma servern st\xf6djer f\xf6ljande inloggnings typer :\n " + serverVersions + "\nMen denna applikation st\xf6djer enbart:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Skicka skrivnotifikationer";
    },
    get$swipeRightToLeftToReply() {
      return "Swipe right to left to reply";
    },
    get$sendOnEnter() {
      return "Skicka med Enter";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "Hemservern st\xf6jder Spec-versionen:\n" + serverVersions + "\nMen denna app st\xf6djer enbart " + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return chats + " chats and " + B.S(participants) + " participants";
    },
    get$noMoreChatsFound() {
      return "No more chats found...";
    },
    get$noChatsFoundHere() {
      return "No chats found here yet. Start a new chat with someone by using the button below. \u2935\ufe0f";
    },
    get$unread() {
      return "Unread";
    },
    get$space() {
      return "Space";
    },
    get$spaces() {
      return "Spaces";
    },
    get$banFromChat() {
      return "Bannlys fr\xe5n chatt";
    },
    get$banned() {
      return "Bannlyst";
    },
    bannedUser$2(username, targetName) {
      return username + " bannl\xf6s " + targetName;
    },
    get$blockDevice() {
      return "Blockera Enhet";
    },
    get$blocked() {
      return "Blockerad";
    },
    get$botMessages() {
      return "Bot meddelanden";
    },
    get$cancel(_) {
      return "Avbryt";
    },
    cantOpenUri$1(uri) {
      return "Kan inte \xf6ppna URL " + uri;
    },
    get$changeDeviceName() {
      return "\xc4ndra enhetsnamn";
    },
    changedTheChatAvatar$1(username) {
      return username + " \xe4ndrade sin chatt-avatar";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " \xe4ndrade chatt-beskrivningen till: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " \xe4ndrade sitt chatt-namn till: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " \xe4ndrade chatt-r\xe4ttigheterna";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " \xe4ndrade visningsnamnet till: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " \xe4ndrade reglerna f\xf6r g\xe4staccess";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " \xe4ndrade reglerna f\xf6r g\xe4staccess till: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " \xe4ndrade historikens synlighet";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " \xe4ndrade historikens synlighet till: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " \xe4ndrade anslutningsreglerna";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " \xe4ndrade anslutningsreglerna till " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " \xe4ndrade sin avatar";
    },
    changedTheRoomAliases$1(username) {
      return username + " \xe4ndrade rummets alias";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " \xe4ndrade inbjudningsl\xe4nken";
    },
    get$changePassword() {
      return "\xc4ndra l\xf6senord";
    },
    get$changeTheme() {
      return "\xc4ndra din stil";
    },
    get$changeTheNameOfTheGroup() {
      return "\xc4ndra namn p\xe5 gruppen";
    },
    get$changeYourAvatar() {
      return "\xc4ndra din avatar";
    },
    get$channelCorruptedDecryptError() {
      return "Krypteringen har blivit korrupt";
    },
    get$chat() {
      return "Chatt";
    },
    get$chatDetails() {
      return "Chatt-detaljer";
    },
    get$chats() {
      return "Chatter";
    },
    get$chooseAStrongPassword() {
      return "V\xe4lj ett starkt l\xf6senord";
    },
    get$clearArchive() {
      return "Rensa arkiv";
    },
    get$close(_) {
      return "St\xe4ng";
    },
    get$commandHint_markasdm() {
      return "M\xe4rk som rum f\xf6r direktmeddelanden f\xf6r det givante Matrix ID";
    },
    get$commandHint_markasgroup() {
      return "M\xe4rk som grupp";
    },
    get$commandHint_ban() {
      return "Bannlys anv\xe4ndaren fr\xe5n detta rum";
    },
    get$commandHint_clearcache() {
      return "Rensa cache";
    },
    get$commandHint_create() {
      return "Skapa en tom grupp-chatt\nAnv\xe4nd --no-encryption f\xf6r att inaktivera kryptering";
    },
    get$commandHint_discardsession() {
      return "Kasta bort sessionen";
    },
    get$commandHint_dm() {
      return "Starta en direkt-chatt\nAnv\xe4nd --no-encryption f\xf6r att inaktivera kryptering";
    },
    get$commandHint_html() {
      return "Skicka HTML-formatted text";
    },
    get$commandHint_invite() {
      return "Bjud in anv\xe4ndaren till detta rum";
    },
    get$commandHint_join() {
      return "G\xe5 med i rum";
    },
    get$commandHint_kick() {
      return "Ta bort anv\xe4ndare fr\xe5n detta rum";
    },
    get$commandHint_leave() {
      return "L\xe4mna detta rum";
    },
    get$commandHint_me() {
      return "Beskriv dig sj\xe4lv";
    },
    get$commandHint_myroomavatar() {
      return "S\xe4tt din bild f\xf6r detta rum (by mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "S\xe4tt ditt anv\xe4ndarnamn f\xf6r rummet";
    },
    get$commandHint_op() {
      return "S\xe4tt anv\xe4ndarens kraft niv\xe5 ( standard: 50)";
    },
    get$commandHint_plain() {
      return "Skicka oformaterad text";
    },
    get$commandHint_react() {
      return "Skicka svar som reaktion";
    },
    get$commandHint_send() {
      return "Skicka text";
    },
    get$commandHint_unban() {
      return "Till\xe5t anv\xe4ndare i rummet";
    },
    get$commandInvalid() {
      return "Felaktigt kommando";
    },
    commandMissing$1(command) {
      return command + " \xe4r inte ett kommando.";
    },
    get$compareEmojiMatch() {
      return "V\xe4nligen j\xe4mf\xf6r uttryckssymbolerna";
    },
    get$compareNumbersMatch() {
      return "V\xe4nligen j\xe4mf\xf6r siffrorna";
    },
    get$configureChat() {
      return "Konfigurera chatt";
    },
    get$confirm(_) {
      return "Bekr\xe4fta";
    },
    get$containsDisplayName() {
      return "Inneh\xe5ller visningsnamn";
    },
    get$containsUserName() {
      return "Inneh\xe5ller anv\xe4ndarnamn";
    },
    get$contentHasBeenReported() {
      return "Inneh\xe5llet har rapporterats till server-admins";
    },
    get$copiedToClipboard() {
      return "Kopierat till urklipp";
    },
    get$copy(_) {
      return "Kopiera";
    },
    couldNotDecryptMessage$1(error) {
      return "Kunde ej avkoda meddelande: " + error;
    },
    countParticipants$1(count) {
      return B.S(count) + " deltagare";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " skapade chatten";
    },
    get$createGroup() {
      return "Skapa grupp";
    },
    get$currentlyActive() {
      return "F\xf6r n\xe4rvarande aktiv";
    },
    get$darkTheme() {
      return "M\xf6rkt";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Detta kommer att avaktivera ditt konto. Det h\xe4r g\xe5r inte att \xe5ngra! \xc4r du s\xe4ker?";
    },
    get$defaultPermissionLevel() {
      return "Standard beh\xf6righetsniv\xe5";
    },
    get$$delete(_) {
      return "Radera";
    },
    get$deleteAccount() {
      return "Ta bort konto";
    },
    get$deleteMessage() {
      return "Ta bort meddelande";
    },
    get$devices() {
      return "Enheter";
    },
    get$directChats() {
      return "Direkt chatt";
    },
    get$allRooms() {
      return "Alla gruppchattar";
    },
    get$displaynameHasBeenChanged() {
      return "Visningsnamn har \xe4ndrats";
    },
    get$downloadFile() {
      return "Ladda ner fil";
    },
    get$edit() {
      return "\xc4ndra";
    },
    get$editBlockedServers() {
      return "redigera blockerade servrar";
    },
    get$chatPermissions() {
      return "Chatt-beh\xf6righeter";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    get$editDisplayname() {
      return "\xc4ndra visningsnamn";
    },
    get$editRoomAliases() {
      return "Redigera rum alias";
    },
    get$editRoomAvatar() {
      return "redigera rumsavatar";
    },
    get$emoteExists() {
      return "Dekalen existerar redan!";
    },
    get$emoteInvalid() {
      return "Ogiltig dekal-kod!";
    },
    get$emoteKeyboardNoRecents() {
      return "Nyligen anv\xe4nda emotes kommer dyka upp h\xe4r\u2026";
    },
    get$emotePacks() {
      return "Dekalpaket f\xf6r rummet";
    },
    get$globalChatId() {
      return "Global chat ID";
    },
    get$accessAndVisibility() {
      return "Access and visibility";
    },
    get$customEmojisAndStickers() {
      return "Custom emojis and stickers";
    },
    get$emoteShortcode() {
      return "Dekal kod";
    },
    get$emoteWarnNeedToPick() {
      return "Du m\xe5ste v\xe4lja en dekal-kod och en bild!";
    },
    get$emptyChat() {
      return "Tom chatt";
    },
    get$enableEmotesGlobally() {
      return "Aktivera dekal-paket globalt";
    },
    get$enableEncryption() {
      return "Aktivera kryptering";
    },
    get$encrypted() {
      return "Krypterad";
    },
    get$encryptionNotEnabled() {
      return "Kryptering \xe4r ej aktiverad";
    },
    endedTheCall$1(senderName) {
      return senderName + " avslutade samtalet";
    },
    get$enterAnEmailAddress() {
      return "Ange en e-postaddress";
    },
    errorObtainingLocation$1(error) {
      return "Fel vid erh\xe5llande av plats: " + error;
    },
    get$extremeOffensive() {
      return "Extremt st\xf6tande";
    },
    get$fontSize(_) {
      return "Textstorlek";
    },
    get$forward(_) {
      return "Fram\xe5t";
    },
    get$fromJoining() {
      return "Fr\xe5n att g\xe5 med";
    },
    get$fromTheInvitation() {
      return "Fr\xe5n inbjudan";
    },
    get$goToTheNewRoom() {
      return "G\xe5 till det nya rummet";
    },
    get$group() {
      return "Grupp";
    },
    get$chatDescription() {
      return "Chattbeskrivning";
    },
    get$groups() {
      return "Grupper";
    },
    groupWith$1(displayname) {
      return "Gruppen med " + displayname;
    },
    get$guestsAreForbidden() {
      return "G\xe4ster \xe4r f\xf6rbjudna";
    },
    get$guestsCanJoin() {
      return "G\xe4ster kan ansluta";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " har tagit tillbaka inbjudan f\xf6r " + targetName;
    },
    get$help() {
      return "Hj\xe4lp";
    },
    get$hideRedactedMessages() {
      return "Hide redacted messages";
    },
    get$hideRedactedMessagesBody() {
      return "If someone redacts a message, this message won't be visible in the chat anymore.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Hide invalid or unknown message formats";
    },
    get$howOffensiveIsThisContent() {
      return "Hur st\xf6tande \xe4r detta inneh\xe5ll?";
    },
    get$block() {
      return "blockera";
    },
    get$blockedUsers() {
      return "Blockerade anv\xe4ndare";
    },
    get$blockListDescription() {
      return "Du kan blockera anv\xe4ndare som st\xf6r dig. Du kommer inte f\xe5 n\xe5gra meddelanden eller rum-inbjudningar fr\xe5n anv\xe4ndarna p\xe5 din personliga blocklista.";
    },
    get$blockUsername() {
      return "Ignorera anv\xe4ndarnamn";
    },
    get$iHaveClickedOnLink() {
      return "Jag har klickat p\xe5 l\xe4nken";
    },
    get$incorrectPassphraseOrKey() {
      return "Felaktig l\xf6senordsfras eller \xe5sterst\xe4llningsnyckel";
    },
    get$inoffensive() {
      return "Of\xf6rargligt";
    },
    get$inviteContact() {
      return "Bjud in kontakt";
    },
    get$noChatDescriptionYet() {
      return "Ingen chatt-beskrivning \xe4n.";
    },
    get$tryAgain() {
      return "F\xf6rs\xf6k igen";
    },
    get$invited() {
      return "Inbjuden";
    },
    get$redactMessageDescription() {
      return "Meddelandet kommer tas bort f\xf6r alla medlemmar i denna konversation. Detta kan inte \xe5ngras.";
    },
    get$optionalRedactReason() {
      return "(Frivilligt) Anledning till att ta bort det h\xe4r meddelandet\u2026";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " bj\xf6d in " + targetName;
    },
    get$invitedUsersOnly() {
      return "Endast inbjudna anv\xe4ndare";
    },
    get$inviteForMe() {
      return "Inbjudning till mig";
    },
    inviteText$2(username, link) {
      return username + " bj\xf6d in dig till FluffyChat.\n1. Bes\xf6k fluffychat.im och installera appen\n2. Registrera dig eller logga in\n3. \xd6ppna inbjudningsl\xe4nk:\n " + link;
    },
    get$isTyping() {
      return "skriver\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " ansl\xf6t till chatten";
    },
    get$joinRoom() {
      return "Anslut till rum";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " sparkade ut " + targetName;
    },
    get$kickFromChat() {
      return "Sparka fr\xe5n chatt";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Senast aktiv: " + localizedTimeShort;
    },
    get$leave() {
      return "L\xe4mna";
    },
    get$leftTheChat() {
      return "L\xe4mnade chatten";
    },
    get$lightTheme() {
      return "Ljust";
    },
    loadCountMoreParticipants$1(count) {
      return "Ladda " + count + " mer deltagare";
    },
    get$dehydrate() {
      return "Exportera sessionen och rensa enheten";
    },
    get$dehydrateWarning() {
      return "Denna \xe5tg\xe4rd kan inte \xe5ngras. F\xf6rs\xe4kra dig om att backupen \xe4r i s\xe4kert f\xf6rvar.";
    },
    get$dehydrateTor() {
      return "TOR-anv\xe4ndare: Exportera session";
    },
    get$dehydrateTorLong() {
      return "TOR-anv\xe4ndare rekommenderas att exportera sessionen innan f\xf6nstret st\xe4ngs.";
    },
    get$loadingPleaseWait() {
      return "Laddar... Var god v\xe4nta.";
    },
    get$loadMore() {
      return "Ladda mer\u2026";
    },
    get$locationDisabledNotice() {
      return "Platstj\xe4nster \xe4r inaktiverade. Var god aktivera dom f\xf6r att kunna dela din plats.";
    },
    get$locationPermissionDeniedNotice() {
      return "Plats \xe5tkomst nekad. Var god godk\xe4n detta f\xf6r att kunna dela din plats.";
    },
    get$logout() {
      return "Logga ut";
    },
    get$memberChanges() {
      return "Medlems\xe4ndringar";
    },
    get$mention() {
      return "N\xe4mn";
    },
    get$messages() {
      return "Meddelanden";
    },
    get$messagesStyle() {
      return "Meddelanden:";
    },
    get$moderator() {
      return "Moderator";
    },
    get$newChat() {
      return "Ny chatt";
    },
    get$newVerificationRequest() {
      return "Ny verifikationsbeg\xe4ran!";
    },
    get$next(_) {
      return "N\xe4sta";
    },
    get$no() {
      return "Nej";
    },
    get$noConnectionToTheServer() {
      return "Ingen anslutning till servern";
    },
    get$noEmotesFound() {
      return "Hittade inga dekaler. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Dela inbjudningsl\xe4nk";
    },
    get$noPasswordRecoveryDescription() {
      return "Du har inte lagt till n\xe5got s\xe4tt f\xf6r att \xe5terst\xe4lla ditt l\xf6senord \xe4n.";
    },
    get$noPermission() {
      return "Ingen beh\xf6righet";
    },
    get$noRoomsFound() {
      return "Hittade inga rum\u2026";
    },
    get$notifications() {
      return "Aviseringar";
    },
    get$notificationsEnabledForThisAccount() {
      return "Aviseringar \xe4r p\xe5slaget f\xf6r detta konto";
    },
    get$obtainingLocation() {
      return "Erh\xe5ller plats\u2026";
    },
    get$offensive() {
      return "St\xf6tande";
    },
    get$ok() {
      return "OK";
    },
    get$oopsSomethingWentWrong() {
      return "Hoppsan, n\xe5got gick fel\u2026";
    },
    get$oneClientLoggedOut() {
      return "En av dina klienter har loggats ut";
    },
    get$addAccount() {
      return "L\xe4gg till konto";
    },
    get$enableMultiAccounts() {
      return "(BETA) Aktivera multi-konton p\xe5 denna enhet";
    },
    get$openInMaps() {
      return "\xd6ppna i karta";
    },
    get$link() {
      return "L\xe4nk";
    },
    get$serverRequiresEmail() {
      return "Servern beh\xf6ver validera din e-postadress f\xf6r registrering.";
    },
    get$or() {
      return "Eller";
    },
    get$participant() {
      return "Deltagare";
    },
    get$passphraseOrKey() {
      return "l\xf6senord eller \xe5terst\xe4llningsnyckel";
    },
    get$password(_) {
      return "L\xf6senord";
    },
    get$passwordForgotten() {
      return "Gl\xf6mt l\xf6senord";
    },
    get$passwordHasBeenChanged() {
      return "L\xf6senordet har \xe4ndrats";
    },
    get$overview() {
      return "Overview";
    },
    get$notifyMeFor() {
      return "Notify me for";
    },
    get$passwordRecoverySettings() {
      return "Password recovery settings";
    },
    get$passwordRecovery() {
      return "\xc5terst\xe4ll l\xf6senord";
    },
    get$pickImage() {
      return "V\xe4lj en bild";
    },
    get$pin() {
      return "N\xe5la fast";
    },
    get$pleaseChoose() {
      return "Var god v\xe4lj";
    },
    get$pleaseClickOnLink() {
      return "Klicka p\xe5 l\xe4nken i e-postmeddelandet f\xf6r att sedan forts\xe4tta.";
    },
    get$pleaseEnterYourPassword() {
      return "Ange ditt l\xf6senord";
    },
    get$pleaseEnterYourPin() {
      return "Ange din pin-kod";
    },
    get$pleaseEnterYourUsername() {
      return "Ange ditt anv\xe4ndarnamn";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "F\xf6lj instruktionerna p\xe5 hemsidan och tryck p\xe5 n\xe4sta.";
    },
    get$privacy() {
      return "Integritet";
    },
    get$reason(_) {
      return "Anledning";
    },
    redactedBy$1(username) {
      return "Borttaget av " + username;
    },
    get$directChat() {
      return "Direktchatt";
    },
    redactedByBecause$2(username, reason) {
      return "Borttaget av " + username + " p\xe5 grund av: \u201d" + reason + "\u201d";
    },
    redactedAnEvent$1(username) {
      return username + " redigerade en h\xe4ndelse";
    },
    get$redactMessage() {
      return "Redigera meddelande";
    },
    get$reject() {
      return "Avb\xf6j";
    },
    rejectedTheInvitation$1(username) {
      return username + " avb\xf6jde inbjudan";
    },
    get$removeAllOtherDevices() {
      return "Ta bort alla andra enheter";
    },
    get$unbanFromChat() {
      return "Ta bort chatt-blockering";
    },
    get$removeYourAvatar() {
      return "Ta bort din avatar";
    },
    get$replaceRoomWithNewerVersion() {
      return "Ers\xe4tt rum med nyare version";
    },
    get$reply(_) {
      return "Svara";
    },
    get$reportMessage() {
      return "Rapportera meddelande";
    },
    get$roomHasBeenUpgraded() {
      return "Rummet har blivit uppgraderat";
    },
    get$roomVersion() {
      return "Rum version";
    },
    get$search(_) {
      return "S\xf6k";
    },
    get$security() {
      return "S\xe4kerhet";
    },
    get$send(_) {
      return "Skicka";
    },
    get$sendAMessage() {
      return "Skicka ett meddelande";
    },
    get$sendAsText() {
      return "Skicka som text";
    },
    get$sendAudio() {
      return "Skicka ljud";
    },
    get$sendFile() {
      return "Skicka fil";
    },
    get$sendImage() {
      return "Skicka bild";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "Skickade meddelanden";
    },
    get$sendVideo() {
      return "Skicka video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " skickade en fil";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " skickade ett ljudklipp";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " skickade en bild";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " skickade ett klisterm\xe4rke";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " skickade en video";
    },
    sentCallInformations$1(senderName) {
      return senderName + " skickade samtalsinformation";
    },
    get$separateChatTypes() {
      return "Separata direktchattar och grupper";
    },
    get$setAsCanonicalAlias() {
      return "S\xe4tt som prim\xe4rt alias";
    },
    get$setChatDescription() {
      return "\xc4ndra chattens beskrivning";
    },
    get$setPermissionsLevel() {
      return "St\xe4ll in beh\xf6righetsniv\xe5";
    },
    get$settings() {
      return "Inst\xe4llningar";
    },
    get$share(_) {
      return "Dela";
    },
    sharedTheLocation$1(username) {
      return username + " delade sin position";
    },
    get$shareLocation() {
      return "Dela plats";
    },
    get$presencesToggle() {
      return "Visa statusmeddelanden fr\xe5n andra anv\xe4ndare";
    },
    get$skip(_) {
      return "Hoppa \xf6ver";
    },
    get$sourceCode() {
      return "K\xe4llkod";
    },
    get$spaceName() {
      return "Utrymmes namn";
    },
    startedACall$1(senderName) {
      return senderName + " startade ett samtal";
    },
    get$status(_) {
      return "Status";
    },
    get$submit(_) {
      return "Skicka in";
    },
    get$synchronizingPleaseWait() {
      return "Synkroniserar\u2026 Var god v\xe4nta.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Synchronizing\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "System";
    },
    get$theyDontMatch() {
      return "Dom Matchar Inte";
    },
    get$theyMatch() {
      return "Dom Matchar";
    },
    get$tooManyRequestsWarning() {
      return "F\xf6r m\xe5nga f\xf6rfr\xe5gningar. V\xe4nligen f\xf6rs\xf6k senare!";
    },
    get$tryToSendAgain() {
      return "F\xf6rs\xf6k att skicka igen";
    },
    get$unavailable() {
      return "Upptagen";
    },
    unbannedUser$2(username, targetName) {
      return username + " avbannade " + targetName;
    },
    get$unblockDevice() {
      return "Avblockera enhet";
    },
    get$unknownDevice() {
      return "Ok\xe4nd enhet";
    },
    get$unknownEncryptionAlgorithm() {
      return "Ok\xe4nd krypteringsalgoritm";
    },
    unknownEvent$1(type) {
      return "Ok\xe4nd h\xe4ndelse '" + type + "'";
    },
    get$unpin() {
      return "Avn\xe5la";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " och " + count + " andra skriver\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " och " + username2 + " skriver\u2026";
    },
    userIsTyping$1(username) {
      return username + " skriver\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " l\xe4mnade chatten";
    },
    get$username(_) {
      return "Anv\xe4ndarnamn";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " skickade en " + type + " h\xe4ndelse";
    },
    get$unverified() {
      return "Ej verifierad";
    },
    get$verified() {
      return "Verifierad";
    },
    get$verifyStart() {
      return "Starta verifiering";
    },
    get$verifySuccess() {
      return "Du har lyckats verifiera!";
    },
    get$verifyTitle() {
      return "Verifiera andra konton";
    },
    get$visibilityOfTheChatHistory() {
      return "Chatt-historikens synlighet";
    },
    get$visibleForAllParticipants() {
      return "Synlig f\xf6r alla deltagare";
    },
    get$visibleForEveryone() {
      return "Synlig f\xf6r alla";
    },
    get$voiceMessage() {
      return "R\xf6stmeddelande";
    },
    get$waitingPartnerAcceptRequest() {
      return "V\xe4ntar p\xe5 att deltagaren accepterar beg\xe4ran\u2026";
    },
    get$waitingPartnerEmoji() {
      return "V\xe4ntar p\xe5 att deltagaren accepterar emojien\u2026";
    },
    get$waitingPartnerNumbers() {
      return "V\xe4ntar p\xe5 att deltagaren accepterar nummer\u2026";
    },
    get$warning() {
      return "Varning!";
    },
    get$weSentYouAnEmail() {
      return "Vi skickade dig ett e-postmeddelande";
    },
    get$whoCanPerformWhichAction() {
      return "Vem kan utf\xf6ra vilken \xe5tg\xe4rd";
    },
    get$whoIsAllowedToJoinThisGroup() {
      return "Vilka som \xe4r tilll\xe5tna att ansluta till denna grupp";
    },
    get$whyDoYouWantToReportThis() {
      return "Varf\xf6r vill du rapportera detta?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Med dessa addresser kan du \xe5terst\xe4lla ditt l\xf6senord.";
    },
    get$writeAMessage() {
      return "Skriv ett meddelande\u2026";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$yes() {
      return "Ja";
    },
    get$you() {
      return "Du";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Du deltar inte l\xe4ngre i denna chatt";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Du har blivit bannad fr\xe5n denna chatt";
    },
    get$yourPublicKey() {
      return "Din publika nyckel";
    },
    get$messageInfo() {
      return "Meddelandeinformation";
    },
    get$time(_) {
      return "Tid";
    },
    get$sender() {
      return "Avs\xe4ndare";
    },
    get$openGallery() {
      return "\xd6ppna galleri";
    },
    get$removeFromSpace() {
      return "Ta bort fr\xe5n utrymme";
    },
    videoWithSize$1(size) {
      return "Video (" + size + ")";
    },
    get$markAsRead() {
      return "Markera som l\xe4st";
    },
    reactedWith$2(sender, reaction) {
      return sender + " reagerade med " + reaction;
    },
    get$pinMessage() {
      return "F\xe4st i rum";
    },
    get$confirmEventUnpin() {
      return "\xc4r du s\xe4ker p\xe5 att h\xe4ndelsen inte l\xe4ngre skall vara fastn\xe5lad?";
    },
    get$emojis() {
      return "Uttryckssymboler";
    },
    get$youRejectedTheInvitation() {
      return "Du avvisade inbjudan";
    },
    get$youJoinedTheChat() {
      return "Du gick med i chatten";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Du accepterade inbjudan";
    },
    youBannedUser$1(user) {
      return "Du f\xf6rbj\xf6d " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Du har \xe5terkallat inbjudan till " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Du har blivit inbjuden av " + user;
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Du bj\xf6d in " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Du sparkade ut " + user;
    },
    youUnbannedUser$1(user) {
      return "Du \xe5terkallade f\xf6rbudet f\xf6r " + user;
    },
    hasKnocked$1(user) {
      return user + " har knackat";
    },
    get$usersMustKnock() {
      return "Users must knock";
    },
    get$noOneCanJoin() {
      return "No one can join";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " would like to join the chat.";
    },
    get$knock() {
      return "Knock";
    },
    get$users() {
      return "Anv\xe4ndare";
    },
    countFiles$1(count) {
      return count + " filer";
    },
    get$user() {
      return "Anv\xe4ndare";
    },
    get$custom() {
      return "Anpassad";
    },
    get$noKeyForThisMessage() {
      return "Detta kan h\xe4nda om meddelandet skickades innan du loggade in p\xe5 ditt konto i den h\xe4r enheten.\n\nDet kan ocks\xe5 vara s\xe5 att avs\xe4ndaren har blockerat din enhet eller att n\xe5got gick fel med internetanslutningen.\n\nKan du l\xe4sa meddelandet i en annan session? I s\xe5dana fall kan du \xf6verf\xf6ra meddelandet fr\xe5n den sessionen! G\xe5 till Inst\xe4llningar > Enhet och s\xe4kerst\xe4ll att dina enheter har verifierat varandra. N\xe4r du \xf6ppnar rummet n\xe4sta g\xe5ng och b\xe5da sessionerna \xe4r i f\xf6rgrunden, s\xe5 kommer nycklarna att \xf6verf\xf6ras automatiskt.\n\nVill du inte f\xf6rlora nycklarna vid utloggning eller n\xe4r du byter enhet? S\xe4kerst\xe4ll att du har aktiverat s\xe4kerhetskopiering f\xf6r chatten i inst\xe4llningarna.";
    },
    get$newSpace() {
      return "Nytt utrymme";
    },
    get$doNotShowAgain() {
      return "Visa inte igen";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Tom chatt (var " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "\xc5ter\xf6ppna chatt";
    },
    get$noBackupWarning() {
      return "Varning! Om du inte aktiverar s\xe4kerhetskopiering av chattar s\xe5 tappar du \xe5tkomst till krypterade meddelanden. Det \xe4r rekommenderat att du aktiverar s\xe4kerhetskopiering innan du loggar ut.";
    },
    get$noOtherDevicesFound() {
      return "Inga andra enheter hittades";
    },
    fileIsTooBigForServer$1(max) {
      return "Servern informerar om att filen \xe4r f\xf6r stor f\xf6r att skickas.";
    },
    get$jumpToLastReadMessage() {
      return "Hoppa till det senast l\xe4sta meddelandet";
    },
    get$readUpToHere() {
      return "L\xe4s upp till hit";
    },
    get$jump() {
      return "Hoppa";
    },
    get$openLinkInBrowser() {
      return "\xd6ppna l\xe4nk i webbl\xe4sare";
    },
    get$profileNotFound() {
      return "Anv\xe4ndaren kunde onte hittas p\xe5 servern. Kanske \xe4r det ett anslutningsproblem eller s\xe5 finns inte anv\xe4ndaren.";
    },
    get$setColorTheme() {
      return "V\xe4lj f\xe4rgtema:";
    },
    get$invite() {
      return "Bjud in";
    },
    get$invitePrivateChat() {
      return "\ud83d\udce8 Bjud in privat chatt";
    },
    get$invalidInput() {
      return "Ogiltig input!";
    },
    wrongPinEntered$1(seconds) {
      return "Fel pin-kod inslagen! F\xf6rs\xf6k igen om " + seconds + " sekunder\u2026";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$interactiveTranslatorRequired() {
      return "Required";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocabulary";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$declinedInvitation() {
      return "Declined invitation";
    },
    get$acceptedInvitation() {
      return "Accepted invitation";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    get$pleaseEnterANumber() {
      return "V\xe4nligen ange ett nummer st\xf6rre \xe4n 0";
    },
    get$archiveRoomDescription() {
      return "Den h\xe4r chatten kommer flyttas till arkivet. Andra anv\xe4ndare kommer kunna se att du har l\xe4mnat chatten.";
    },
    get$roomUpgradeDescription() {
      return "Chatten kommer d\xe5 att \xe5terskapas med den nya rumversionen. Alla medlemmar kommer bli p\xe5minda om att de m\xe5ste byta till den nya chatten. Du kan l\xe4sa mer om rumversioner p\xe5 https://spec.matrix.org/latest/rooms/";
    },
    get$removeDevicesDescription() {
      return "Du kommer att bli utloggad fr\xe5n den h\xe4r enheten och kommer inte l\xe4ngre kunna f\xe5 meddelanden.";
    },
    get$banUserDescription() {
      return "Anv\xe4ndaren kommer bannlysas fr\xe5n chatten och kommer inte kunna g\xe5 med i chatten igen tills bannlysningen avslutas.";
    },
    get$unbanUserDescription() {
      return "Anv\xe4ndaren kommer kunna g\xe5 med i chatten igen om den f\xf6rs\xf6ker.";
    },
    get$kickUserDescription() {
      return "Anv\xe4ndaren sparkas ut ur chatten men bannlyses inte. I offentliga chattar kan anv\xe4ndaren g\xe5 med igen n\xe4r som helst.";
    },
    get$makeAdminDescription() {
      return "N\xe4r du g\xf6r denna anv\xe4ndare till administrat\xf6r kommer du inte kunna \xe5ngra det eftersom de kommer ha samma beh\xf6righeter som du.";
    },
    get$yourGlobalUserIdIs() {
      return "Ditt globala anv\xe4ndar-ID \xe4r: ";
    },
    noUsersFoundWithQuery$1(query) {
      return "Tyv\xe4rr kunde ingen anv\xe4ndare hittas med \u201d" + query + "\u201d. V\xe4nligen kontrollera om du gjort ett stavfel.";
    },
    get$knocking() {
      return "Knocking";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "Chat can be discovered via the search on " + server;
    },
    get$searchChatsRooms() {
      return "S\xf6k efter #chattar, @anv\xe4ndare\u2026";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$nothingFound() {
      return "Inget hittades\u2026";
    },
    get$wrongRecoveryKey() {
      return "Tyv\xe4rr verkar detta inte vara den korrekta \xe5terst\xe4llningsnyckeln.";
    },
    get$startConversation() {
      return "Starta konversation";
    },
    get$commandHint_sendraw() {
      return "Skicka r\xe5 json";
    },
    get$searchForUsers() {
      return "S\xf6k efter @anv\xe4ndare\u2026";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "V\xe4nligen skriv ditt nuvarande l\xf6senord";
    },
    get$newPassword() {
      return "Nytt l\xf6senord";
    },
    get$pleaseChooseAStrongPassword() {
      return "V\xe4nligen v\xe4lj ett starkt l\xf6senord";
    },
    get$passwordsDoNotMatch() {
      return "L\xf6senorden passar inte";
    },
    get$passwordIsWrong() {
      return "Det angivna l\xf6senordet \xe4r fel";
    },
    get$publicChatAddresses() {
      return "Public chat addresses";
    },
    get$createNewAddress() {
      return "Create new address";
    },
    get$joinSpace() {
      return "G\xe5 med i utrymme";
    },
    get$publicSpaces() {
      return "Offentliga utrymmen";
    },
    get$decline() {
      return "Neka";
    },
    get$thisDevice() {
      return "Denna enhet:";
    },
    get$initAppError() {
      return "Ett problem skedde n\xe4r appen initierades";
    },
    get$userRole() {
      return "User role";
    },
    searchIn$1(chat) {
      return 'Search in chat "' + chat + '"...';
    },
    get$searchMore() {
      return "Search more...";
    },
    get$gallery() {
      return "Gallery";
    },
    get$files(_) {
      return "Files";
    },
    sessionLostBody$2(url, error) {
      return "Din session \xe4r f\xf6rlorad. V\xe4nligen rapportera detta fel till utvecklarna h\xe4r: " + url + ". Felmeddelandet \xe4r: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "Appen f\xf6rs\xf6ker nu f\xe5 tillbaks din session fr\xe5n backupen. V\xe4nligen rapportera detta problem till utvecklarna h\xe4r: " + url + ". Felmeddelandet \xe4r: " + error;
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$sendReadReceipts() {
      return "Skicka l\xe4skvitton";
    },
    get$sendTypingNotificationsDescription() {
      return "Andra deltagare i en diskussion kan se n\xe4r du skriver.";
    },
    get$sendReadReceiptsDescription() {
      return "Andra deltagare i en diskussion kan se n\xe4r du l\xe4st ett meddelande.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verifiera enhet";
    },
    get$verifyOtherDeviceDescription() {
      return "N\xe4r du verifierar en enhet s\xe5 kan era enheter utv\xe4xla nycklar, vilket f\xf6rb\xe4ttrar s\xe4kerheten. \ud83d\udcaa N\xe4r du p\xe5b\xf6rjar en verifiering s\xe5 ser du en popup-ruta p\xe5 b\xe5da enheterna. I den rutan ser du ett antal tecken som du j\xe4mf\xf6r med det som visas p\xe5 den andra enheten. Det \xe4r b\xe4st att ha b\xe5da enheterna till hands innan du p\xe5b\xf6rjar verifieringen. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " accepterade nyckelverifieringen";
    },
    canceledKeyVerification$1(sender) {
      return sender + " avbr\xf6t nyckelverifieringen";
    },
    completedKeyVerification$1(sender) {
      return sender + " fullbordade nyckelverifieringen";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " \xe4r redo f\xf6r nyckelverifiering";
    },
    requestedKeyVerification$1(sender) {
      return sender + " beg\xe4rde nyckelverifiering";
    },
    startedKeyVerification$1(sender) {
      return sender + " p\xe5b\xf6rjade nyckelverifiering";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$stickers() {
      return "Klisterm\xe4rken";
    },
    get$discover() {
      return "Uppt\xe4ck";
    },
    get$commandHint_ignore() {
      return "Ignore the given matrix ID";
    },
    get$commandHint_unignore() {
      return "Unignore the given matrix ID";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run language assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run language assistance after typing messages";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$spaceCapacity() {
      return "Space capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$spaceCapacityHasBeenChanged() {
      return "Space capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of non-admins.";
    },
    get$spaceCapacitySetTooLow() {
      return "Space capacity cannot be set below the current number of non-admins.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of non-admins allowed in a chat.";
    },
    get$spaceCapacityExplanation() {
      return "Space capacity limits the number of non-admins allowed in a space.";
    },
    get$chatExceedsCapacity() {
      return "This chat exceeds its capacity.";
    },
    get$spaceExceedsCapacity() {
      return "This space exceeds its capacity.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Right now there are " + count + " users blocked.";
    },
    get$restricted() {
      return "Restricted";
    },
    get$knockRestricted() {
      return "Knock restricted";
    },
    get$createNewSpace() {
      return "Nytt utrymme";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$previous() {
      return "Previous";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$continueText() {
      return "Continue";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$sendCanceled() {
      return "Sending canceled";
    },
    goToSpace$1(space) {
      return "Go to space: " + space;
    },
    get$markAsUnread() {
      return "Mark as unread";
    },
    userLevel$1(level) {
      return "" + level + " - User";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Admin";
    },
    get$changeGeneralChatSettings() {
      return "Change general chat settings";
    },
    get$inviteOtherUsers() {
      return "Invite other users to this chat";
    },
    get$changeTheChatPermissions() {
      return "Change the chat permissions";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Change the visibility of the chat history";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Change the main public chat address";
    },
    get$sendRoomNotifications() {
      return "Send a @room notifications";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Change the description of the chat";
    },
    get$chatPermissionsDescription() {
      return "Define which power level is necessary for certain actions in this chat. The power levels 0, 50 and 100 are usually representing users, moderators and admins, but any gradation is possible.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Update " + version + " installed!";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Doesn't seem to be a compatible homeserver. Wrong URL?";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "SuApine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$unlockedLanguageTools() {
      return "You\u2019ve unlocked the language tools for this message. Try them out by clicking below!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$calculatingFileSize() {
      return "Calculating file size...";
    },
    get$prepareSendingAttachment() {
      return "Prepare sending attachment...";
    },
    get$sendingAttachment() {
      return "Sending attachment...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Sending attachment " + index + " of " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Server limit reached! Waiting " + seconds + " seconds...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Note: When you connect all your devices to the chat backup, they are automatically verified.";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$blur(_) {
      return "Blur:";
    },
    get$opacity(_) {
      return "Opacity:";
    },
    get$setWallpaper() {
      return "Set wallpaper";
    },
    get$noContactInformationProvided() {
      return "Server does not provide any valid contact information";
    },
    get$contactServerAdmin() {
      return "Contact server admin";
    },
    get$contactServerSecurity() {
      return "Contact server security";
    },
    get$supportPage() {
      return "Support page";
    },
    get$serverInformation() {
      return "Server information:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Bold text";
    },
    get$italicText() {
      return "Italic text";
    },
    get$strikeThrough() {
      return "Strikethrough";
    },
    get$pleaseFillOut() {
      return "Please fill out";
    },
    get$invalidUrl() {
      return "Invalid url";
    },
    get$addLink() {
      return "Add link";
    },
    get$unableToJoinChat() {
      return "Unable to join chat. Maybe the other party has already closed the conversation.";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$mandatoryUpdateRequired() {
      return "Mandatory Update Required";
    },
    get$updateAvailable() {
      return "Update Available";
    },
    get$mandatoryUpdateRequiredDesc() {
      return "A new version of the app is required to continue. Please update now to proceed.";
    },
    get$updateAvailableDesc() {
      return "A new version of the app is available. Update now for the latest features and improvements!";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language";
    },
    get$couldNotFindTTS() {
      return "We couldn't find a text-to-speech engine for your current target language. ";
    },
    get$ttsInstructionsHyperlink() {
      return "Click here to view instructions for downloading a new voice on your device.";
    },
    get$currentVersion() {
      return "Current Version";
    },
    get$latestVersion() {
      return "Latest Version";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseAgreeToTOS() {
      return "Please agree to the Terms and Conditions";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "Click on a word or the buttons below to learn more";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$noEmojiSelectedTooltip() {
      return "No emoji selected";
    },
    get$writingExercisesTooltip() {
      return "Writing activities";
    },
    get$listeningExercisesTooltip() {
      return "Listening activities";
    },
    get$readingExercisesTooltip() {
      return "Reading activities";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$formsNotFound() {
      return "Forms could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$downloadSpaceAnalytics() {
      return "Download space analytics";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    pickAnEmoji$2(lemma, partOfSpeech) {
      return "What's your favorite emoji for '" + lemma + "'?";
    },
    get$lemmaMeaningInstructionsBody() {
      return "Above is the meaning of the lemma. Double-click to edit.";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$notInClass() {
      return "Not in a class!";
    },
    get$noClassCode() {
      return "No class code!";
    },
    get$otherPartyNotLoggedIn() {
      return "The other party is currently not logged in and therefore cannot receive messages!";
    },
    get$chooseCorrectLabel() {
      return "Choose the correct label.";
    },
    levelPopupTitle$1(level) {
      return "Congratulations on reaching\nLevel " + level;
    },
    get$activityPlannerTitle() {
      return "Activity Planner";
    },
    get$topicLabel() {
      return "Topic";
    },
    get$topicPlaceholder() {
      return "Choose a topic...";
    },
    get$modeLabel() {
      return "Mode";
    },
    get$modePlaceholder() {
      return "Choose a mode...";
    },
    get$learningObjectiveLabel() {
      return "Learning Objective";
    },
    get$learningObjectivePlaceholder() {
      return "Choose a learning objective...";
    },
    get$mediaLabel() {
      return "Media learners should share";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR Level";
    },
    get$generateActivitiesButton() {
      return "Generate Activities";
    },
    get$launchActivityButton() {
      return "Launch Activity";
    },
    get$image(_) {
      return "Image";
    },
    get$video(_) {
      return "Video";
    },
    get$nan() {
      return "Not applicable";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete the highlighted word activities to unlock";
    },
    get$myBookmarkedActivities() {
      return "My Bookmarked Activities";
    },
    get$noBookmarkedActivities() {
      return "No bookmarked activities";
    },
    get$activityTitle() {
      return "Activity Title";
    },
    get$addVocabulary() {
      return "Add Vocabulary";
    },
    get$instructions() {
      return "Instructions";
    },
    get$numberOfLearners() {
      return "Number of learners";
    },
    get$mustBeInteger() {
      return "Must be an integer e.g. 1, 2, 3, ...";
    },
    noLemmasFound$1(xp) {
      return "There's no vocabulary with more than " + xp + " XP. Keep practicing!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "The space will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$open(_) {
      return "Open";
    },
    get$waitingForServer() {
      return "Waiting for server...";
    },
    get$whatIsLemma() {
      return "What is the lemma?";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$clickForMeaningActivity() {
      return "Click here for a Meaning Challenge";
    },
    get$meaning() {
      return "Meaning";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nSv, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nSv":{"L10n":[]}}'));
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_259", e: "endPart", h: h});
})($__dart_deferred_initializers__, "NMEk5BXgPjm0UjAz+oWATvuj3aw=");
;
//# sourceMappingURL=main.dart.js_259.part.js.map
