// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.6.0.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_244", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    L10nHr$() {
      return new B.L10nHr(A.canonicalizedLocale("hr"));
    },
    L10nHr: function L10nHr(t0) {
      this.localeName = t0;
    }
  };
  A = holdersList[0];
  C = holdersList[51];
  B = hunkHelpers.updateHolder(holdersList[26], B);
  B.L10nHr.prototype = {
    get$alwaysUse24HourFormat() {
      return "true";
    },
    get$repeatPassword() {
      return "Ponovi lozinku";
    },
    get$notAnImage() {
      return "Nije slikovna datoteka.";
    },
    get$remove(_) {
      return "Ukloni";
    },
    get$importNow() {
      return "Uvezi sada";
    },
    get$importEmojis() {
      return "Uvezi emoji slike";
    },
    get$importFromZipFile() {
      return "Uvezi iz .zip datoteke";
    },
    get$exportEmotePack() {
      return "Izvezi paket emotikona kao .zip";
    },
    get$replace(_) {
      return "Zamijeni";
    },
    aboutHomeserver$1(homeserver) {
      return "About " + homeserver;
    },
    get$accept(_) {
      return "Prihvati";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " je prihvatio/la poziv";
    },
    get$account() {
      return "Ra\u010dun";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " je aktivirao/la obostrano \u0161ifriranje";
    },
    get$addEmail() {
      return "Dodaj e-mail";
    },
    get$confirmMatrixId() {
      return "Za brisanje tvog ra\u010duna potvrdi svoj Matrix ID.";
    },
    supposedMxid$1(mxid) {
      return "Trebao bi biti " + mxid;
    },
    get$addToSpace() {
      return "Dodaj u prostor";
    },
    get$admin() {
      return "Administrator";
    },
    get$alias() {
      return "pseudonim";
    },
    get$all() {
      return "Svi";
    },
    get$commandHint_googly() {
      return "Po\u0161alji kotrljaju\u0107e o\u010di";
    },
    get$commandHint_cuddle() {
      return "Po\u0161alji ma\u017eenje";
    },
    get$commandHint_hug() {
      return "Po\u0161alji grljenje";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " ti \u0161alje kotrljaju\u0107e o\u010di";
    },
    cuddleContent$1(senderName) {
      return senderName + " te mazi";
    },
    hugContent$1(senderName) {
      return senderName + " te grli";
    },
    answeredTheCall$1(senderName) {
      return senderName + " je odgovorio/la na poziv";
    },
    get$anyoneCanJoin() {
      return "Svatko se mo\u017ee pridru\u017eiti";
    },
    get$archive() {
      return "Arhiv";
    },
    get$areGuestsAllowedToJoin() {
      return "Smiju li se gosti pridru\u017eiti";
    },
    get$areYouSure() {
      return "Stvarno to \u017eeli\u0161?";
    },
    get$areYouSureYouWantToLogout() {
      return "Stvarno se \u017eeli\u0161 odjaviti?";
    },
    get$askSSSSSign() {
      return "Za potpisivanje druge osobe, upi\u0161i svoju sigurnosnu lozinku ili klju\u010d za oporavak.";
    },
    askVerificationRequest$1(username) {
      return "Prihvatiti ovaj zahtjev za potvr\u0111ivanje od " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "Doma\u0107i poslu\u017eitelj podr\u017eava vrste prijave:\n" + serverVersions + "\nMe\u0111utim ovaj program podr\u017eava samo:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Po\u0161alji pismene obavijesti";
    },
    get$swipeRightToLeftToReply() {
      return "Za odgovaranje povuci prstom zdesna ulijevo";
    },
    get$sendOnEnter() {
      return "Po\u0161alji pritiskom tipke enter";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "Doma\u0107i poslu\u017eitelj podr\u017eava verzije specifikacije:\n" + serverVersions + "\nMe\u0111utim ovaj program podr\u017eava samo " + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return A.S(chats) + " chats and " + A.S(participants) + " participants";
    },
    get$noMoreChatsFound() {
      return "No more chats found...";
    },
    get$noChatsFoundHere() {
      return "No chats found here yet. Start a new chat with someone by using the button below. \u2935\ufe0f";
    },
    get$unread() {
      return "Unread";
    },
    get$space() {
      return "Space";
    },
    get$spaces() {
      return "Spaces";
    },
    get$banFromChat() {
      return "Isklju\u010di iz razgovora";
    },
    get$banned() {
      return "Isklju\u010den";
    },
    bannedUser$2(username, targetName) {
      return username + " je isklju\u010dio/la " + targetName;
    },
    get$blockDevice() {
      return "Blokiraj ure\u0111aj";
    },
    get$blocked() {
      return "Blokirano";
    },
    get$botMessages() {
      return "Poruke bota";
    },
    get$cancel(_) {
      return "Odustani";
    },
    cantOpenUri$1(uri) {
      return "URI adresa " + uri + " se ne mo\u017ee otvoriti";
    },
    get$changeDeviceName() {
      return "Promijeni ime ure\u0111aja";
    },
    changedTheChatAvatar$1(username) {
      return username + " je promijenio/la avatar razgovora";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " je promijenio/la opis razgovora u: \u201e" + description + "\u201d";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " je promijenio/la ime razgovora u: \u201e" + chatname + "\u201d";
    },
    changedTheChatPermissions$1(username) {
      return username + " je promijenio/la dozvole razgovora";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " je promijenio/la ime u: \u201e" + displayname + "\u201d";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " je promijenio/la pravila pristupa za goste";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " je promijenio/la pravila pristupa za goste u: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " je promijenio/la vidljivost kronologije";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " je promijenio/la vidljivost kronologije u: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " je promijenio/la pravila pridru\u017eivanja";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " je promijenio/la pravila pridru\u017eivanja u: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " je promijenio/la svoj avatar";
    },
    changedTheRoomAliases$1(username) {
      return username + " je promijenio/la pseudonime soba";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " je promijenio/la poveznicu poziva";
    },
    get$changePassword() {
      return "Promijeni lozinku";
    },
    get$changeTheme() {
      return "Promijeni tvoj stil";
    },
    get$changeTheNameOfTheGroup() {
      return "Promijeni ime grupe";
    },
    get$changeYourAvatar() {
      return "Promijeni svoj avatar";
    },
    get$channelCorruptedDecryptError() {
      return "\u0160ifriranje je o\u0161te\u0107eno";
    },
    get$chat() {
      return "Razgovor";
    },
    get$chatDetails() {
      return "Detalji razgovora";
    },
    get$chats() {
      return "Razgovori";
    },
    get$chooseAStrongPassword() {
      return "Odaberi sna\u017enu lozinku";
    },
    get$clearArchive() {
      return "Isprazni arhiv";
    },
    get$close(_) {
      return "Zatvori";
    },
    get$commandHint_markasdm() {
      return "Ozna\u010di kao sobu za izravnu razmjenu poruka za zadani Matrix ID";
    },
    get$commandHint_markasgroup() {
      return "Ozna\u010di kao grupu";
    },
    get$commandHint_ban() {
      return "Isklju\u010di navedenog korisnika iz ove sobe";
    },
    get$commandHint_clearcache() {
      return "Isprazni predmemoriju";
    },
    get$commandHint_create() {
      return "Stvori prazan grupni razgovor\nKoristi --no-encryption za deaktiviranje \u0161ifriranja";
    },
    get$commandHint_discardsession() {
      return "Odbaci sesiju";
    },
    get$commandHint_dm() {
      return "Zapo\u010dni izravni razgovor\nKoristi --no-encryption za deaktiviranje \u0161ifriranja";
    },
    get$commandHint_html() {
      return "Po\u0161alji HTML formatirani tekst";
    },
    get$commandHint_invite() {
      return "Pozovi navedenog korisnika u ovu sobu";
    },
    get$commandHint_join() {
      return "Pridru\u017ei se navedenoj sobi";
    },
    get$commandHint_kick() {
      return "Ukloni navedenog korisnika iz ove sobe";
    },
    get$commandHint_leave() {
      return "Napusti ovu sobu";
    },
    get$commandHint_me() {
      return "Opi\u0161i se";
    },
    get$commandHint_myroomavatar() {
      return "Postavi svoju sliku za ovu sobu (mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Postavi svoje ime za ovu sobu";
    },
    get$commandHint_op() {
      return "Postavi razinu prava navedenog korisnika (standardno: 50)";
    },
    get$commandHint_plain() {
      return "Po\u0161alji neformatirani tekst";
    },
    get$commandHint_react() {
      return "Po\u0161alji odgovor kao reakciju";
    },
    get$commandHint_send() {
      return "Po\u0161alji tekst";
    },
    get$commandHint_unban() {
      return "Ponovo uklju\u010di navedenog korisnika u ovu sobu";
    },
    get$commandInvalid() {
      return "Naredba nevaljana";
    },
    commandMissing$1(command) {
      return command + " nije naredba.";
    },
    get$compareEmojiMatch() {
      return "Usporedi emoji sli\u010dice";
    },
    get$compareNumbersMatch() {
      return "Usporedi brojeve";
    },
    get$configureChat() {
      return "Konfiguriraj razgovor";
    },
    get$confirm(_) {
      return "Potvrdi";
    },
    get$containsDisplayName() {
      return "Sadr\u017eava prikazano ime";
    },
    get$containsUserName() {
      return "Sadr\u017ei korisni\u010dko ime";
    },
    get$contentHasBeenReported() {
      return "Sadr\u017eaj je prijavljen administratorima poslu\u017eitelja";
    },
    get$copiedToClipboard() {
      return "Kopirano u me\u0111uspremnik";
    },
    get$copy(_) {
      return "Kopiraj";
    },
    couldNotDecryptMessage$1(error) {
      return "Neuspjelo de\u0161ifriranje poruke: " + error;
    },
    countParticipants$1(count) {
      return A.S(count) + " sudionika";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " je zapo\u010deo/la razgovor";
    },
    get$currentlyActive() {
      return "Trenuta\u010dno aktivni";
    },
    get$darkTheme() {
      return "Tamna";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Ovo \u0107e nepovratno deaktivirati tvoj korisni\u010dki ra\u010dun. Stvarno to \u017eeli\u0161?";
    },
    get$defaultPermissionLevel() {
      return "Standardna razina dozvole";
    },
    get$$delete(_) {
      return "Izbri\u0161i";
    },
    get$deleteAccount() {
      return "Izbri\u0161i ra\u010dun";
    },
    get$deleteMessage() {
      return "Izbri\u0161i poruku";
    },
    get$devices() {
      return "Ure\u0111aji";
    },
    get$directChats() {
      return "Izravni razgovori";
    },
    get$allRooms() {
      return "Svi grupni razgovori";
    },
    get$displaynameHasBeenChanged() {
      return "Prikazno ime je promijenjeno";
    },
    get$downloadFile() {
      return "Preuzmi datoteku";
    },
    get$edit() {
      return "Uredi";
    },
    get$editBlockedServers() {
      return "Uredi blokirane poslu\u017eitelje";
    },
    get$chatPermissions() {
      return "Dozvole za razgovor";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    get$editDisplayname() {
      return "Uredi prikazano ime";
    },
    get$editRoomAliases() {
      return "Uredi pseudonime sobe";
    },
    get$editRoomAvatar() {
      return "Uredi avatar sobe";
    },
    get$emoteExists() {
      return "Emotikon ve\u0107 postoji!";
    },
    get$emoteInvalid() {
      return "Neispravna kratica emotikona!";
    },
    get$emoteKeyboardNoRecents() {
      return "Ovdje \u0107e se pojaviti nedavno kori\u0161teni emotikoni \u2026";
    },
    get$emotePacks() {
      return "Paketi emotikona za sobu";
    },
    get$globalChatId() {
      return "Globalni ID razgovora";
    },
    get$accessAndVisibility() {
      return "Pristup i vidljivost";
    },
    get$customEmojisAndStickers() {
      return "Prilago\u0111eni emojiji i naljepnice";
    },
    get$emoteShortcode() {
      return "Kratica emotikona";
    },
    get$emoteWarnNeedToPick() {
      return "Mora\u0161 odabrati jednu kraticu emotikona i sliku!";
    },
    get$emptyChat() {
      return "Prazan razgovor";
    },
    get$enableEmotesGlobally() {
      return "Aktiviraj paket emotikona globalno";
    },
    get$enableEncryption() {
      return "Aktiviraj \u0161ifriranje";
    },
    get$encrypted() {
      return "\u0160ifrirano";
    },
    get$encryptionNotEnabled() {
      return "\u0160ifriranje nije aktivirano";
    },
    endedTheCall$1(senderName) {
      return senderName + " je zavr\u0161io/la poziv";
    },
    get$enterAnEmailAddress() {
      return "Upi\u0161i e-adressu";
    },
    errorObtainingLocation$1(error) {
      return "Gre\u0161ka u dohva\u0107anju lokacije: " + error;
    },
    get$extremeOffensive() {
      return "Izrazito uvredljiv";
    },
    get$fontSize(_) {
      return "Veli\u010dina fonta";
    },
    get$forward(_) {
      return "Proslijedi";
    },
    get$fromJoining() {
      return "Od pridru\u017eivanja";
    },
    get$fromTheInvitation() {
      return "Od poziva";
    },
    get$goToTheNewRoom() {
      return "Idi u novu sobu";
    },
    get$group() {
      return "Grupiraj";
    },
    get$chatDescription() {
      return "Opis razgovora";
    },
    get$groups() {
      return "Grupe";
    },
    groupWith$1(displayname) {
      return "Grupa s " + displayname;
    },
    get$guestsAreForbidden() {
      return "Gosti su zabranjeni";
    },
    get$guestsCanJoin() {
      return "Gosti se mogu pridru\u017eiti";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " je povukao/la poziv za " + targetName;
    },
    get$help() {
      return "Pomo\u0107";
    },
    get$hideRedactedMessages() {
      return "Sakrij redigirane poruke";
    },
    get$hideRedactedMessagesBody() {
      return "Ako netko redigira poruku, ta poruka vi\u0161e ne\u0107e biti vidljiva u razgovoru.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Sakrij neva\u017ee\u0107e ili nepoznate formate poruka";
    },
    get$howOffensiveIsThisContent() {
      return "Koliko je ovaj sadr\u017eaj uvredljiv?";
    },
    get$block() {
      return "Blokiraj";
    },
    get$blockedUsers() {
      return "Blokirani korisnici";
    },
    get$blockListDescription() {
      return "Mo\u017ee\u0161 blokirati korisnike koji te ometaju. Ne\u0107e\u0161 mo\u0107i primati poruke ili pozivnice za sobe od korisnika koji se nalaze u tvom osobnom popisu blokiranih.";
    },
    get$blockUsername() {
      return "Zanemari korisni\u010dko ime";
    },
    get$iHaveClickedOnLink() {
      return "Pritisnuo/la sam poveznicu";
    },
    get$incorrectPassphraseOrKey() {
      return "Neispravna lozinka ili klju\u010d za obnavljanje";
    },
    get$inoffensive() {
      return "Neuvredljiv";
    },
    get$inviteContact() {
      return "Pozovi kontakt";
    },
    get$noChatDescriptionYet() {
      return "Opis razgovora jo\u0161 nije stvoren.";
    },
    get$tryAgain() {
      return "Poku\u0161aj ponovo";
    },
    get$invited() {
      return "Pozvan/a";
    },
    get$redactMessageDescription() {
      return "Poruka \u0107e se redigirati za sve sudionike u ovom razgovoru. To se ne mo\u017ee poni\u0161titi.";
    },
    get$optionalRedactReason() {
      return "(Opcionalno) Razlog za redigiranje ove poruke \u2026";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " je pozvao/la " + targetName;
    },
    get$invitedUsersOnly() {
      return "Samo pozvani korisnici";
    },
    get$inviteForMe() {
      return "Poziv za mene";
    },
    inviteText$2(username, link) {
      return username + " te je pozvao/la u FluffyChat. \n1. Posjeti strnicu fluffychat.im i instaliraj aplikaciju \n2. Registriraj ili prijavi se \n3. Otvori poveznicu poziva: \n " + link;
    },
    get$isTyping() {
      return "pi\u0161e \u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " se pridru\u017eio/la razgovoru";
    },
    get$joinRoom() {
      return "Pridru\u017ei se sobi";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " je izbacio/la " + targetName;
    },
    get$kickFromChat() {
      return "Izbaci iz razgovora";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Zadnja aktivnost: " + localizedTimeShort;
    },
    get$leave() {
      return "Napusti";
    },
    get$leftTheChat() {
      return "Napustio/la je razgovor";
    },
    get$lightTheme() {
      return "Svijetla";
    },
    loadCountMoreParticipants$1(count) {
      return "U\u010ditaj jo\u0161 " + count + " sudionika";
    },
    get$dehydrate() {
      return "Izvezi sesiju i izbri\u0161i ure\u0111aj";
    },
    get$dehydrateWarning() {
      return "Ovo je nepovratna radnja. Spremi datoteku sigurnosne kopije na sigurno mjeto.";
    },
    get$dehydrateTor() {
      return "Korisnici TOR-a: izvezite sesiju";
    },
    get$dehydrateTorLong() {
      return "Korisnicima TOR-a preporu\u010duje se izvoz sesije prije zatvaranja prozora.";
    },
    get$loadingPleaseWait() {
      return "U\u010ditava se \u2026 Pri\u010dekaj.";
    },
    get$loadMore() {
      return "U\u010ditaj jo\u0161 \u2026";
    },
    get$locationDisabledNotice() {
      return "Lokacijske usluge su deaktivirane. Za dijeljenje tvoje lokacije aktiviraj ih.";
    },
    get$locationPermissionDeniedNotice() {
      return "Lokacijske dozvole su odbijene. Za dijeljenje tvoje lokacije dozvoli ih.";
    },
    get$logout() {
      return "Odjava";
    },
    get$memberChanges() {
      return "Promjene \u010dlana";
    },
    get$mention() {
      return "Spominjanje";
    },
    get$messages() {
      return "Poruke";
    },
    get$messagesStyle() {
      return "Poruke:";
    },
    get$moderator() {
      return "Voditelj";
    },
    get$newChat() {
      return "Novi razgovor";
    },
    get$newVerificationRequest() {
      return "Novi zahtjev za potvr\u0111ivanje!";
    },
    get$next(_) {
      return "Dalje";
    },
    get$no() {
      return "Ne";
    },
    get$noConnectionToTheServer() {
      return "Ne postoji veza s poslu\u017eiteljem";
    },
    get$noEmotesFound() {
      return "Nema emotikona. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Dijeli poveznicu za poziv";
    },
    get$noPasswordRecoveryDescription() {
      return "Jo\u0161 nisi dodao/la na\u010din za obnavljanje lozinke.";
    },
    get$noPermission() {
      return "Bez dozvole";
    },
    get$noRoomsFound() {
      return "Nema soba \u2026";
    },
    get$notifications() {
      return "Obavijesti";
    },
    get$notificationsEnabledForThisAccount() {
      return "Obavijesti su aktivirane za ovaj ra\u010dun";
    },
    get$obtainingLocation() {
      return "Dohva\u0107anje lokacije \u2026";
    },
    get$offensive() {
      return "Uvredljiv";
    },
    get$ok() {
      return "U redu";
    },
    get$oopsSomethingWentWrong() {
      return "Ups, dogodila se gre\u0161ka \u2026";
    },
    get$oneClientLoggedOut() {
      return "Jedan od tvojih klijenata je odjavljen";
    },
    get$addAccount() {
      return "Dodaj ra\u010dun";
    },
    get$enableMultiAccounts() {
      return "(BETA) Omogu\u0107i kori\u0161tenje vi\u0161e ra\u010duna na ovom ure\u0111aju";
    },
    get$openInMaps() {
      return "Otvori u kartama";
    },
    get$link() {
      return "Poveznica";
    },
    get$serverRequiresEmail() {
      return "Za registraciju ovaj poslu\u017eitelj mora potvrditi tvoju e-mail adresu.";
    },
    get$or() {
      return "Ili";
    },
    get$participant() {
      return "Sudionik";
    },
    get$passphraseOrKey() {
      return "tajni izraz ili klju\u010d za obnavljanje";
    },
    get$password(_) {
      return "Lozinka";
    },
    get$passwordHasBeenChanged() {
      return "Lozinka je promijenjena";
    },
    get$overview() {
      return "Pregled";
    },
    get$notifyMeFor() {
      return "Obavijesit me za";
    },
    get$passwordRecoverySettings() {
      return "Postavke za obnavljanje lozinke";
    },
    get$passwordRecovery() {
      return "Obnavljanje lozinke";
    },
    get$pickImage() {
      return "Odaberi sliku";
    },
    get$pin() {
      return "Prikva\u010di";
    },
    get$pleaseChoose() {
      return "Odaberi";
    },
    get$pleaseClickOnLink() {
      return "Pritisni poveznicu u e-poruci, zatim nastavi.";
    },
    get$pleaseEnterYourPassword() {
      return "Upi\u0161i svoju lozinku";
    },
    get$pleaseEnterYourPin() {
      return "Upi\u0161i svoj pin";
    },
    get$pleaseEnterYourUsername() {
      return "Upi\u0161i svoje korisni\u010dko ime";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Slijedi upute na web-stranici i dodirni \u201eDalje\u201d.";
    },
    get$privacy() {
      return "Privatnost";
    },
    get$reason(_) {
      return "Razlog";
    },
    redactedBy$1(username) {
      return "Preure\u0111eno od " + username;
    },
    get$directChat() {
      return "Izravni razgovor";
    },
    redactedByBecause$2(username, reason) {
      return "Preure\u0111eno od " + username + " zbog: \u201e" + reason + "\u201d";
    },
    redactedAnEvent$1(username) {
      return username + " je preuredio/la doga\u0111aj";
    },
    get$redactMessage() {
      return "Ispravi poruku";
    },
    get$reject() {
      return "Odbij";
    },
    rejectedTheInvitation$1(username) {
      return username + " je odbio/la poziv";
    },
    get$removeAllOtherDevices() {
      return "Ukloni sve druge ure\u0111aje";
    },
    get$unbanFromChat() {
      return "Ponovo uklju\u010di u razgovor";
    },
    get$removeYourAvatar() {
      return "Ukloni svoj avatar";
    },
    get$replaceRoomWithNewerVersion() {
      return "Zamijeni sobu s novom verzijom";
    },
    get$reply(_) {
      return "Odgovori";
    },
    get$reportMessage() {
      return "Prijavi poruku";
    },
    get$roomHasBeenUpgraded() {
      return "Soba je nadogra\u0111ena";
    },
    get$roomVersion() {
      return "Verzija sobe";
    },
    get$search(_) {
      return "Tra\u017ei";
    },
    get$security() {
      return "Sigurnost";
    },
    get$send(_) {
      return "Po\u0161alji";
    },
    get$sendAsText() {
      return "Po\u0161alji kao tekst";
    },
    get$sendAudio() {
      return "Po\u0161alji audio datoteku";
    },
    get$sendFile() {
      return "Po\u0161alji datoteku";
    },
    get$sendImage() {
      return "Po\u0161alji sliku";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "\u0160alji poruke";
    },
    get$sendVideo() {
      return "Po\u0161alji video datoteku";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " ja poslao/la datoteku";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " ja poslao/la audio snimku";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " ja poslao/la sliku";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " je poslao/la naljepnicu";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " je poslao/la video";
    },
    sentCallInformations$1(senderName) {
      return senderName + " je poslao/la podatke poziva";
    },
    get$separateChatTypes() {
      return "Odvojeni izravni razgovori, grupe i prostori";
    },
    get$setAsCanonicalAlias() {
      return "Postavi kao glavni pseudonim";
    },
    get$setChatDescription() {
      return "Postavi opis rzgovora";
    },
    get$setPermissionsLevel() {
      return "Postavi razinu dozvola";
    },
    get$settings() {
      return "Postavke";
    },
    get$share(_) {
      return "Dijeli";
    },
    sharedTheLocation$1(username) {
      return username + " je dijelio/la svoje mjesto";
    },
    get$shareLocation() {
      return "Dijeli lokaciju";
    },
    get$presencesToggle() {
      return "Prika\u017ei poruke stanja od drugih korisnika";
    },
    get$skip(_) {
      return "Presko\u010di";
    },
    get$sourceCode() {
      return "Izvorni k\u020fd";
    },
    get$spaceName() {
      return "Ime prostora";
    },
    startedACall$1(senderName) {
      return senderName + " ja zapo\u010deo/la poziv";
    },
    get$status(_) {
      return "Stanje";
    },
    get$submit(_) {
      return "Po\u0161alji";
    },
    get$synchronizingPleaseWait() {
      return "Sinkronizira se \u2026 Pri\u010dekaj.";
    },
    get$systemTheme() {
      return "Sustav";
    },
    get$theyDontMatch() {
      return "Ne poklapaju se";
    },
    get$theyMatch() {
      return "Poklapaju se";
    },
    get$tooManyRequestsWarning() {
      return "Previ\u0161e zahtjeva. Poku\u0161aj ponovo kasnije!";
    },
    get$tryToSendAgain() {
      return "Poku\u0161aj ponovo poslati";
    },
    get$unavailable() {
      return "Nedostupno";
    },
    unbannedUser$2(username, targetName) {
      return username + " je ponovo uklju\u010dio/la " + targetName;
    },
    get$unblockDevice() {
      return "Deblokiraj ure\u0111aj";
    },
    get$unknownDevice() {
      return "Nepoznat ure\u0111aj";
    },
    get$unknownEncryptionAlgorithm() {
      return "Nepoznat algoritam \u0161ifriranja";
    },
    unknownEvent$1(type) {
      return "Nepoznat doga\u0111aj \u201e" + type + "\u201d";
    },
    get$unpin() {
      return "Otkva\u010di";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " i jo\u0161 " + count + " korisnika pi\u0161u \u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " i " + username2 + " pi\u0161u \u2026";
    },
    userIsTyping$1(username) {
      return username + " pi\u0161e \u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " je napustio/la razgovor";
    },
    get$username(_) {
      return "Korisni\u010dko ime";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " ja poslao/la " + type + " doga\u0111aj";
    },
    get$unverified() {
      return "Nepotvr\u0111eno";
    },
    get$verified() {
      return "Potvr\u0111eno";
    },
    get$verifyStart() {
      return "Pokreni potvr\u0111ivanje";
    },
    get$verifySuccess() {
      return "Uspje\u0161no si potvrdio/la!";
    },
    get$verifyTitle() {
      return "Potvr\u0111ivanje drugog ra\u010duna";
    },
    get$visibilityOfTheChatHistory() {
      return "Vidljivost povijesti razgovora";
    },
    get$visibleForAllParticipants() {
      return "Vidljivo za sve sudionike";
    },
    get$visibleForEveryone() {
      return "Vidljivo za sve";
    },
    get$voiceMessage() {
      return "Glasovna poruka";
    },
    get$waitingPartnerAcceptRequest() {
      return "\u010ceka se na sugovornika da prihvati zahtjev \u2026";
    },
    get$waitingPartnerEmoji() {
      return "\u010ceka se na sugovornika da prihvati emoji \u2026";
    },
    get$waitingPartnerNumbers() {
      return "\u010ceka se na sugovornika da prihvati brojeve \u2026";
    },
    get$warning() {
      return "Upozorenje!";
    },
    get$weSentYouAnEmail() {
      return "Poslali smo ti e-poruku";
    },
    get$whoCanPerformWhichAction() {
      return "Tko mo\u017ee izvr\u0161iti koju radnju";
    },
    get$whoIsAllowedToJoinThisGroup() {
      return "Tko se smije pridru\u017eiti grupi";
    },
    get$whyDoYouWantToReportThis() {
      return "Za\u0161to \u017eeli\u0161 ovo prijaviti?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Lozinku mo\u017ee\u0161 obnoviti pomo\u0107u ovih adresa.";
    },
    get$writeAMessage() {
      return "Napi\u0161i poruku \u2026";
    },
    writeAMessageFlag$2(l1flag, l2flag) {
      return "Write a message in " + l1flag + " or " + l2flag;
    },
    get$yes() {
      return "Da";
    },
    get$you() {
      return "Ti";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Vi\u0161e ne sudjeluje\u0161 u ovom razgovoru";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Isklju\u010den/a si iz ovog razgovora";
    },
    get$yourPublicKey() {
      return "Tvoj javni klju\u010d";
    },
    get$messageInfo() {
      return "Informacija poruke";
    },
    get$time(_) {
      return "Vrijeme";
    },
    get$sender() {
      return "Po\u0161iljatelj";
    },
    get$openGallery() {
      return "Otvori galeriju";
    },
    get$removeFromSpace() {
      return "Ukloni iz prostora";
    },
    videoWithSize$1(size) {
      return "Video (" + size + ")";
    },
    get$markAsRead() {
      return "Ozna\u010di kao pro\u010ditano";
    },
    get$reportUser() {
      return "Prijavi korisnika";
    },
    reactedWith$2(sender, reaction) {
      return sender + " je reagirao/la sa " + reaction;
    },
    get$pinMessage() {
      return "Prikva\u010di na sobu";
    },
    get$confirmEventUnpin() {
      return "Stvarno \u017eeli\u0161 trajno otkva\u010diti doga\u0111aj?";
    },
    get$emojis() {
      return "Emojiji";
    },
    get$youRejectedTheInvitation() {
      return "Odbio/la si poziv";
    },
    get$youJoinedTheChat() {
      return "Pridru\u017eio/la si se razgovoru";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Prihvatio/la si poziv";
    },
    youBannedUser$1(user) {
      return "Isklju\u010dio/la si korisnika " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Povukao/la si poziv za korisnika " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 " + user + " te je pozvao/la";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Pozvao/la si korisnika " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Izbacio/la si korisnika " + user;
    },
    youUnbannedUser$1(user) {
      return "Ponovo si uklju\u010dio/la korisnika " + user;
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " je pokucao/la";
    },
    get$usersMustKnock() {
      return "Korisnici moraju pokucati";
    },
    get$noOneCanJoin() {
      return "Nitko se ne mo\u017ee pridru\u017eiti";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " se \u017eeli pridru\u017eiti razgovoru.";
    },
    get$knock() {
      return "Pokucaj";
    },
    get$users() {
      return "Korisnici";
    },
    countFiles$1(count) {
      return "Broj datoteka: " + count;
    },
    get$user() {
      return "Korisnik";
    },
    get$custom() {
      return "Prilago\u0111eno";
    },
    get$noKeyForThisMessage() {
      return "To se mo\u017ee dogoditi ako je poruka poslana prije prijave na tvoj ra\u010dun na ovom ure\u0111aju.\n\nTako\u0111er je mogu\u0107e da je po\u0161iljatelj blokirao tvoj ure\u0111aj ili je do\u0161lo do gre\u0161ke s internetskom vezom.\n\nMo\u017ee\u0161 li pro\u010ditati poruku na jednoj drugoj sesiji? U tom slu\u010daju mo\u017ee\u0161 prenijeti poruku iz nje! Idi na Postavke > Ure\u0111aji i uvjeri se da su se tvoji ure\u0111aji me\u0111usobno provjerili. Kada sljede\u0107i put otvori\u0161 sobu i obje sesije su u prednjem planu, klju\u010devi \u0107e se automatski prenijeti.\n\nNe \u017eeli\u0161 izgubiti klju\u010deve kada se odjavi\u0161 ili zamijeni\u0161 ure\u0111aje? Aktiviraj spremanje sigurnosne kopije razgovora u postavkama.";
    },
    get$newSpace() {
      return "Novi prostor";
    },
    get$doNotShowAgain() {
      return "Nemoj vi\u0161e prikazivati";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Prazan razgovor (zvao se " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Ponovo otvori razgovor";
    },
    get$noBackupWarning() {
      return "Upozorenje! Bez aktiviranja spremanja sigurnosne kopije razgovora, izgubit \u0107e\u0161 pristup tvojim \u0161ifriranim porukama. Preporu\u010dujemo spremanje sigurnosne kopije razgovora prije odjave.";
    },
    get$noOtherDevicesFound() {
      return "Nijedan drugi ure\u0111aj nije prona\u0111en";
    },
    fileIsTooBigForServer$1(max) {
      return "Poslu\u017eitelj javlja da je datoteka prevelika za slanje.";
    },
    get$jumpToLastReadMessage() {
      return "Sko\u010di na zadnju pro\u010ditanu poruku";
    },
    get$readUpToHere() {
      return "Pro\u010ditaj do ovdje";
    },
    get$jump() {
      return "Sko\u010di";
    },
    get$openLinkInBrowser() {
      return "Otvori poveznicu u pregledniku";
    },
    get$profileNotFound() {
      return "Korisnik nije prona\u0111en na poslu\u017eitelju. Mo\u017eda postoji problem s vezom ili korisnik ne postoji.";
    },
    get$setColorTheme() {
      return "Postavi boju teme:";
    },
    get$invite() {
      return "Pozovi";
    },
    get$invitePrivateChat() {
      return "\ud83d\udce8 Pozovi u privatni razgovor";
    },
    get$invalidInput() {
      return "Neispravan unos!";
    },
    wrongPinEntered$1(seconds) {
      return "Unesen je pogre\u0161an PIN! Poku\u0161aj ponovo za " + seconds + " sekunde \u2026";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$interactiveTranslatorRequired() {
      return "Required";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$myLanguages() {
      return "My base and target languages";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$sourceLanguage() {
      return "Base language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By enabling this option, I confirm that I am of legal age in my country of residence";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$toggleToolSettingsDescription() {
      return "Here you can toggle your individual language tool settings.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocabulary";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$abDisplayName() {
      return "Abkhaz";
    },
    get$aaDisplayName() {
      return "Afar";
    },
    get$afDisplayName() {
      return "Afrikaans";
    },
    get$akDisplayName() {
      return "Akan";
    },
    get$sqDisplayName() {
      return "Albanian";
    },
    get$amDisplayName() {
      return "Amharic";
    },
    get$arDisplayName() {
      return "Arabic";
    },
    get$anDisplayName() {
      return "Aragonese";
    },
    get$hyDisplayName() {
      return "Armenian";
    },
    get$asDisplayName() {
      return "Assamese";
    },
    get$avDisplayName() {
      return "Avaric";
    },
    get$aeDisplayName() {
      return "Avestan";
    },
    get$ayDisplayName() {
      return "Aymara";
    },
    get$azDisplayName() {
      return "Azerbaijani";
    },
    get$bmDisplayName() {
      return "Bambara";
    },
    get$baDisplayName() {
      return "Bashkir";
    },
    get$euDisplayName() {
      return "Basque";
    },
    get$beDisplayName() {
      return "Belarusian";
    },
    get$bnDisplayName() {
      return "Bengali";
    },
    get$bhDisplayName() {
      return "Bihari";
    },
    get$biDisplayName() {
      return "Bislama";
    },
    get$bsDisplayName() {
      return "Bosnian";
    },
    get$brDisplayName() {
      return "Breton";
    },
    get$bgDisplayName() {
      return "Bulgarian";
    },
    get$myDisplayName() {
      return "Burmese";
    },
    get$caDisplayName() {
      return "Catalan, Valencian";
    },
    get$chDisplayName() {
      return "Chamorro";
    },
    get$ceDisplayName() {
      return "Chechen";
    },
    get$nyDisplayName() {
      return "Chichewa, Chewa, Nyanja";
    },
    get$zhDisplayName() {
      return "Chinese";
    },
    get$cvDisplayName() {
      return "Chuvash";
    },
    get$kwDisplayName() {
      return "Cornish";
    },
    get$coDisplayName() {
      return "Corsican";
    },
    get$crDisplayName() {
      return "Cree";
    },
    get$hrDisplayName() {
      return "Croatian";
    },
    get$csDisplayName() {
      return "Czech";
    },
    get$daDisplayName() {
      return "Danish";
    },
    get$dvDisplayName() {
      return "Divehi; Dhivehi; Maldivian;";
    },
    get$nlDisplayName() {
      return "Dutch";
    },
    get$enDisplayName() {
      return "English";
    },
    get$eoDisplayName() {
      return "Esperanto";
    },
    get$etDisplayName() {
      return "Estonian";
    },
    get$eeDisplayName() {
      return "Ewe";
    },
    get$foDisplayName() {
      return "Faroese";
    },
    get$fjDisplayName() {
      return "Fijian";
    },
    get$fiDisplayName() {
      return "Finnish";
    },
    get$frDisplayName() {
      return "French";
    },
    get$ffDisplayName() {
      return "Fula; Fulah; Pulaar; Pular";
    },
    get$glDisplayName() {
      return "Galician";
    },
    get$kaDisplayName() {
      return "Georgian";
    },
    get$deDisplayName() {
      return "German";
    },
    get$elDisplayName() {
      return "Greek, Modern";
    },
    get$gnDisplayName() {
      return "Guaran\xed";
    },
    get$guDisplayName() {
      return "Gujarati";
    },
    get$htDisplayName() {
      return "Haitian, Haitian Creole";
    },
    get$haDisplayName() {
      return "Hausa";
    },
    get$heDisplayName() {
      return "Hebrew (modern)";
    },
    get$hzDisplayName() {
      return "Herero";
    },
    get$hiDisplayName() {
      return "Hindi";
    },
    get$hoDisplayName() {
      return "Hiri Motu";
    },
    get$huDisplayName() {
      return "Hungarian";
    },
    get$iaDisplayName() {
      return "Interlingua";
    },
    get$idDisplayName() {
      return "Indonesian";
    },
    get$ieDisplayName() {
      return "Interlingue";
    },
    get$gaDisplayName() {
      return "Irish";
    },
    get$igDisplayName() {
      return "Igbo";
    },
    get$ikDisplayName() {
      return "Inupiaq";
    },
    get$ioDisplayName() {
      return "Ido";
    },
    get$isDisplayName() {
      return "Icelandic";
    },
    get$itDisplayName() {
      return "Italian";
    },
    get$iuDisplayName() {
      return "Inuktitut";
    },
    get$jaDisplayName() {
      return "Japanese";
    },
    get$jvDisplayName() {
      return "Javanese";
    },
    get$klDisplayName() {
      return "Kalaallisut, Greenlandic";
    },
    get$knDisplayName() {
      return "Kannada";
    },
    get$krDisplayName() {
      return "Kanuri";
    },
    get$ksDisplayName() {
      return "Kashmiri";
    },
    get$kkDisplayName() {
      return "Kazakh";
    },
    get$kmDisplayName() {
      return "Khmer";
    },
    get$kiDisplayName() {
      return "Kikuyu, Gikuyu";
    },
    get$rwDisplayName() {
      return "Kinyarwanda";
    },
    get$kyDisplayName() {
      return "Kirghiz, Kyrgyz";
    },
    get$kvDisplayName() {
      return "Komi";
    },
    get$kgDisplayName() {
      return "Kongo";
    },
    get$koDisplayName() {
      return "Korean";
    },
    get$kuDisplayName() {
      return "Kurdish";
    },
    get$kjDisplayName() {
      return "Kwanyama, Kuanyama";
    },
    get$laDisplayName() {
      return "Latin";
    },
    get$lbDisplayName() {
      return "Luxembourgish, Letzeburgesch";
    },
    get$lgDisplayName() {
      return "Luganda";
    },
    get$liDisplayName() {
      return "Limburgish, Limburgan, Limburger";
    },
    get$lnDisplayName() {
      return "Lingala";
    },
    get$loDisplayName() {
      return "Lao";
    },
    get$ltDisplayName() {
      return "Lithuanian";
    },
    get$luDisplayName() {
      return "Luba-Katanga";
    },
    get$lvDisplayName() {
      return "Latvian";
    },
    get$gvDisplayName() {
      return "Manx";
    },
    get$mkDisplayName() {
      return "Macedonian";
    },
    get$mgDisplayName() {
      return "Malagasy";
    },
    get$msDisplayName() {
      return "Malay";
    },
    get$mlDisplayName() {
      return "Malayalam";
    },
    get$mtDisplayName() {
      return "Maltese";
    },
    get$miDisplayName() {
      return "M\u0101ori";
    },
    get$mrDisplayName() {
      return "Marathi (Mar\u0101\u1e6dh\u012b)";
    },
    get$mhDisplayName() {
      return "Marshallese";
    },
    get$mnDisplayName() {
      return "Mongolian";
    },
    get$naDisplayName() {
      return "Nauru";
    },
    get$nvDisplayName() {
      return "Navajo, Navaho";
    },
    get$nbDisplayName() {
      return "Norwegian Bokm\xe5l";
    },
    get$ndDisplayName() {
      return "North Ndebele";
    },
    get$neDisplayName() {
      return "Nepali";
    },
    get$ngDisplayName() {
      return "Ndonga";
    },
    get$nnDisplayName() {
      return "Norwegian Nynorsk";
    },
    get$noDisplayName() {
      return "Norwegian";
    },
    get$iiDisplayName() {
      return "Nuosu";
    },
    get$nrDisplayName() {
      return "South Ndebele";
    },
    get$ocDisplayName() {
      return "Occitan";
    },
    get$ojDisplayName() {
      return "Ojibwe, Ojibwa";
    },
    get$cuDisplayName() {
      return "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic";
    },
    get$omDisplayName() {
      return "Oromo";
    },
    get$orDisplayName() {
      return "Oriya";
    },
    get$osDisplayName() {
      return "Ossetian, Ossetic";
    },
    get$paDisplayName() {
      return "Panjabi, Punjabi";
    },
    get$piDisplayName() {
      return "P\u0101li";
    },
    get$faDisplayName() {
      return "Persian";
    },
    get$plDisplayName() {
      return "Polish";
    },
    get$psDisplayName() {
      return "Pashto, Pushto";
    },
    get$ptDisplayName() {
      return "Portuguese";
    },
    get$quDisplayName() {
      return "Quechua";
    },
    get$rmDisplayName() {
      return "Romansh";
    },
    get$rnDisplayName() {
      return "Kirundi";
    },
    get$roDisplayName() {
      return "Romanian, Moldavian, Moldovan";
    },
    get$ruDisplayName() {
      return "Russian";
    },
    get$saDisplayName() {
      return "Sanskrit (Sa\u1e41sk\u1e5bta)";
    },
    get$scDisplayName() {
      return "Sardinian";
    },
    get$sdDisplayName() {
      return "Sindhi";
    },
    get$seDisplayName() {
      return "Northern Sami";
    },
    get$smDisplayName() {
      return "Samoan";
    },
    get$sgDisplayName() {
      return "Sango";
    },
    get$srDisplayName() {
      return "Serbian";
    },
    get$gdDisplayName() {
      return "Scottish Gaelic, Gaelic";
    },
    get$snDisplayName() {
      return "Shona";
    },
    get$siDisplayName() {
      return "Sinhala, Sinhalese";
    },
    get$skDisplayName() {
      return "Slovak";
    },
    get$slDisplayName() {
      return "Slovene";
    },
    get$soDisplayName() {
      return "Somali";
    },
    get$stDisplayName() {
      return "Southern Sotho";
    },
    get$esDisplayName() {
      return "Spanish";
    },
    get$suDisplayName() {
      return "Sundanese";
    },
    get$swDisplayName() {
      return "Swahili";
    },
    get$ssDisplayName() {
      return "Swati";
    },
    get$svDisplayName() {
      return "Swedish";
    },
    get$taDisplayName() {
      return "Tamil";
    },
    get$teDisplayName() {
      return "Telugu";
    },
    get$tgDisplayName() {
      return "Tajik";
    },
    get$thDisplayName() {
      return "Thai";
    },
    get$tiDisplayName() {
      return "Tigrinya";
    },
    get$boDisplayName() {
      return "Tibetan Standard, Tibetan, Central";
    },
    get$tkDisplayName() {
      return "Turkmen";
    },
    get$tlDisplayName() {
      return "Tagalog";
    },
    get$tnDisplayName() {
      return "Tswana";
    },
    get$toDisplayName() {
      return "Tonga (Tonga Islands)";
    },
    get$trDisplayName() {
      return "Turkish";
    },
    get$tsDisplayName() {
      return "Tsonga";
    },
    get$ttDisplayName() {
      return "Tatar";
    },
    get$twDisplayName() {
      return "Twi";
    },
    get$tyDisplayName() {
      return "Tahitian";
    },
    get$ugDisplayName() {
      return "Uighur, Uyghur";
    },
    get$ukDisplayName() {
      return "Ukrainian";
    },
    get$urDisplayName() {
      return "Urdu";
    },
    get$uzDisplayName() {
      return "Uzbek";
    },
    get$veDisplayName() {
      return "Venda";
    },
    get$viDisplayName() {
      return "Vietnamese";
    },
    get$voDisplayName() {
      return "Volap\xfck";
    },
    get$waDisplayName() {
      return "Walloon";
    },
    get$cyDisplayName() {
      return "Welsh";
    },
    get$woDisplayName() {
      return "Wolof";
    },
    get$fyDisplayName() {
      return "Western Frisian";
    },
    get$xhDisplayName() {
      return "Xhosa";
    },
    get$yiDisplayName() {
      return "Yiddish";
    },
    get$yoDisplayName() {
      return "Yoruba";
    },
    get$zaDisplayName() {
      return "Zhuang, Chuang";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$zuDisplayName() {
      return "Zulu";
    },
    get$hawDisplayName() {
      return "Hawaiian";
    },
    get$hmnDisplayName() {
      return "Hmong";
    },
    get$multiDisplayName() {
      return "Multi";
    },
    get$cebDisplayName() {
      return "Cebuano";
    },
    get$dzDisplayName() {
      return "Dzongkha";
    },
    get$iwDisplayName() {
      return "Hebrew";
    },
    get$jwDisplayName() {
      return "Javanese";
    },
    get$moDisplayName() {
      return "Moldavian";
    },
    get$shDisplayName() {
      return "Serbo-Croatian";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$declinedInvitation() {
      return "Declined invitation";
    },
    get$acceptedInvitation() {
      return "Accepted invitation";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    get$pleaseEnterANumber() {
      return "Upi\u0161i broj ve\u0107i od 0";
    },
    get$archiveRoomDescription() {
      return "Razgovor \u0107e se premjestiti u arhivu. Drugi korisnici \u0107e mo\u0107i vidjeti da si napustio/la razgovor.";
    },
    get$roomUpgradeDescription() {
      return "Razgovor \u0107e se tada ponovo stvoriti s novom verzijom sobe. Svi sudionici \u0107e biti obavije\u0161teni da se moraju prebaciti na novi razgovor. Vi\u0161e o verzijama soba mo\u017ee\u0161 saznati na https://spec.matrix.org/latest/rooms/";
    },
    get$removeDevicesDescription() {
      return "Bit \u0107e\u0161 odjavljen/a s ovog ure\u0111aja i vi\u0161e ne\u0107e\u0161 mo\u0107i primati poruke.";
    },
    get$banUserDescription() {
      return "Korisnik \u0107e biti isklju\u010den iz razgovora i mo\u0107i \u0107e ponovo prisustvovati razgovoru kad ga se deblokira.";
    },
    get$unbanUserDescription() {
      return "Korisnik \u0107e se ponovo mo\u0107i pridru\u017eiti razgovoru ako poku\u0161a.";
    },
    get$kickUserDescription() {
      return "Korisnik je izba\u010den iz razgovora, ali nije blokiran. U javnim razgovorima se korisnik mo\u017ee ponovo pridru\u017eiti u bilo kojem trenutku.";
    },
    get$makeAdminDescription() {
      return "Nakon postavljanja ovog korisnika kao administratora, to mo\u017eda ne\u0107e\u0161 mo\u0107i poni\u0161titi jer \u0107e on tada imati iste dozvole kao i ti.";
    },
    get$yourGlobalUserIdIs() {
      return "Tvoj globalni korisni\u010dki ID je: ";
    },
    noUsersFoundWithQuery$1(query) {
      return "Na\u017ealost nije prona\u0111en nijedan korisnik s \u201e" + query + "\u201d. Provjeri to\u010dnost upisa.";
    },
    get$knocking() {
      return "Kucanje";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "Razgovor se mo\u017ee otkriti pretra\u017eivanjem servera " + server;
    },
    get$searchChatsRooms() {
      return "Tra\u017ei #chats, @users \u2026";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$nothingFound() {
      return "Ni\u0161ta nije prona\u0111eno...";
    },
    get$wrongRecoveryKey() {
      return "Oprosti \u2026 \u010dini se da ovo nije ispravan klju\u010d za obnavljanje.";
    },
    get$startConversation() {
      return "Pokreni konverzaciju";
    },
    get$commandHint_sendraw() {
      return "Po\u0161alji neobra\u0111eni json";
    },
    get$searchForUsers() {
      return "Tra\u017ei @users...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Upi\u0161i svoju trenuta\u010dnu lozinku";
    },
    get$newPassword() {
      return "Nova lozinka";
    },
    get$pleaseChooseAStrongPassword() {
      return "Odaberi sna\u017enu lozinku";
    },
    get$passwordsDoNotMatch() {
      return "Lozinke se ne poklapaju";
    },
    get$passwordIsWrong() {
      return "Tvoja upisana lozinka je kriva";
    },
    get$publicChatAddresses() {
      return "Adrese javnih razgovora";
    },
    get$createNewAddress() {
      return "Stvori novu adresu";
    },
    get$joinSpace() {
      return "Pridru\u017ei se prostoru";
    },
    get$publicSpaces() {
      return "Javni prostori";
    },
    get$decline() {
      return "Odbij";
    },
    get$thisDevice() {
      return "Ovaj ure\u0111aj:";
    },
    get$initAppError() {
      return "Dogodila se gre\u0161ka prilikom inicijaliziranja aplikacije";
    },
    get$userRole() {
      return "Korisni\u010dka uloga";
    },
    searchIn$1(chat) {
      return "Tra\u017ei u razgovoru \u201e" + chat + "\u201d...";
    },
    get$searchMore() {
      return "Tra\u017ei vi\u0161e...";
    },
    get$gallery() {
      return "Galerija";
    },
    get$files(_) {
      return "Datoteke";
    },
    sessionLostBody$2(url, error) {
      return "Tvoja je sesija izgubljena. Prijavi ovu gre\u0161ku programerima na " + url + ". Poruka o gre\u0161ci glasi: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "Aplikacija sada poku\u0161ava obnoviti tvoju sesiju iz sigurnosne kopije. Prijavi ovu gre\u0161ku programerima na " + url + ". Poruka o gre\u0161ci glasi: " + error;
    },
    forwardMessageTo$1(roomName) {
      return "Proslijediti poruku u sobu " + roomName + "?";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$sendReadReceipts() {
      return "\u0160alji potvrde o \u010ditanju";
    },
    get$sendTypingNotificationsDescription() {
      return "Drugi sudionici u razgovoru mogu vidjeti kada pi\u0161e\u0161 novu poruku.";
    },
    get$sendReadReceiptsDescription() {
      return "Drugi sudionici u raygovoru mogu vidjeti kada pro\u010dita\u0161 poruku.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Potvrdi drugi ure\u0111aj";
    },
    get$verifyOtherDeviceDescription() {
      return "Kada potvrdi\u0161 jedan drugi ure\u0111aj, ti ure\u0111aji mogu razmjenjivati klju\u010deve, pove\u0107avaju\u0107i tvoju ukupnu sigurnost. \ud83d\udcaa Kada pokrene\u0161 provjeru, pojavit \u0107e se sko\u010dni prozor u aplikaciji na oba ure\u0111aja. Tamo \u0107e\u0161 tada vidjeti niz emojija ili brojeve koje mora\u0161 me\u0111usobno usporediti. Najbolje je imati oba ure\u0111aja pri ruci prije nego \u0161to zapo\u010dne\u0161 provjeru. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " je prihvatio/la potvr\u0111ivanje klju\u010da";
    },
    canceledKeyVerification$1(sender) {
      return sender + " je prekinuo/la potvr\u0111ivanje klju\u010da";
    },
    completedKeyVerification$1(sender) {
      return sender + " je dovr\u0161io/la potvr\u0111ivanje klju\u010da";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " je spreman/na za potvr\u0111ivanje klju\u010da";
    },
    requestedKeyVerification$1(sender) {
      return sender + " je zatra\u017eio/la potvr\u0111ivanje klju\u010da";
    },
    startedKeyVerification$1(sender) {
      return sender + " je pokrenuo/la potvr\u0111ivanje klju\u010da";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$stickers() {
      return "Naljepnice";
    },
    get$discover() {
      return "Otkrij";
    },
    get$commandHint_ignore() {
      return "Zanemari navedeni matrix ID";
    },
    get$commandHint_unignore() {
      return "Poni\u0161ti zanemarivanje navedenog matrix ID-a";
    },
    get$accuracy(_) {
      return "Accuracy";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run language assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run language assistance after typing messages";
    },
    get$leaveRoomDescription() {
      return "The chat will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$leaveSpaceDescription() {
      return "All chats within this space will be moved to the archive. Other users will be able to see that you have left the space.";
    },
    get$onlyAdminDescription() {
      return "Since there are no other admins, all other participants will also be removed.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$spaceCapacity() {
      return "Space capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$spaceCapacityHasBeenChanged() {
      return "Space capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of non-admins.";
    },
    get$spaceCapacitySetTooLow() {
      return "Space capacity cannot be set below the current number of non-admins.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of non-admins allowed in a chat.";
    },
    get$spaceCapacityExplanation() {
      return "Space capacity limits the number of non-admins allowed in a space.";
    },
    get$chatExceedsCapacity() {
      return "This chat exceeds its capacity.";
    },
    get$spaceExceedsCapacity() {
      return "This space exceeds its capacity.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Broj trenuta\u010dno blokiranih korisnika: " + count + ".";
    },
    get$restricted() {
      return "Ograni\u010deni";
    },
    get$knockRestricted() {
      return "Pokucaj na ograni\u010dene sobe";
    },
    get$createNewSpace() {
      return "Novi prostor";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "See how well you did by looking at your Accuracy and Words Per Minute scores";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$continueText() {
      return "Continue";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$sendCanceled() {
      return "Sending canceled";
    },
    goToSpace$1(space) {
      return "Go to space: " + space;
    },
    get$markAsUnread() {
      return "Mark as unread";
    },
    userLevel$1(level) {
      return "" + level + " - User";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Admin";
    },
    get$changeGeneralChatSettings() {
      return "Change general chat settings";
    },
    get$inviteOtherUsers() {
      return "Invite other users to this chat";
    },
    get$changeTheChatPermissions() {
      return "Change the chat permissions";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Change the visibility of the chat history";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Change the main public chat address";
    },
    get$sendRoomNotifications() {
      return "Send a @room notifications";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Change the description of the chat";
    },
    get$chatPermissionsDescription() {
      return "Define which power level is necessary for certain actions in this chat. The power levels 0, 50 and 100 are usually representing users, moderators and admins, but any gradation is possible.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Update " + version + " installed!";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Doesn't seem to be a compatible homeserver. Wrong URL?";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$unlockedLanguageTools() {
      return "You\u2019ve unlocked the language tools for this message. Try them out by clicking below!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$calculatingFileSize() {
      return "Calculating file size...";
    },
    get$prepareSendingAttachment() {
      return "Prepare sending attachment...";
    },
    get$sendingAttachment() {
      return "Sending attachment...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Sending attachment " + index + " of " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Server limit reached! Waiting " + seconds + " seconds...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Note: When you connect all your devices to the chat backup, they are automatically verified.";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$blur(_) {
      return "Blur:";
    },
    get$opacity(_) {
      return "Opacity:";
    },
    get$setWallpaper() {
      return "Set wallpaper";
    },
    get$noContactInformationProvided() {
      return "Server does not provide any valid contact information";
    },
    get$contactServerAdmin() {
      return "Contact server admin";
    },
    get$contactServerSecurity() {
      return "Contact server security";
    },
    get$supportPage() {
      return "Support page";
    },
    get$serverInformation() {
      return "Server information:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Bold text";
    },
    get$italicText() {
      return "Italic text";
    },
    get$strikeThrough() {
      return "Strikethrough";
    },
    get$pleaseFillOut() {
      return "Please fill out";
    },
    get$invalidUrl() {
      return "Invalid url";
    },
    get$addLink() {
      return "Add link";
    },
    get$unableToJoinChat() {
      return "Unable to join chat. Maybe the other party has already closed the conversation.";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$mandatoryUpdateRequired() {
      return "Mandatory Update Required";
    },
    get$updateAvailable() {
      return "Update Available";
    },
    get$mandatoryUpdateRequiredDesc() {
      return "A new version of the app is required to continue. Please update now to proceed.";
    },
    get$updateAvailableDesc() {
      return "A new version of the app is available. Update now for the latest features and improvements!";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language";
    },
    get$couldNotFindTTS() {
      return "We couldn't find a text-to-speech engine for your current target language. ";
    },
    get$ttsInstructionsHyperlink() {
      return "Click here to view instructions for downloading a new voice on your device.";
    },
    get$currentVersion() {
      return "Current Version";
    },
    get$latestVersion() {
      return "Latest Version";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseAgreeToTOS() {
      return "Please agree to the Terms and Conditions";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "Click on a word or the buttons below to learn more";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$noEmojiSelectedTooltip() {
      return "No emoji selected";
    },
    get$writingExercisesTooltip() {
      return "Writing exercises";
    },
    get$listeningExercisesTooltip() {
      return "Listening exercises";
    },
    get$readingExercisesTooltip() {
      return "Reading exercises";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$formsNotFound() {
      return "Forms could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$downloadSpaceAnalytics() {
      return "Download space analytics";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    pickAnEmoji$2(lemma, partOfSpeech) {
      return "What's your favorite emoji for '" + lemma + "'?";
    },
    get$lemmaMeaningInstructionsBody() {
      return "Above is the meaning of the lemma. Double-click to edit.";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$notInClass() {
      return "Not in a class!";
    },
    get$noClassCode() {
      return "No class code!";
    },
    get$chooseCorrectLabel() {
      return "Choose the correct label";
    },
    get$activityPlannerTitle() {
      return "Activity Planner";
    },
    get$topicLabel() {
      return "Topic";
    },
    get$topicPlaceholder() {
      return "Choose a topic...";
    },
    get$modeLabel() {
      return "Mode";
    },
    get$modePlaceholder() {
      return "Choose a mode...";
    },
    get$learningObjectiveLabel() {
      return "Learning Objective";
    },
    get$learningObjectivePlaceholder() {
      return "Choose a learning objective...";
    },
    get$mediaLabel() {
      return "Media students should share";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR Level";
    },
    get$generateActivitiesButton() {
      return "Generate Activities";
    },
    get$launchActivityButton() {
      return "Launch Activity";
    },
    get$image(_) {
      return "Image";
    },
    get$video(_) {
      return "Video";
    },
    get$nan() {
      return "Not applicable";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.L10nHr, C.L10n);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nHr":{"L10n":[]}}'));
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_244", e: "endPart", h: h});
})($__dart_deferred_initializers__, "hSkMrFAhp29QYWSmZqtFLn8v7f4=");
;
//# sourceMappingURL=main.dart.js_244.part.js.map
