// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.4.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_223", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    L10nEt$() {
      return new B.L10nEt(A.canonicalizedLocale("et"));
    },
    L10nEt: function L10nEt(t0) {
      this.localeName = t0;
    }
  };
  A = holdersList[0];
  C = holdersList[51];
  B = hunkHelpers.updateHolder(holdersList[16], B);
  B.L10nEt.prototype = {
    get$alwaysUse24HourFormat() {
      return "false";
    },
    get$repeatPassword() {
      return "Korda salas\xf5na";
    },
    get$notAnImage() {
      return "See pole pildifail.";
    },
    get$remove(_) {
      return "Eemalda";
    },
    get$importNow() {
      return "Impordi kohe";
    },
    get$importEmojis() {
      return "Impordi emojid";
    },
    get$importFromZipFile() {
      return "Impordi zip-failist";
    },
    get$exportEmotePack() {
      return "Ekspordi emotikonide pakk zip-failina";
    },
    get$replace(_) {
      return "Asenda";
    },
    aboutHomeserver$1(homeserver) {
      return "Koduserveri teave: " + homeserver;
    },
    get$accept(_) {
      return "N\xf5ustu";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " v\xf5ttis kutse vastu";
    },
    get$account() {
      return "Kasutajakonto";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10" + username + " v\xf5ttis kasutusele l\xe4biva kr\xfcptimise";
    },
    get$addEmail() {
      return "Lisa e-posti aadress";
    },
    get$confirmMatrixId() {
      return "Konto kustutamiseks palun kinnitage oma Matrix'i ID.";
    },
    supposedMxid$1(mxid) {
      return "See peaks olema " + mxid;
    },
    get$addToSpace() {
      return "Lisa kogukonda";
    },
    get$admin() {
      return "Peakasutaja";
    },
    get$alias() {
      return "alias";
    },
    get$all() {
      return "K\xf5ik";
    },
    get$commandHint_googly() {
      return "Saada \xfched otsivad silmad";
    },
    get$commandHint_cuddle() {
      return "Saada \xfcks kaisutus";
    },
    get$commandHint_hug() {
      return "Saada \xfcks kallistus";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " saatis sulle otsivad silmad";
    },
    cuddleContent$1(senderName) {
      return senderName + " kaisutab sind";
    },
    hugContent$1(senderName) {
      return senderName + " kallistab sind";
    },
    answeredTheCall$1(senderName) {
      return senderName + " vastas k\xf5nele";
    },
    get$anyoneCanJoin() {
      return "K\xf5ik v\xf5ivad liituda";
    },
    get$archive() {
      return "Arhiiv";
    },
    get$areGuestsAllowedToJoin() {
      return "Kas k\xfclalised v\xf5ivad liituda";
    },
    get$areYouSure() {
      return "Kas sa oled kindel?";
    },
    get$areYouSureYouWantToLogout() {
      return "Kas sa oled kindel, et soovid v\xe4lja logida?";
    },
    get$askSSSSSign() {
      return "Selleks, et teist osapoolt identifitseerivat allkirja anda, palun sisesta oma turvahoidla paroolifraas v\xf5i taastev\xf5ti.";
    },
    askVerificationRequest$1(username) {
      return "Kas v\xf5tad vastu selle verifitseerimispalve kasutajalt " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "See koduserver toetab Matrixi v\xf5rku sisselogimiseks:\n" + serverVersions + "\nAga see rakendus toetab vaid j\xe4rgmisi v\xf5imalusi:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Saada kirjutamise teavitusi";
    },
    get$swipeRightToLeftToReply() {
      return "Vastamiseks viipa paremalt vasakule";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "See koduserver toetab Matrixi spetsifikatsioonist j\xe4rgmisi versioone:\n" + serverVersions + "\nAga see rakendus toetab vaid j\xe4rgmisi versioone: " + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return A.S(chats) + " vestlust ja " + A.S(participants) + " osalejat";
    },
    get$noMoreChatsFound() {
      return "Rohkem vestlusi ei leidu...";
    },
    get$noChatsFoundHere() {
      return "Siin ei leidu veel \xfchtegi vestlust. Alusta uut vestlust kl\xf5psides allpool asuvat nuppu. \u2935\ufe0f";
    },
    get$unread() {
      return "Lugemata";
    },
    get$space() {
      return "Kogukond";
    },
    get$spaces() {
      return "Kogukonnad";
    },
    get$banFromChat() {
      return "Keela ligip\xe4\xe4s vestlusele";
    },
    get$banned() {
      return "Ligip\xe4\xe4s vestlusele on keelatud";
    },
    bannedUser$2(username, targetName) {
      return username + " keelas ligip\xe4\xe4su kasutajale " + targetName;
    },
    get$blockDevice() {
      return "Blokeeri seade";
    },
    get$blocked() {
      return "Blokeeritud";
    },
    get$botMessages() {
      return "Robotite s\xf5numid";
    },
    get$cancel(_) {
      return "Katkesta";
    },
    cantOpenUri$1(uri) {
      return uri + " aadressi avamine ei \xf5nnestu";
    },
    get$changeDeviceName() {
      return "Muuda seadme nime";
    },
    changedTheChatAvatar$1(username) {
      return username + " muutis vestluse tunnuspilti";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " muutis vestluse uueks kirjelduseks \u201e" + description + "\u201c";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " muutis oma uueks kuvatavaks nimeks \u201e" + chatname + "\u201c";
    },
    changedTheChatPermissions$1(username) {
      return username + " muutis vestlusega seotud \xf5igusi";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " muutis uueks kuvatavaks nimeks: " + displayname;
    },
    changedTheGuestAccessRules$1(username) {
      return username + " muutis k\xfclaliste ligip\xe4\xe4sureegleid";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " muutis k\xfclaliste ligip\xe4\xe4sureegleid j\xe4rgnevalt: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " muutis s\xf5numite ajaloo n\xe4htavust";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " muutis s\xf5numite ajaloo n\xe4htavust j\xe4rgnevalt: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " muutis liitumise reegleid";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " muutis liitumise reegleid j\xe4rgnevalt: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " muutis oma tunnuspilti";
    },
    changedTheRoomAliases$1(username) {
      return username + " muutis jututoa aliast";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " muutis kutse linki";
    },
    get$changePassword() {
      return "Muuda salas\xf5na";
    },
    get$changeTheme() {
      return "Muuda oma stiili";
    },
    get$changeTheNameOfTheGroup() {
      return "Muuda vestlusr\xfchma nime";
    },
    get$changeYourAvatar() {
      return "Muuda oma tunnuspilti";
    },
    get$channelCorruptedDecryptError() {
      return "Kasutatud kr\xfcptimine on vigane";
    },
    get$chat() {
      return "Vestlus";
    },
    get$chatDetails() {
      return "Vestluse teave";
    },
    get$chats() {
      return "Vestlused";
    },
    get$chooseAStrongPassword() {
      return "Vali korralik salas\xf5na";
    },
    get$clearArchive() {
      return "Kustuta arhiiv";
    },
    get$close(_) {
      return "Sulge";
    },
    get$commandHint_markasdm() {
      return "M\xe4rgi otsevestusluseks antud Matrixi ID jaoks";
    },
    get$commandHint_markasgroup() {
      return "M\xe4rgi vestlusr\xfchmaks";
    },
    get$commandHint_ban() {
      return "Sea sellele kasutajale antud jututoas suhtluskeeld";
    },
    get$commandHint_clearcache() {
      return "T\xfchjenda vahem\xe4lu";
    },
    get$commandHint_create() {
      return "Loo t\xfchi vestlusr\xfchm\nKr\xfcptimise keelamiseks kasuta --no-encryption v\xf5tit";
    },
    get$commandHint_discardsession() {
      return "Loobu sessioonist";
    },
    get$commandHint_dm() {
      return "Alusta otsevestlust\nKr\xfcptimise keelamiseks kasuta --no-encryption v\xf5tit";
    },
    get$commandHint_html() {
      return "Saada HTML-vormingus tekst";
    },
    get$commandHint_invite() {
      return "Kutsu see kasutaja antud jututuppa";
    },
    get$commandHint_join() {
      return "Liitu selle jututoaga";
    },
    get$commandHint_kick() {
      return "Eemalda antud kasutaja sellest jututoast";
    },
    get$commandHint_leave() {
      return "Lahku sellest jututoast";
    },
    get$commandHint_me() {
      return "Kirjelda ennast";
    },
    get$commandHint_myroomavatar() {
      return "M\xe4\xe4ra selles jututoas oma tunnuspilt (mxc-uri vahendusel)";
    },
    get$commandHint_myroomnick() {
      return "M\xe4\xe4ra selles jututoas oma kuvatav nimi";
    },
    get$commandHint_op() {
      return "Seadista selle kasutaja \xf5igusi (vaikimisi: 50)";
    },
    get$commandHint_plain() {
      return "Saada vormindamata tekst";
    },
    get$commandHint_react() {
      return "Saada vastus reaktsioonina";
    },
    get$commandHint_send() {
      return "Saada s\xf5num";
    },
    get$commandHint_unban() {
      return "Eemalda sellelt kasutajalt antud jututoas suhtluskeeld";
    },
    get$commandInvalid() {
      return "Vigane k\xe4sk";
    },
    commandMissing$1(command) {
      return command + " ei ole k\xe4sk.";
    },
    get$compareEmojiMatch() {
      return "Palun v\xf5rdle emotikone";
    },
    get$compareNumbersMatch() {
      return "Palun v\xf5rdle numbreid";
    },
    get$configureChat() {
      return "Seadista vestlust";
    },
    get$confirm(_) {
      return "Kinnita";
    },
    get$containsDisplayName() {
      return "Sisaldab kuvatavat nime";
    },
    get$containsUserName() {
      return "Sisaldab kasutajanime";
    },
    get$contentHasBeenReported() {
      return "Saatsime selle sisu kohta teate koduserveri haldajate";
    },
    get$copiedToClipboard() {
      return "Kopeerisin l\xf5ikelauale";
    },
    get$copy(_) {
      return "Kopeeri";
    },
    couldNotDecryptMessage$1(error) {
      return "S\xf5numi dekr\xfcptimine ei \xf5nnestunud: " + error;
    },
    countParticipants$1(count) {
      return A.S(count) + " osalejat";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " algatas vestluse";
    },
    get$currentlyActive() {
      return "Hetkel aktiivne";
    },
    get$darkTheme() {
      return "Tume";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "J\xe4rgnevaga eemaldatakse sinu konto kasutusest. Seda tegevust ei saa tagasi p\xf6\xf6rata! Kas sa ikka oled kindel?";
    },
    get$defaultPermissionLevel() {
      return "Vaikimisi \xf5igused uutele kasutajatele";
    },
    get$$delete(_) {
      return "Kustuta";
    },
    get$deleteAccount() {
      return "Kustuta kasutajakonto";
    },
    get$deleteMessage() {
      return "Kustuta s\xf5num";
    },
    get$devices() {
      return "Seadmed";
    },
    get$directChats() {
      return "Otsevestlused";
    },
    get$allRooms() {
      return "K\xf5ik vestlusr\xfchmad";
    },
    get$displaynameHasBeenChanged() {
      return "Kuvatav nimi on muudetud";
    },
    get$downloadFile() {
      return "Laadi fail alla";
    },
    get$edit() {
      return "Muuda";
    },
    get$editBlockedServers() {
      return "Muuda blokeeritud serverite loendit";
    },
    get$chatPermissions() {
      return "Vestluse \xf5igused";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    get$editDisplayname() {
      return "Muuda kuvatavat nime";
    },
    get$editRoomAliases() {
      return "Muuda jututoa aliast";
    },
    get$editRoomAvatar() {
      return "Muuda jututoa tunnuspilti";
    },
    get$emoteExists() {
      return "Selline emotsioonitegevus on juba olemas!";
    },
    get$emoteInvalid() {
      return "Vigane emotsioonitegevuse l\xfchikood!";
    },
    get$emoteKeyboardNoRecents() {
      return "Hiljuti kasutatud emotikonid kuvame siin...";
    },
    get$emotePacks() {
      return "Emotsioonitegevuste pakid jututoa jaoks";
    },
    get$globalChatId() {
      return "\xdcldine vestluse tunnus";
    },
    get$accessAndVisibility() {
      return "Ligip\xe4\xe4setavus ja n\xe4htavus";
    },
    get$customEmojisAndStickers() {
      return "Kohandatud emotikonid ja kleepsud";
    },
    get$emoteShortcode() {
      return "Emotsioonitegevuse l\xfchikood";
    },
    get$emoteWarnNeedToPick() {
      return "Sa pead valima emotsioonitegevuse l\xfchikoodi ja pildi!";
    },
    get$emptyChat() {
      return "Vestlust pole olnud";
    },
    get$enableEmotesGlobally() {
      return "V\xf5ta emotsioonitegevuste pakid l\xe4bivalt kasutusele";
    },
    get$enableEncryption() {
      return "Kasuta kr\xfcptimist";
    },
    get$encrypted() {
      return "Kr\xfcptitud";
    },
    get$encryptionNotEnabled() {
      return "Kr\xfcptimine ei ole kasutusel";
    },
    endedTheCall$1(senderName) {
      return senderName + " l\xf5petas k\xf5ne";
    },
    get$enterAnEmailAddress() {
      return "Sisesta e-posti aadress";
    },
    errorObtainingLocation$1(error) {
      return "Viga asukoha tuvastamisel: " + error;
    },
    get$extremeOffensive() {
      return "\xc4\xe4rmiselt solvav";
    },
    get$fontSize(_) {
      return "Fondi suurus";
    },
    get$forward(_) {
      return "Edasta";
    },
    get$fromJoining() {
      return "Alates liitumise hetkest";
    },
    get$fromTheInvitation() {
      return "Kutse saamisest";
    },
    get$goToTheNewRoom() {
      return "Hakka kasutama uut jututuba";
    },
    get$group() {
      return "Vestlusr\xfchm";
    },
    get$chatDescription() {
      return "Vestluse kirjeldus";
    },
    get$groups() {
      return "Vestlusr\xfchmad";
    },
    groupWith$1(displayname) {
      return "Vestlusr\xfchm " + displayname + " kasutajanimega";
    },
    get$guestsAreForbidden() {
      return "K\xfclalised ei ole lubatud";
    },
    get$guestsCanJoin() {
      return "K\xfclalised v\xf5ivad liituda";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " on v\xf5tnud tagasi " + targetName + " kutse";
    },
    get$help() {
      return "Abiteave";
    },
    get$hideRedactedMessages() {
      return "Peida muudetud s\xf5numid";
    },
    get$hideRedactedMessagesBody() {
      return "Kui keegi muudab s\xf5numit, siis teda enam ei kuvataks vestluses.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Peida vigase v\xf5i tundmatu vorminguga s\xf5numid";
    },
    get$howOffensiveIsThisContent() {
      return "Kui solvav see sisu on?";
    },
    get$block() {
      return "Blokeeri";
    },
    get$blockedUsers() {
      return "Blokeeritud kasutajad";
    },
    get$blockListDescription() {
      return "Sul on v\xf5imalik blokeerida neid kasutajaid, kes sind segavad. Oma isiklikku blokerimisloendisse lisatud kasutajad ei saa sulle saata s\xf5numeid ega kutseid.";
    },
    get$blockUsername() {
      return "Eira kasutajanime";
    },
    get$iHaveClickedOnLink() {
      return "Ma olen kl\xf5psinud saadetud linki";
    },
    get$incorrectPassphraseOrKey() {
      return "Vigane paroolifraas v\xf5i taastev\xf5ti";
    },
    get$inoffensive() {
      return "Kahjutu";
    },
    get$inviteContact() {
      return "Kutsu s\xf5pru ja tuttavaid";
    },
    get$noChatDescriptionYet() {
      return "Vestluse kirjeldus on puudu.";
    },
    get$tryAgain() {
      return "Proovi uuesti";
    },
    get$invited() {
      return "Kutsutud";
    },
    get$redactMessageDescription() {
      return "S\xf5numi muudatus kehtib k\xf5ikidele vestluses osalejatele. Seda muudatust ei saa tagasi p\xf6\xf6rata.";
    },
    get$optionalRedactReason() {
      return "(Kui soovid lisada) S\xf5numi muutmise p\xf5hjus...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " saatis kutse kasutajale " + targetName;
    },
    get$invitedUsersOnly() {
      return "Ainult kutsutud kasutajatele";
    },
    get$inviteForMe() {
      return "Kutse minu jaoks";
    },
    inviteText$2(username, link) {
      return username + " kutsus sind kasutama Matrix'i-p\xf5hist suhtlusrakendust FluffyChat. \n1. Ava fluffychat.im ja paigalda FluffyChat'i rakendus \n2. Liitu kasutajaks v\xf5i logi sisse olemasoleva Matrix'i kasutajakontoga\n3. Ava kutse link: \n " + link;
    },
    get$isTyping() {
      return "kirjutab\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " liitus vestlusega";
    },
    get$joinRoom() {
      return "Liitu jututoaga";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " m\xfcksas kasutaja " + targetName + " v\xe4lja";
    },
    get$kickFromChat() {
      return "M\xfcksa vestlusest v\xe4lja";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Viimati n\xe4htud: " + localizedTimeShort;
    },
    get$leave() {
      return "Lahku";
    },
    get$leftTheChat() {
      return "Lahkus vestlusest";
    },
    get$lightTheme() {
      return "Hele";
    },
    loadCountMoreParticipants$1(count) {
      return "Lisa veel " + count + " osalejat";
    },
    get$dehydrate() {
      return "Ekspordi sessiooni teave ja kustuta nutiseadmest rakenduse andmed";
    },
    get$dehydrateWarning() {
      return "Seda tegevust ei saa tagasi p\xf6\xf6rata. Palun kontrolli, et sa oled varukoopia turvaliselt salvestanud.";
    },
    get$dehydrateTor() {
      return "TOR'i kasutajad: Ekspordi sessioon";
    },
    get$dehydrateTorLong() {
      return "Kui oled TOR'i v\xf5rgu kasutaja, siis enne akna sulgemist palun ekspordi viimase sessiooni andmed.";
    },
    get$loadingPleaseWait() {
      return "Laadin andmeid\u2026 Palun oota.";
    },
    get$loadMore() {
      return "Laadi veel\u2026";
    },
    get$locationDisabledNotice() {
      return "Asukohateenused on seadmes v\xe4ljal\xfclitatud. Asukoha jagamiseks palun l\xfclita nad sisse.";
    },
    get$locationPermissionDeniedNotice() {
      return "Puudub luba asukohateenuste kasutamiseks. Asukoha jagamiseks palun anna rakendusele vastavad \xf5igused.";
    },
    get$login() {
      return "Logi sisse";
    },
    get$logout() {
      return "Logi v\xe4lja";
    },
    get$memberChanges() {
      return "Muudatused liikmeskonnas";
    },
    get$mention() {
      return "M\xe4rgi \xe4ra";
    },
    get$messages() {
      return "S\xf5numid";
    },
    get$messagesStyle() {
      return "S\xf5numid:";
    },
    get$moderator() {
      return "Moderaator";
    },
    get$newChat() {
      return "Uus vestlus";
    },
    get$newVerificationRequest() {
      return "Uus verifitseerimisp\xe4ring!";
    },
    get$next(_) {
      return "Edasi";
    },
    get$no() {
      return "Ei";
    },
    get$noConnectionToTheServer() {
      return "Puudub \xfchendus koduserveriga";
    },
    get$noEmotesFound() {
      return "\xdchtegi emotsioonitegevust ei leidunud. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Jaga kutse linki";
    },
    get$noPasswordRecoveryDescription() {
      return "Sa pole veel lisanud v\xf5imalust salas\xf5na taastamiseks.";
    },
    get$noPermission() {
      return "\xd5igused puuduvad";
    },
    get$noRoomsFound() {
      return "Jututubasid ei leidunud\u2026";
    },
    get$notifications() {
      return "Teavitused";
    },
    get$notificationsEnabledForThisAccount() {
      return "Teavitused on sellel kontol kasutusel";
    },
    get$obtainingLocation() {
      return "Tuvastan asukohta\u2026";
    },
    get$offensive() {
      return "Solvav";
    },
    get$ok() {
      return "Sobib";
    },
    get$oopsSomethingWentWrong() {
      return "Hopsti! Midagi l\xe4ks n\xfc\xfcd viltu\u2026";
    },
    get$oneClientLoggedOut() {
      return "\xdcks sinu klientrakendustest on Matrix'i v\xf5rgust v\xe4lja loginud";
    },
    get$addAccount() {
      return "Lisa kasutajakonto";
    },
    get$enableMultiAccounts() {
      return "(KATSELINE) Pruugi selles seadmes mitut Matrix'i kasutajakontot";
    },
    get$openInMaps() {
      return "Ava kaardirakendusega";
    },
    get$link() {
      return "Link";
    },
    get$serverRequiresEmail() {
      return "See koduserver eeldab registreerimisel kasutatava e-postiaadressi kinnitamist.";
    },
    get$or() {
      return "v\xf5i";
    },
    get$participant() {
      return "Osaleja";
    },
    get$passphraseOrKey() {
      return "paroolifraas v\xf5i taastev\xf5ti";
    },
    get$password(_) {
      return "Salas\xf5na";
    },
    get$passwordForgotten() {
      return "Salas\xf5na on ununenud";
    },
    get$passwordHasBeenChanged() {
      return "Salas\xf5na on muudetud";
    },
    get$overview() {
      return "\xdclevaade";
    },
    get$notifyMeFor() {
      return "Teavita mind kui";
    },
    get$passwordRecoverySettings() {
      return "Salas\xf5na taastamise seadistused";
    },
    get$passwordRecovery() {
      return "Salas\xf5na taastamine";
    },
    get$pickImage() {
      return "Vali pilt";
    },
    get$pin() {
      return "Klammerda";
    },
    get$pleaseChoose() {
      return "Palun vali";
    },
    get$pleaseClickOnLink() {
      return "J\xe4tkamiseks palun kl\xf5psi sulle saadetud e-kirjas leiduvat linki.";
    },
    get$pleaseEnterYourPassword() {
      return "Palun sisesta oma salas\xf5na";
    },
    get$pleaseEnterYourPin() {
      return "Palun sisesta oma PIN-kood";
    },
    get$pleaseEnterYourUsername() {
      return "Palun sisesta oma kasutajanimi";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Palun j\xe4rgi veebilehel olevaid juhiseid ja kl\xf5psi nuppu Edasi.";
    },
    get$privacy() {
      return "Privaatsus";
    },
    get$reason(_) {
      return "P\xf5hjus";
    },
    redactedBy$1(username) {
      return "Muutja: " + username;
    },
    get$directChat() {
      return "Otsevestlus";
    },
    redactedByBecause$2(username, reason) {
      return "Muutja " + username + " m\xe4rkis p\xf5hjuseks: \u201e" + reason + "\u201c";
    },
    redactedAnEvent$1(username) {
      return username + " muutis s\xfcndmust";
    },
    get$redactMessage() {
      return "Muuda s\xf5numit";
    },
    get$reject() {
      return "L\xfckka tagasi";
    },
    rejectedTheInvitation$1(username) {
      return username + " l\xfckkas kutse tagasi";
    },
    get$removeAllOtherDevices() {
      return "Eemalda k\xf5ik muud seadmed";
    },
    get$unbanFromChat() {
      return "Eemalda suhtluskeeld";
    },
    get$removeYourAvatar() {
      return "Kustuta oma tunnuspilt";
    },
    get$replaceRoomWithNewerVersion() {
      return "Asenda jututoa senine versioon uuega";
    },
    get$reply(_) {
      return "Vasta";
    },
    get$reportMessage() {
      return "Teata s\xf5numist";
    },
    get$roomHasBeenUpgraded() {
      return "Jututoa vesrioon on uuendatud";
    },
    get$roomVersion() {
      return "Jututoa versioon";
    },
    get$search(_) {
      return "Otsi";
    },
    get$security() {
      return "Turvalisus";
    },
    get$send(_) {
      return "Saada";
    },
    get$sendAsText() {
      return "Saada tekstis\xf5numina";
    },
    get$sendAudio() {
      return "Saada helifail";
    },
    get$sendFile() {
      return "Saada fail";
    },
    get$sendImage() {
      return "Saada pilt";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "Saada s\xf5numeid";
    },
    get$sendVideo() {
      return "Saada videofail";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " saatis faili";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " saatis helifaili";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " saatis pildi";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " saatis kleepsu";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " saatis video";
    },
    sentCallInformations$1(senderName) {
      return senderName + " saatis teavet k\xf5ne kohta";
    },
    get$separateChatTypes() {
      return "Eraldi vestlused ja jututoad";
    },
    get$setAsCanonicalAlias() {
      return "M\xe4\xe4ra p\xf5hinimeks";
    },
    get$setChatDescription() {
      return "Lisa vestluse kirjeldus";
    },
    get$setPermissionsLevel() {
      return "Seadista \xf5igusi";
    },
    get$settings() {
      return "Seadistused";
    },
    get$share(_) {
      return "Jaga";
    },
    sharedTheLocation$1(username) {
      return username + " jagas oma asukohta";
    },
    get$shareLocation() {
      return "Jaga asukohta";
    },
    get$showPassword() {
      return "N\xe4ita salas\xf5na";
    },
    get$presencesToggle() {
      return "N\xe4ita teiste kasutajate olekuteateid";
    },
    get$skip(_) {
      return "J\xe4ta vahele";
    },
    get$sourceCode() {
      return "L\xe4htekood";
    },
    get$spaceName() {
      return "Kogukonna nimi";
    },
    startedACall$1(senderName) {
      return senderName + " alustas k\xf5net";
    },
    get$status(_) {
      return "Olek";
    },
    get$submit(_) {
      return "Saada";
    },
    get$synchronizingPleaseWait() {
      return "S\xfcnkroniseerin andmeid\u2026 Palun oota.";
    },
    get$systemTheme() {
      return "S\xfcsteem";
    },
    get$theyDontMatch() {
      return "Nad ei klapi omavahel";
    },
    get$theyMatch() {
      return "Nad klapivad omavahel";
    },
    get$tooManyRequestsWarning() {
      return "Liiga palju p\xe4ringuid. Palun proovi hiljem uuesti!";
    },
    get$tryToSendAgain() {
      return "Proovi uuesti saata";
    },
    unbannedUser$2(username, targetName) {
      return username + " eemaldas ligip\xe4\xe4sukeelu kasutajalt " + targetName;
    },
    get$unblockDevice() {
      return "Eemalda seadmelt blokeering";
    },
    get$unknownDevice() {
      return "Tundmatu seade";
    },
    get$unknownEncryptionAlgorithm() {
      return "Tundmatu kr\xfcptoalgoritm";
    },
    unknownEvent$1(type) {
      return "Tundmatu s\xfcndmuse t\xfc\xfcp \u201e" + type + "\u201c";
    },
    get$unpin() {
      return "Eemalda klammerdus";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " ja " + count + " muud kirjutavad\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " ja " + username2 + " kirjutavad\u2026";
    },
    userIsTyping$1(username) {
      return username + " kirjutab\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa" + username + " lahkus vestlusest";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " saatis " + type + " s\xfcndmuse";
    },
    get$unverified() {
      return "Verifitseerimata";
    },
    get$verified() {
      return "Verifitseeritud";
    },
    get$verifyStart() {
      return "Alusta verifitseerimist";
    },
    get$verifySuccess() {
      return "Sinu verifitseerimine \xf5nnestus!";
    },
    get$verifyTitle() {
      return "Verifitseerin teist kasutajakontot";
    },
    get$visibilityOfTheChatHistory() {
      return "Vestluse ajaloo n\xe4htavus";
    },
    get$visibleForAllParticipants() {
      return "N\xe4htav k\xf5ikidele osalejatele";
    },
    get$visibleForEveryone() {
      return "N\xe4htav k\xf5ikidele";
    },
    get$voiceMessage() {
      return "H\xe4\xe4ls\xf5num";
    },
    get$waitingPartnerAcceptRequest() {
      return "Ootan, et teine osapool n\xf5ustuks p\xe4ringuga\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Ootan teise osapoole kinnitust, et tegemist on samade emojidega\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Ootan teise osapoole kinnitust, et tegemist on samade numbritega\u2026";
    },
    get$warning() {
      return "Hoiatus!";
    },
    get$weSentYouAnEmail() {
      return "Me saatsime sulle e-kirja";
    },
    get$whoCanPerformWhichAction() {
      return "Erinevatele kasutajatele lubatud toimingud";
    },
    get$whoIsAllowedToJoinThisGroup() {
      return "Kes v\xf5ivad selle vestlusr\xfchmaga liituda";
    },
    get$whyDoYouWantToReportThis() {
      return "Miks sa soovid sellest teatada?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Nende e-posti aadresside abil saad taastada oma salas\xf5na.";
    },
    get$writeAMessage() {
      return "Kirjuta \xfcks s\xf5num\u2026";
    },
    writeAMessageFlag$2(l1flag, l2flag) {
      return "Write a message in " + l1flag + " or " + l2flag;
    },
    get$yes() {
      return "Jah";
    },
    get$you() {
      return "Sina";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Sa enam ei osale selles vestluses";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Sinule on selles vestluses seatud suhtluskeeld";
    },
    get$yourPublicKey() {
      return "Sinu avalik v\xf5ti";
    },
    get$messageInfo() {
      return "S\xf5numi teave";
    },
    get$time(_) {
      return "Kellaaeg";
    },
    get$sender() {
      return "Saatja";
    },
    get$openGallery() {
      return "Ava galerii";
    },
    get$removeFromSpace() {
      return "Eemalda kogukonnast";
    },
    videoWithSize$1(size) {
      return "Video (" + size + ")";
    },
    get$markAsRead() {
      return "M\xe4rgi loetuks";
    },
    get$reportUser() {
      return "Teata kasutajast";
    },
    reactedWith$2(sender, reaction) {
      return sender + " reageeris nii " + reaction;
    },
    get$pinMessage() {
      return "Klammerda s\xf5num jututuppa";
    },
    get$confirmEventUnpin() {
      return "Kas sa oled kindel, et tahad klammerdatud s\xfcndmuse eemaldada?";
    },
    get$emojis() {
      return "Emotikonid";
    },
    get$emailOrUsername() {
      return "E-posti aadress v\xf5i kasutajanimi";
    },
    get$indexedDbErrorTitle() {
      return "Brauseri privaatse akna kasutamisega seotud asjaolud";
    },
    get$indexedDbErrorLong() {
      return "Privaatse akna puhul andmete salvestamine vaikimisi pole kasutusel.\nPalun toimi allj\xe4rgnevalt:\n- ava about:config\n- m\xe4\xe4ra dom.indexedDB.privateBrowsing.enabled v\xe4\xe4rtuseks true\nVastasel juhul sa ei saa FluffyChat'i kasutada.";
    },
    get$youRejectedTheInvitation() {
      return "Sa l\xfckkasid kutse tagasi";
    },
    get$youJoinedTheChat() {
      return "Sa liitusid vestlusega";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Sa v\xf5tsid kutse vastu";
    },
    youBannedUser$1(user) {
      return "Sa seadsid suhtluskeelu kasutajale " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Sa oled t\xfchistanud kutse kasutajale " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 " + user + " saatis sulle kutse";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Sa saatsid kutse kasutajale " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Sa m\xfcksasid kasutaja " + user + " v\xe4lja";
    },
    youUnbannedUser$1(user) {
      return "Sa eemaldasid suhtluskeelu kasutajalt " + user;
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa" + user + " on jututoa uksele koputanud";
    },
    get$usersMustKnock() {
      return "Kasutajad peavad uksele koputama";
    },
    get$noOneCanJoin() {
      return "Mitte keegi ei saa liituda";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " soovib liituda vestlusega.";
    },
    get$knock() {
      return "Koputa uksele";
    },
    get$users() {
      return "Kasutajad";
    },
    countFiles$1(count) {
      return count + " faili";
    },
    get$user() {
      return "Kasutaja";
    },
    get$custom() {
      return "Kohandatud";
    },
    get$noKeyForThisMessage() {
      return "See v\xf5ib juhtuda, kui s\xf5num oli saadetud enne, kui siin seadmes oma kontoga sisse logisid.\n\nSamuti v\xf5ib juhtuda siis, kui saatja on lugemises selles seadmes blokeerinud v\xf5i on tekkinud t\xf5rkeid veebi\xfchenduses.\n\nAga m\xf5nes teises seadmes saad seda s\xf5numit lugeda? Siis sa v\xf5id s\xf5numi sealt \xfcle t\xf5sta. Ava Seadistused -> Seadmed ning kontrolli, et k\xf5ik sinu seadmed on omavahel verifitseeritud. Kui avad selle vestluse v\xf5i jututoa ning m\xf5lemad sessioonid on avatud, siis vajalikud kr\xfcptov\xf5tmed saadetakse automaatset.\n\nKas sa soovid v\xe4ltida kr\xfcptov\xf5tmete kadumist v\xe4ljalogimisel ja seadmete vahetusel? Siis palun kontrolli, et seadistuses on kr\xfcptov\xf5tmete varundus sisse l\xfclitatud.";
    },
    get$newSpace() {
      return "Uus kogukond";
    },
    get$doNotShowAgain() {
      return "\xc4ra n\xe4ita uuesti";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "S\xf5numiteta vestlus (vana nimega " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Alusta vestlust uuesti";
    },
    get$noBackupWarning() {
      return "Hoiatus! Kui sa ei l\xfclita sisse vestluse varundust, siis sul puudub hiljem ligip\xe4\xe4s kr\xfcptitud s\xf5numitele. Me tungivalt soovitame, et palun l\xfclita vestluse varundamine sisse enne v\xe4ljalogimist.";
    },
    get$noOtherDevicesFound() {
      return "Muid seadmeid ei leidu";
    },
    fileIsTooBigForServer$1(max) {
      return "Saatmine ei \xf5nnestu! Serveri vaid kuni " + max + " suurusega manuseid.";
    },
    get$jumpToLastReadMessage() {
      return "Liigu viimase loetud s\xf5numini";
    },
    get$readUpToHere() {
      return "Siiamaani on loetud";
    },
    get$jump() {
      return "H\xfcppa";
    },
    get$openLinkInBrowser() {
      return "Ava link veebibrauseris";
    },
    get$profileNotFound() {
      return "Sellist kasutajat serveris ei leidu. Tegemist v\xf5ib olla kas v\xf5rgu\xfchenduse probleemiga v\xf5i sellist kasutajat t\xf5esti pole olemas.";
    },
    get$setColorTheme() {
      return "Vali v\xe4rviteema:";
    },
    get$invite() {
      return "Kutsu";
    },
    get$invitePrivateChat() {
      return "\ud83d\udce8 Kutsu omavahelisele vestlusele";
    },
    get$invalidInput() {
      return "Vigane sisend!";
    },
    wrongPinEntered$1(seconds) {
      return "Sisestasid vale PIN-koodi! Proovi uuesti " + seconds + " sekundi p\xe4rast...";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$yourBirthdayPlease() {
      return "Pangea Chat serves schools and other learning communities, ages 13 and up, around the world.\n\nIn order to protect our young learners, we ask our users to verify their age before connecting to our community.\n\nBefore you can search Pangea Chat for classes, rooms, and new friends, you must verify you are 18 or older.";
    },
    get$invalidDob() {
      return "Invalid Date of Birth";
    },
    get$getStarted() {
      return "Get Started";
    },
    get$mustBe13() {
      return "User should be 13 years old";
    },
    get$yourBirthdayPleaseShort() {
      return "Please selected your age group";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$myLanguages() {
      return "My base and target languages";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$sourceLanguage() {
      return "Base language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$loginOrSignup() {
      return "Sign in with";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 13 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$toggleToolSettingsDescription() {
      return "Here you can toggle your individual language tool settings.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$inviteStudentByUserNameDesc() {
      return "If your student already has an account, you can search for them.";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocabulary";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$abDisplayName() {
      return "Abkhaz";
    },
    get$aaDisplayName() {
      return "Afar";
    },
    get$afDisplayName() {
      return "Afrikaans";
    },
    get$akDisplayName() {
      return "Akan";
    },
    get$sqDisplayName() {
      return "Albanian";
    },
    get$amDisplayName() {
      return "Amharic";
    },
    get$arDisplayName() {
      return "Arabic";
    },
    get$anDisplayName() {
      return "Aragonese";
    },
    get$hyDisplayName() {
      return "Armenian";
    },
    get$asDisplayName() {
      return "Assamese";
    },
    get$avDisplayName() {
      return "Avaric";
    },
    get$aeDisplayName() {
      return "Avestan";
    },
    get$ayDisplayName() {
      return "Aymara";
    },
    get$azDisplayName() {
      return "Azerbaijani";
    },
    get$bmDisplayName() {
      return "Bambara";
    },
    get$baDisplayName() {
      return "Bashkir";
    },
    get$euDisplayName() {
      return "Basque";
    },
    get$beDisplayName() {
      return "Belarusian";
    },
    get$bnDisplayName() {
      return "Bengali";
    },
    get$bhDisplayName() {
      return "Bihari";
    },
    get$biDisplayName() {
      return "Bislama";
    },
    get$bsDisplayName() {
      return "Bosnian";
    },
    get$brDisplayName() {
      return "Breton";
    },
    get$bgDisplayName() {
      return "Bulgarian";
    },
    get$myDisplayName() {
      return "Burmese";
    },
    get$caDisplayName() {
      return "Catalan, Valencian";
    },
    get$chDisplayName() {
      return "Chamorro";
    },
    get$ceDisplayName() {
      return "Chechen";
    },
    get$nyDisplayName() {
      return "Chichewa, Chewa, Nyanja";
    },
    get$zhDisplayName() {
      return "Chinese";
    },
    get$cvDisplayName() {
      return "Chuvash";
    },
    get$kwDisplayName() {
      return "Cornish";
    },
    get$coDisplayName() {
      return "Corsican";
    },
    get$crDisplayName() {
      return "Cree";
    },
    get$hrDisplayName() {
      return "Croatian";
    },
    get$csDisplayName() {
      return "Czech";
    },
    get$daDisplayName() {
      return "Danish";
    },
    get$dvDisplayName() {
      return "Divehi; Dhivehi; Maldivian;";
    },
    get$nlDisplayName() {
      return "Dutch";
    },
    get$enDisplayName() {
      return "English";
    },
    get$eoDisplayName() {
      return "Esperanto";
    },
    get$etDisplayName() {
      return "Estonian";
    },
    get$eeDisplayName() {
      return "Ewe";
    },
    get$foDisplayName() {
      return "Faroese";
    },
    get$fjDisplayName() {
      return "Fijian";
    },
    get$fiDisplayName() {
      return "Finnish";
    },
    get$frDisplayName() {
      return "French";
    },
    get$ffDisplayName() {
      return "Fula; Fulah; Pulaar; Pular";
    },
    get$glDisplayName() {
      return "Galician";
    },
    get$kaDisplayName() {
      return "Georgian";
    },
    get$deDisplayName() {
      return "German";
    },
    get$elDisplayName() {
      return "Greek, Modern";
    },
    get$gnDisplayName() {
      return "Guaran\xed";
    },
    get$guDisplayName() {
      return "Gujarati";
    },
    get$htDisplayName() {
      return "Haitian, Haitian Creole";
    },
    get$haDisplayName() {
      return "Hausa";
    },
    get$heDisplayName() {
      return "Hebrew (modern)";
    },
    get$hzDisplayName() {
      return "Herero";
    },
    get$hiDisplayName() {
      return "Hindi";
    },
    get$hoDisplayName() {
      return "Hiri Motu";
    },
    get$huDisplayName() {
      return "Hungarian";
    },
    get$iaDisplayName() {
      return "Interlingua";
    },
    get$idDisplayName() {
      return "Indonesian";
    },
    get$ieDisplayName() {
      return "Interlingue";
    },
    get$gaDisplayName() {
      return "Irish";
    },
    get$igDisplayName() {
      return "Igbo";
    },
    get$ikDisplayName() {
      return "Inupiaq";
    },
    get$ioDisplayName() {
      return "Ido";
    },
    get$isDisplayName() {
      return "Icelandic";
    },
    get$itDisplayName() {
      return "Italian";
    },
    get$iuDisplayName() {
      return "Inuktitut";
    },
    get$jaDisplayName() {
      return "Japanese";
    },
    get$jvDisplayName() {
      return "Javanese";
    },
    get$klDisplayName() {
      return "Kalaallisut, Greenlandic";
    },
    get$knDisplayName() {
      return "Kannada";
    },
    get$krDisplayName() {
      return "Kanuri";
    },
    get$ksDisplayName() {
      return "Kashmiri";
    },
    get$kkDisplayName() {
      return "Kazakh";
    },
    get$kmDisplayName() {
      return "Khmer";
    },
    get$kiDisplayName() {
      return "Kikuyu, Gikuyu";
    },
    get$rwDisplayName() {
      return "Kinyarwanda";
    },
    get$kyDisplayName() {
      return "Kirghiz, Kyrgyz";
    },
    get$kvDisplayName() {
      return "Komi";
    },
    get$kgDisplayName() {
      return "Kongo";
    },
    get$koDisplayName() {
      return "Korean";
    },
    get$kuDisplayName() {
      return "Kurdish";
    },
    get$kjDisplayName() {
      return "Kwanyama, Kuanyama";
    },
    get$laDisplayName() {
      return "Latin";
    },
    get$lbDisplayName() {
      return "Luxembourgish, Letzeburgesch";
    },
    get$lgDisplayName() {
      return "Luganda";
    },
    get$liDisplayName() {
      return "Limburgish, Limburgan, Limburger";
    },
    get$lnDisplayName() {
      return "Lingala";
    },
    get$loDisplayName() {
      return "Lao";
    },
    get$ltDisplayName() {
      return "Lithuanian";
    },
    get$luDisplayName() {
      return "Luba-Katanga";
    },
    get$lvDisplayName() {
      return "Latvian";
    },
    get$gvDisplayName() {
      return "Manx";
    },
    get$mkDisplayName() {
      return "Macedonian";
    },
    get$mgDisplayName() {
      return "Malagasy";
    },
    get$msDisplayName() {
      return "Malay";
    },
    get$mlDisplayName() {
      return "Malayalam";
    },
    get$mtDisplayName() {
      return "Maltese";
    },
    get$miDisplayName() {
      return "M\u0101ori";
    },
    get$mrDisplayName() {
      return "Marathi (Mar\u0101\u1e6dh\u012b)";
    },
    get$mhDisplayName() {
      return "Marshallese";
    },
    get$mnDisplayName() {
      return "Mongolian";
    },
    get$naDisplayName() {
      return "Nauru";
    },
    get$nvDisplayName() {
      return "Navajo, Navaho";
    },
    get$nbDisplayName() {
      return "Norwegian Bokm\xe5l";
    },
    get$ndDisplayName() {
      return "North Ndebele";
    },
    get$neDisplayName() {
      return "Nepali";
    },
    get$ngDisplayName() {
      return "Ndonga";
    },
    get$nnDisplayName() {
      return "Norwegian Nynorsk";
    },
    get$noDisplayName() {
      return "Norwegian";
    },
    get$iiDisplayName() {
      return "Nuosu";
    },
    get$nrDisplayName() {
      return "South Ndebele";
    },
    get$ocDisplayName() {
      return "Occitan";
    },
    get$ojDisplayName() {
      return "Ojibwe, Ojibwa";
    },
    get$cuDisplayName() {
      return "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic";
    },
    get$omDisplayName() {
      return "Oromo";
    },
    get$orDisplayName() {
      return "Oriya";
    },
    get$osDisplayName() {
      return "Ossetian, Ossetic";
    },
    get$paDisplayName() {
      return "Panjabi, Punjabi";
    },
    get$piDisplayName() {
      return "P\u0101li";
    },
    get$faDisplayName() {
      return "Persian";
    },
    get$plDisplayName() {
      return "Polish";
    },
    get$psDisplayName() {
      return "Pashto, Pushto";
    },
    get$ptDisplayName() {
      return "Portuguese";
    },
    get$quDisplayName() {
      return "Quechua";
    },
    get$rmDisplayName() {
      return "Romansh";
    },
    get$rnDisplayName() {
      return "Kirundi";
    },
    get$roDisplayName() {
      return "Romanian, Moldavian, Moldovan";
    },
    get$ruDisplayName() {
      return "Russian";
    },
    get$saDisplayName() {
      return "Sanskrit (Sa\u1e41sk\u1e5bta)";
    },
    get$scDisplayName() {
      return "Sardinian";
    },
    get$sdDisplayName() {
      return "Sindhi";
    },
    get$seDisplayName() {
      return "Northern Sami";
    },
    get$smDisplayName() {
      return "Samoan";
    },
    get$sgDisplayName() {
      return "Sango";
    },
    get$srDisplayName() {
      return "Serbian";
    },
    get$gdDisplayName() {
      return "Scottish Gaelic, Gaelic";
    },
    get$snDisplayName() {
      return "Shona";
    },
    get$siDisplayName() {
      return "Sinhala, Sinhalese";
    },
    get$skDisplayName() {
      return "Slovak";
    },
    get$slDisplayName() {
      return "Slovene";
    },
    get$soDisplayName() {
      return "Somali";
    },
    get$stDisplayName() {
      return "Southern Sotho";
    },
    get$esDisplayName() {
      return "Spanish";
    },
    get$suDisplayName() {
      return "Sundanese";
    },
    get$swDisplayName() {
      return "Swahili";
    },
    get$ssDisplayName() {
      return "Swati";
    },
    get$svDisplayName() {
      return "Swedish";
    },
    get$taDisplayName() {
      return "Tamil";
    },
    get$teDisplayName() {
      return "Telugu";
    },
    get$tgDisplayName() {
      return "Tajik";
    },
    get$thDisplayName() {
      return "Thai";
    },
    get$tiDisplayName() {
      return "Tigrinya";
    },
    get$boDisplayName() {
      return "Tibetan Standard, Tibetan, Central";
    },
    get$tkDisplayName() {
      return "Turkmen";
    },
    get$tlDisplayName() {
      return "Tagalog";
    },
    get$tnDisplayName() {
      return "Tswana";
    },
    get$toDisplayName() {
      return "Tonga (Tonga Islands)";
    },
    get$trDisplayName() {
      return "Turkish";
    },
    get$tsDisplayName() {
      return "Tsonga";
    },
    get$ttDisplayName() {
      return "Tatar";
    },
    get$twDisplayName() {
      return "Twi";
    },
    get$tyDisplayName() {
      return "Tahitian";
    },
    get$ugDisplayName() {
      return "Uighur, Uyghur";
    },
    get$ukDisplayName() {
      return "Ukrainian";
    },
    get$urDisplayName() {
      return "Urdu";
    },
    get$uzDisplayName() {
      return "Uzbek";
    },
    get$veDisplayName() {
      return "Venda";
    },
    get$viDisplayName() {
      return "Vietnamese";
    },
    get$voDisplayName() {
      return "Volap\xfck";
    },
    get$waDisplayName() {
      return "Walloon";
    },
    get$cyDisplayName() {
      return "Welsh";
    },
    get$woDisplayName() {
      return "Wolof";
    },
    get$fyDisplayName() {
      return "Western Frisian";
    },
    get$xhDisplayName() {
      return "Xhosa";
    },
    get$yiDisplayName() {
      return "Yiddish";
    },
    get$yoDisplayName() {
      return "Yoruba";
    },
    get$zaDisplayName() {
      return "Zhuang, Chuang";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$zuDisplayName() {
      return "Zulu";
    },
    get$hawDisplayName() {
      return "Hawaiian";
    },
    get$hmnDisplayName() {
      return "Hmong";
    },
    get$multiDisplayName() {
      return "Multi";
    },
    get$cebDisplayName() {
      return "Cebuano";
    },
    get$dzDisplayName() {
      return "Dzongkha";
    },
    get$iwDisplayName() {
      return "Hebrew";
    },
    get$jwDisplayName() {
      return "Javanese";
    },
    get$moDisplayName() {
      return "Moldavian";
    },
    get$shDisplayName() {
      return "Serbo-Croatian";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$declinedInvitation() {
      return "Declined invitation";
    },
    get$acceptedInvitation() {
      return "Accepted invitation";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    get$pleaseEnterANumber() {
      return "Palun sisesta 0'st suurem number";
    },
    get$archiveRoomDescription() {
      return "Selle vestluse t\xf5stame n\xfc\xfcd arhiivi. Muud osalejad n\xe4evad, et sa oled vestlusest lahkunud.";
    },
    get$roomUpgradeDescription() {
      return "See vestlus luuakse n\xfc\xfcd uuesti jututoa uue versioonina. K\xf5ik senised osalejad saavad teate, et nad peavad liituma uue vestlusega. Jututubade versioonide kohta leiad teavet https://spec.matrix.org/latest/rooms/ lehelt";
    },
    get$removeDevicesDescription() {
      return "Sind logitakse sellest seadmest v\xe4lja ja sa enam ei saa s\xf5numeid.";
    },
    get$banUserDescription() {
      return "Sellele kasutajale on n\xfc\xfcd selles jututoas seatud suhtluskeeld ning ta ei saa vestluses osaleda seni, kuni suhtluskeeld pole eemaldatud.";
    },
    get$unbanUserDescription() {
      return "Uuesti proovimisel saab see kasutaja n\xfc\xfcd vestlusega liituda.";
    },
    get$kickUserDescription() {
      return "See kasutaja on n\xfc\xfcd jutuoast v\xe4lja m\xfcksatud, kuid talle pole seatud suhtluskeeldu. Avaliku jututoa puhul saab ta alati uuesti liituda.";
    },
    get$makeAdminDescription() {
      return "Kui annad sellele kasutajale peakasutaja \xf5igused, siis kuna tal on sinuga samad \xf5igused, sa ei saa seda toimingut enam tagasi p\xf6\xf6rata.";
    },
    get$yourGlobalUserIdIs() {
      return "Sinu \xfcldine kasutajatunnus on: ";
    },
    noUsersFoundWithQuery$1(query) {
      return "P\xe4ringuga \u201e" + query + "\u201c ei leidunud kahkus \xfchtegi kasutajat. Palun kontrolli, et p\xe4ringus poleks vigu.";
    },
    get$knocking() {
      return "Koputus uksele";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "Vestluse v\xf5i jututoa saad leida otsingust serveris " + server;
    },
    get$searchChatsRooms() {
      return "Otsi #vestlusi, @kasutajaid...";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$nothingFound() {
      return "Ei leidnud mitte midagi...";
    },
    get$wrongRecoveryKey() {
      return "Vabandust..., see ei tundu olema korrektne taastev\xf5ti.";
    },
    get$startConversation() {
      return "Alusta vestlust";
    },
    get$commandHint_sendraw() {
      return "Saada json oma algup\xe4rasel kujul";
    },
    get$searchForUsers() {
      return "Otsi kasutajat @kasutajanimi ...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Palun sisesta oma praegune salas\xf5na";
    },
    get$newPassword() {
      return "Uus salas\xf5na";
    },
    get$pleaseChooseAStrongPassword() {
      return "Palun sisesta korralik salas\xf5na";
    },
    get$passwordsDoNotMatch() {
      return "Salas\xf5nad ei klapi omavahel";
    },
    get$passwordIsWrong() {
      return "Sinu sisestatud salas\xf5na on vale";
    },
    get$publicChatAddresses() {
      return "Vestluse avalik aadress";
    },
    get$createNewAddress() {
      return "Loo uus aadress";
    },
    get$joinSpace() {
      return "Liitu kogukonnaga";
    },
    get$publicSpaces() {
      return "Avalikud kogukonnad";
    },
    get$decline() {
      return "Keeldu";
    },
    get$thisDevice() {
      return "See seade:";
    },
    get$initAppError() {
      return "Rakenduse k\xe4ivitamisel tekkis viga";
    },
    get$userRole() {
      return "Kasutaja roll";
    },
    searchIn$1(chat) {
      return "Otsi vestlusest \u201e" + chat + "\u201c...";
    },
    get$searchMore() {
      return "Otsi veel...";
    },
    get$gallery() {
      return "Galerii";
    },
    get$files(_) {
      return "Failid";
    },
    sessionLostBody$2(url, error) {
      return "Sinu sessioon on kadunud. Palun teata sellest veast arendajatele siin: " + url + " m\xe4rkides veateate: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "N\xfc\xfcd \xfcritab rakendus taastada sinu sessiooni varukoopiast. Palun teata sellest veast arendajatele siin: " + url + " m\xe4rkides veateate: " + error;
    },
    forwardMessageTo$1(roomName) {
      return "Kas edastame s\xf5numi jututuppa " + roomName + "?";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$noEmailWarning() {
      return "Please enter a valid email address. Otherwise you won't be able to reset your password. If you don't want to, tap again on the button to continue.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$chooseAUsername() {
      return "Choose a username";
    },
    get$define(_) {
      return "Define";
    },
    get$sendReadReceipts() {
      return "Saada lugemisteatisi";
    },
    get$sendTypingNotificationsDescription() {
      return "Muud vestluses osalejad saavad n\xe4ha, kui sa oled uut s\xf5numit kirjutamas.";
    },
    get$sendReadReceiptsDescription() {
      return "Muud vestluses osalejad n\xe4evad, kas oled s\xf5numit lugenud.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verifitseeri oma muu seade";
    },
    get$verifyOtherDeviceDescription() {
      return "Kui sa oled oma muu seadme verifitseerinud, siis need seadmed v\xf5ivad vahetada kr\xfcptov\xf5tmeid ning see parandab \xfcldist turvalisust. \ud83d\udcaa Kui alustad verifitseerimist, siis sinu m\xf5lemas seadmes tekib rakenduses h\xfcpikaken. Seal kuvatakse emotikonide v\xf5i numbrite jada, mida pead omavahel v\xf5rdlema. On oluline, et m\xf5lemad seadmed on verifitseerimise alustamisel sinu k\xf5rval. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " n\xf5ustus kr\xfcptov\xf5tmete verifitseerimisega";
    },
    canceledKeyVerification$1(sender) {
      return sender + " katkestas kr\xfcptov\xf5tmete verifitseerimise";
    },
    completedKeyVerification$1(sender) {
      return sender + " sai valmis kr\xfcptov\xf5tmete verifitseerimise";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " on valmis kr\xfcptov\xf5tmete verifitseerimiseks";
    },
    requestedKeyVerification$1(sender) {
      return sender + " palus kr\xfcptov\xf5tmete verifitseerimist";
    },
    startedKeyVerification$1(sender) {
      return sender + " alustas kr\xfcptov\xf5tmete verifitseerimist";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$selectToDefine() {
      return "Click any word to see its definition!";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    certifyAge$1(age) {
      return "I certify that I am over " + age + " years of age";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$stickers() {
      return "Kleepsud";
    },
    get$discover() {
      return "Otsi ja leia";
    },
    get$commandHint_ignore() {
      return "Eira seda Matrixi kasutajatunnust";
    },
    get$commandHint_unignore() {
      return "L\xf5peta selle Matrixi kasutajatunnuse eiramine";
    },
    get$accuracy(_) {
      return "Accuracy";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$conversationBotCustomZone_customTriggerReactionEnabledLabel() {
      return "Responds on \u23e9 reaction";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run Language Assistance Automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run language assistance after typing messages";
    },
    get$leaveRoomDescription() {
      return "The chat will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$leaveSpaceDescription() {
      return "All chats within this space will be moved to the archive. Other users will be able to see that you have left the space.";
    },
    get$onlyAdminDescription() {
      return "Since there are no other admins, all other participants will also be removed.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$spaceCapacity() {
      return "Space capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$spaceCapacityHasBeenChanged() {
      return "Space capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of non-admins.";
    },
    get$spaceCapacitySetTooLow() {
      return "Space capacity cannot be set below the current number of non-admins.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of non-admins allowed in a chat.";
    },
    get$spaceCapacityExplanation() {
      return "Space capacity limits the number of non-admins allowed in a space.";
    },
    get$chatExceedsCapacity() {
      return "This chat exceeds its capacity.";
    },
    get$spaceExceedsCapacity() {
      return "This space exceeds its capacity.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Hetkel on " + count + " blokeeritud kasutajat.";
    },
    get$restricted() {
      return "Piiratud";
    },
    get$knockRestricted() {
      return "Koputa piiratud ligip\xe4\xe4suga jututoa uksele";
    },
    get$createNewSpace() {
      return "Uus kogukond";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "See how well you did by looking at your Accuracy and Words Per Minute scores";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$continueText() {
      return "J\xe4tka";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$sendCanceled() {
      return "Saatmine on katkestatud";
    },
    goToSpace$1(space) {
      return "Ava kogukond: " + space;
    },
    get$markAsUnread() {
      return "M\xe4rgi mitteloetuks";
    },
    userLevel$1(level) {
      return "" + level + " - kasutaja";
    },
    moderatorLevel$1(level) {
      return "" + level + " - moderaator";
    },
    adminLevel$1(level) {
      return "" + level + " - peakasutaja";
    },
    get$changeGeneralChatSettings() {
      return "Muuda vestluse \xfcldiseid seadistusi";
    },
    get$inviteOtherUsers() {
      return "Kutsu teisi osalejaid sellesse vestlusesse";
    },
    get$changeTheChatPermissions() {
      return "Muuda vestluse \xf5igusi";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Muuda vestluse ajaloo n\xe4htavust";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Muuda vestluse p\xf5hilist avalikult n\xe4htavat aadressi";
    },
    get$sendRoomNotifications() {
      return "Saada @jututuba teavitusi";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Muuda vestluse kirjeldust";
    },
    get$chatPermissionsDescription() {
      return "M\xe4\xe4ra erinevatele kasutajatele selles vestluses vajalikud \xf5igused. T\xfc\xfcpiliselt on need 0, 50 ja 100 (vastavalt kasutajad, moderaatorid ja peakasutajad), kuid igasugused vahepealsed variatsioonid on ka v\xf5imalikud.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Versiooniuuendus " + version + " on paigaldatud!";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Ei tundu olema \xfchilduv koduserver. Kas v\xf5rguaadress on ikka \xf5ige?";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$reportContentIssueTitle() {
      return "Report content issue";
    },
    get$feedback() {
      return "Optional feedback";
    },
    get$reportContentIssueDescription() {
      return "Uh oh! AI can faciliate personalized learning experiences but... also hallucinates. Please provide any feedback you have and we'll try again.";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$messageNotInTargetLang() {
      return "Message not in target language";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$unlockedLanguageTools() {
      return "You\u2019ve unlocked the language tools for this message. Try them out by clicking below!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$calculatingFileSize() {
      return "Arvutame faili suurust...";
    },
    get$prepareSendingAttachment() {
      return "Valmistume manuse saatmiseks...";
    },
    get$sendingAttachment() {
      return "Saadame manust...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Saadame manust: " + index + " pikkusega " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Serveri poolt lubatud \xfclempiir on k\xe4es. Ootame " + seconds + " sekundit...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "M\xe4rkus: kui liidad k\xf5ik oma seadmed vestluste varundamisega, siis on nad sellega ka automaatselt verifitseeritud.";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$blur(_) {
      return "H\xe4gusus:";
    },
    get$opacity(_) {
      return "L\xe4bipaistmatus:";
    },
    get$setWallpaper() {
      return "M\xe4\xe4ra taustapildiks";
    },
    get$noContactInformationProvided() {
      return "Server ei jaga asjakohast kontaktteavet";
    },
    get$contactServerAdmin() {
      return "V\xf5ta \xfchendust serveri haldajaga";
    },
    get$contactServerSecurity() {
      return "V\xf5ta \xfchendust serveri andmeturbe eest vastutajaga";
    },
    get$supportPage() {
      return "Kasutajatugi";
    },
    get$serverInformation() {
      return "Serveri teave:";
    },
    get$name(_) {
      return "Nimi";
    },
    get$version(_) {
      return "Versioon";
    },
    get$website() {
      return "Veebisait";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Paks kiri";
    },
    get$italicText() {
      return "Kaldkiri";
    },
    get$strikeThrough() {
      return "L\xe4bikriipsutatud kiri";
    },
    get$pleaseFillOut() {
      return "Palun t\xe4ida";
    },
    get$invalidUrl() {
      return "Vigane v\xf5rguaadress";
    },
    get$addLink() {
      return "Lisa link";
    },
    get$unableToJoinChat() {
      return "Vestlusega liitumine ei \xf5nnestu. V\xf5ib-olla on teine osapool juba vestluse sulgenud.";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$mandatoryUpdateRequired() {
      return "Mandatory Update Required";
    },
    get$updateAvailable() {
      return "Update Available";
    },
    get$mandatoryUpdateRequiredDesc() {
      return "A new version of the app is required to continue. Please update now to proceed.";
    },
    get$updateAvailableDesc() {
      return "A new version of the app is available. Update now for the latest features and improvements!";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.L10nEt, C.L10n);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nEt":{"L10n":[]}}'));
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_223", e: "endPart", h: h});
})($__dart_deferred_initializers__, "ZOQpbl0VBfCPv40E0/rJO8eWiDs=");
;
//# sourceMappingURL=main.dart.js_223.part.js.map
