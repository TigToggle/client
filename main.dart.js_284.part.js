// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.6.0.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_284", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    L10nTr$() {
      return new B.L10nTr(A.canonicalizedLocale("tr"));
    },
    L10nTr: function L10nTr(t0) {
      this.localeName = t0;
    }
  };
  A = holdersList[0];
  C = holdersList[51];
  B = hunkHelpers.updateHolder(holdersList[48], B);
  B.L10nTr.prototype = {
    get$alwaysUse24HourFormat() {
      return "false";
    },
    get$repeatPassword() {
      return "Parolay\u0131 tekrarlay\u0131n";
    },
    get$notAnImage() {
      return "Bir resim dosyas\u0131 de\u011fil.";
    },
    get$remove(_) {
      return "Kald\u0131r";
    },
    get$importNow() {
      return "\u015eimdi i\xe7e aktar";
    },
    get$importEmojis() {
      return "\u0130fadeleri \u0130\xe7e Aktar";
    },
    get$importFromZipFile() {
      return ".zip dosyas\u0131ndan i\xe7e aktar";
    },
    get$exportEmotePack() {
      return "\u0130fade paketini .zip olarak d\u0131\u015fa aktar";
    },
    get$replace(_) {
      return "De\u011fi\u015ftir";
    },
    aboutHomeserver$1(homeserver) {
      return "About " + homeserver;
    },
    get$accept(_) {
      return "Kabul et";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " kat\u0131lma davetini kabul etti";
    },
    get$account() {
      return "Hesap";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " u\xe7tan uca \u015fifrelemeyi etkinle\u015ftirdi";
    },
    get$addEmail() {
      return "E-posta ekle";
    },
    get$confirmMatrixId() {
      return "Hesab\u0131n\u0131z\u0131 silmek i\xe7in l\xfctfen Matrix kimli\u011finizi do\u011frulay\u0131n.";
    },
    supposedMxid$1(mxid) {
      return "Bu " + mxid + " olmal\u0131d\u0131r";
    },
    get$addToSpace() {
      return "Alana ekle";
    },
    get$admin() {
      return "Y\xf6netici";
    },
    get$alias() {
      return "takma ad";
    },
    get$all() {
      return "T\xfcm\xfc";
    },
    get$commandHint_googly() {
      return "\u015ea\u015fk\u0131n g\xf6zler g\xf6nder";
    },
    get$commandHint_cuddle() {
      return "Kucaklama g\xf6nder";
    },
    get$commandHint_hug() {
      return "Sar\u0131lma g\xf6nder";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " size \u015fa\u015fk\u0131n g\xf6zler g\xf6nderiyor";
    },
    cuddleContent$1(senderName) {
      return senderName + " sizi kucakl\u0131yor";
    },
    hugContent$1(senderName) {
      return senderName + " size sar\u0131l\u0131yor";
    },
    answeredTheCall$1(senderName) {
      return senderName + " aramay\u0131 yan\u0131tlad\u0131";
    },
    get$anyoneCanJoin() {
      return "Herkes kat\u0131labilir";
    },
    get$archive() {
      return "Ar\u015fiv";
    },
    get$areGuestsAllowedToJoin() {
      return "Misafir kullan\u0131c\u0131lar\u0131n kat\u0131lmas\u0131na izin veriliyor mu";
    },
    get$areYouSure() {
      return "Emin misiniz?";
    },
    get$areYouSureYouWantToLogout() {
      return "Oturumu a\xe7mak istedi\u011finizden emin misiniz?";
    },
    get$askSSSSSign() {
      return "Di\u011fer ki\u015fiyi imzalayabilmek i\xe7in l\xfctfen g\xfcvenli depolama parolan\u0131z\u0131 veya kurtarma anahtar\u0131n\u0131z\u0131 girin.";
    },
    askVerificationRequest$1(username) {
      return username + " ki\u015fisinden gelen bu do\u011frulama iste\u011fi kabul edilsin mi?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "Ana sunucu a\u015fa\u011f\u0131daki oturum a\xe7ma t\xfcrlerini destekliyor:\n" + serverVersions + "\nAncak bu uygulama yaln\u0131zca a\u015fa\u011f\u0131dakileri destekliyor:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Yazma bildirimleri g\xf6nder";
    },
    get$swipeRightToLeftToReply() {
      return "Yan\u0131tlamak i\xe7in sa\u011fdan sola kayd\u0131r";
    },
    get$sendOnEnter() {
      return "Enter tu\u015fu ile g\xf6nder";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "Ana sunucu a\u015fa\u011f\u0131daki Spec s\xfcr\xfcmlerini destekliyor:\n" + serverVersions + "\nAncak bu uygulama yaln\u0131zca " + supportedVersions + " destekliyor";
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return A.S(chats) + " sohbet ve " + A.S(participants) + " kat\u0131l\u0131mc\u0131";
    },
    get$noMoreChatsFound() {
      return "Ba\u015fka sohbet bulunamad\u0131...";
    },
    get$noChatsFoundHere() {
      return "Burada hen\xfcz sohbet bulunamad\u0131. A\u015fa\u011f\u0131daki d\xfc\u011fmeyi kullanarak biriyle yeni bir sohbet ba\u015flat\u0131n. \u2935\ufe0f";
    },
    get$unread() {
      return "Okunmad\u0131";
    },
    get$space() {
      return "Alan";
    },
    get$spaces() {
      return "Alanlar";
    },
    get$banFromChat() {
      return "Sohbetten engelle";
    },
    get$banned() {
      return "Engellendi";
    },
    bannedUser$2(username, targetName) {
      return username + ", " + targetName + " ki\u015fisini engelledi";
    },
    get$blockDevice() {
      return "Ayg\u0131t\u0131 Engelle";
    },
    get$blocked() {
      return "Engellendi";
    },
    get$botMessages() {
      return "Bot mesajlar\u0131";
    },
    get$cancel(_) {
      return "\u0130ptal";
    },
    cantOpenUri$1(uri) {
      return uri + " URI'si a\xe7\u0131lam\u0131yor";
    },
    get$changeDeviceName() {
      return "Ayg\u0131t ad\u0131n\u0131 de\u011fi\u015ftir";
    },
    changedTheChatAvatar$1(username) {
      return username + " sohbet avatar\u0131n\u0131 de\u011fi\u015ftirdi";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " sohbet a\xe7\u0131klamas\u0131n\u0131 de\u011fi\u015ftirdi: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " sohbet ad\u0131n\u0131 de\u011fi\u015ftirdi: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " sohbet izinlerini de\u011fi\u015ftirdi";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " g\xf6r\xfcnen ad\u0131n\u0131 '" + displayname + "' olarak de\u011fi\u015ftirdi";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " misafir eri\u015fim kurallar\u0131n\u0131 de\u011fi\u015ftirdi";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " misafir eri\u015fim kurallar\u0131n\u0131 de\u011fi\u015ftirdi: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " ge\xe7mi\u015f g\xf6r\xfcn\xfcrl\xfc\u011f\xfcn\xfc de\u011fi\u015ftirdi";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " ge\xe7mi\u015f g\xf6r\xfcn\xfcrl\xfc\u011f\xfcn\xfc de\u011fi\u015ftirdi: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " kat\u0131l\u0131m kurallar\u0131n\u0131 de\u011fi\u015ftirdi";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " kat\u0131l\u0131m kurallar\u0131n\u0131 de\u011fi\u015ftirdi: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " avatar\u0131n\u0131 de\u011fi\u015ftirdi";
    },
    changedTheRoomAliases$1(username) {
      return username + " oda takma adlar\u0131n\u0131 de\u011fi\u015ftirdi";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " davet ba\u011flant\u0131s\u0131n\u0131 de\u011fi\u015ftirdi";
    },
    get$changePassword() {
      return "Parolay\u0131 de\u011fi\u015ftir";
    },
    get$changeTheme() {
      return "Tarz\u0131n\u0131z\u0131 de\u011fi\u015ftirin";
    },
    get$changeTheNameOfTheGroup() {
      return "Grubun ad\u0131n\u0131 de\u011fi\u015ftir";
    },
    get$changeYourAvatar() {
      return "Avatar\u0131n\u0131z\u0131 de\u011fi\u015ftirin";
    },
    get$channelCorruptedDecryptError() {
      return "\u015eifreleme bozuldu";
    },
    get$chat() {
      return "Sohbet";
    },
    get$chatDetails() {
      return "Sohbet ayr\u0131nt\u0131lar\u0131";
    },
    get$chats() {
      return "Sohbetler";
    },
    get$chooseAStrongPassword() {
      return "G\xfc\xe7l\xfc bir parola se\xe7in";
    },
    get$clearArchive() {
      return "Ar\u015fivi temizle";
    },
    get$close(_) {
      return "Kapat";
    },
    get$commandHint_markasdm() {
      return "Verilen Matrix kimli\u011fi i\xe7in do\u011frudan mesaj odas\u0131 olarak i\u015faretle";
    },
    get$commandHint_markasgroup() {
      return "Grup olarak i\u015faretle";
    },
    get$commandHint_ban() {
      return "Verilen kullan\u0131c\u0131y\u0131 bu odadan yasaklay\u0131n";
    },
    get$commandHint_clearcache() {
      return "\xd6nbelle\u011fi temizleyin";
    },
    get$commandHint_create() {
      return "Bo\u015f bir grup sohbeti olu\u015fturun\n\u015eifrelemeyi devre d\u0131\u015f\u0131 b\u0131rakmak i\xe7in --no-encryption kullan\u0131n";
    },
    get$commandHint_discardsession() {
      return "Oturumu silin";
    },
    get$commandHint_dm() {
      return "Do\u011frudan sohbet ba\u015flat\u0131n\n\u015eifrelemeyi devre d\u0131\u015f\u0131 b\u0131rakmak i\xe7in --no-encryption kullan\u0131n";
    },
    get$commandHint_html() {
      return "HTML bi\xe7imli metin g\xf6nderin";
    },
    get$commandHint_invite() {
      return "Verilen kullan\u0131c\u0131y\u0131 bu odaya davet edin";
    },
    get$commandHint_join() {
      return "Verilen odaya kat\u0131l\u0131n";
    },
    get$commandHint_kick() {
      return "Verilen kullan\u0131c\u0131y\u0131 bu odadan kald\u0131r\u0131n";
    },
    get$commandHint_leave() {
      return "Bu odadan ayr\u0131l\u0131n";
    },
    get$commandHint_me() {
      return "Kendinizi tan\u0131mlay\u0131n";
    },
    get$commandHint_myroomavatar() {
      return "Bu oda i\xe7in resminizi ayarlay\u0131n (mxc-uri ile)";
    },
    get$commandHint_myroomnick() {
      return "Bu oda i\xe7in g\xf6r\xfcnen ad\u0131n\u0131z\u0131 ayarlay\u0131n";
    },
    get$commandHint_op() {
      return "Verilen kullan\u0131c\u0131n\u0131n g\xfc\xe7 seviyesini ayarlay\u0131n (\xf6ntan\u0131ml\u0131: 50)";
    },
    get$commandHint_plain() {
      return "Bi\xe7imlendirilmemi\u015f metin g\xf6nderin";
    },
    get$commandHint_react() {
      return "Tepki olarak yan\u0131t g\xf6nderin";
    },
    get$commandHint_send() {
      return "Metin g\xf6nderin";
    },
    get$commandHint_unban() {
      return "Verilen kullan\u0131c\u0131n\u0131n bu odadaki yasa\u011f\u0131n\u0131 kald\u0131r\u0131n";
    },
    get$commandInvalid() {
      return "Komut ge\xe7ersiz";
    },
    commandMissing$1(command) {
      return command + " bir komut de\u011fil.";
    },
    get$compareEmojiMatch() {
      return "L\xfctfen emojileri kar\u015f\u0131la\u015ft\u0131r\u0131n";
    },
    get$compareNumbersMatch() {
      return "L\xfctfen say\u0131lar\u0131 kar\u015f\u0131la\u015ft\u0131r\u0131n";
    },
    get$configureChat() {
      return "Sohbeti yap\u0131land\u0131r";
    },
    get$confirm(_) {
      return "Onayla";
    },
    get$containsDisplayName() {
      return "G\xf6r\xfcnen ad i\xe7erir";
    },
    get$containsUserName() {
      return "Kullan\u0131c\u0131 ad\u0131 i\xe7erir";
    },
    get$contentHasBeenReported() {
      return "\u0130\xe7erik, sunucu y\xf6neticilerine bildirildi";
    },
    get$copiedToClipboard() {
      return "Panoya kopyaland\u0131";
    },
    get$copy(_) {
      return "Kopyala";
    },
    couldNotDecryptMessage$1(error) {
      return "Mesaj\u0131n \u015fifresi \xe7\xf6z\xfclemedi: " + error;
    },
    countParticipants$1(count) {
      return A.S(count) + " kat\u0131l\u0131mc\u0131";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " sohbeti olu\u015fturdu";
    },
    get$currentlyActive() {
      return "\u015eu anda etkin";
    },
    get$darkTheme() {
      return "Koyu";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Bu, kullan\u0131c\u0131 hesab\u0131n\u0131z\u0131 devre d\u0131\u015f\u0131 b\u0131rakacak. Bu geri al\u0131namaz! Emin misiniz?";
    },
    get$defaultPermissionLevel() {
      return "Yeni kullan\u0131c\u0131lar i\xe7i \xf6ntan\u0131ml\u0131 izin seviyesi";
    },
    get$$delete(_) {
      return "Sil";
    },
    get$deleteAccount() {
      return "Hesab\u0131 sil";
    },
    get$deleteMessage() {
      return "Mesaj\u0131 sil";
    },
    get$devices() {
      return "Ayg\u0131tlar";
    },
    get$directChats() {
      return "Do\u011frudan Sohbetler";
    },
    get$allRooms() {
      return "T\xfcm Grup Sohbetleri";
    },
    get$displaynameHasBeenChanged() {
      return "G\xf6r\xfcnen ad de\u011fi\u015ftirildi";
    },
    get$downloadFile() {
      return "Dosyay\u0131 indir";
    },
    get$edit() {
      return "D\xfczenle";
    },
    get$editBlockedServers() {
      return "Engellenen sunucular\u0131 d\xfczenle";
    },
    get$chatPermissions() {
      return "Sohbet izinleri";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    get$editDisplayname() {
      return "G\xf6r\xfcnen ad\u0131 d\xfczenle";
    },
    get$editRoomAliases() {
      return "Oda takma adlar\u0131n\u0131 d\xfczenle";
    },
    get$editRoomAvatar() {
      return "Oda avatar\u0131n\u0131 d\xfczenle";
    },
    get$emoteExists() {
      return "\u0130fade zaten var!";
    },
    get$emoteInvalid() {
      return "Ge\xe7ersiz ifade k\u0131sa kodu!";
    },
    get$emoteKeyboardNoRecents() {
      return "Son kullan\u0131lan ifadeler burada g\xf6r\xfcnecek...";
    },
    get$emotePacks() {
      return "Oda i\xe7in ifade paketleri";
    },
    get$globalChatId() {
      return "Genel sohbet kimli\u011fi";
    },
    get$accessAndVisibility() {
      return "Eri\u015fim ve g\xf6r\xfcn\xfcrl\xfck";
    },
    get$customEmojisAndStickers() {
      return "\xd6zel emojiler ve \xe7\u0131kartmalar";
    },
    get$emoteShortcode() {
      return "\u0130fade k\u0131sa kodu";
    },
    get$emoteWarnNeedToPick() {
      return "Bir ifade k\u0131sa kodu ve bir resim se\xe7meniz gerekiyor!";
    },
    get$emptyChat() {
      return "Bo\u015f sohbet";
    },
    get$enableEmotesGlobally() {
      return "\u0130fade paketini k\xfcresel olarak etkinle\u015ftir";
    },
    get$enableEncryption() {
      return "\u015eifrelemeyi etkinle\u015ftir";
    },
    get$encrypted() {
      return "\u015eifreli";
    },
    get$encryptionNotEnabled() {
      return "\u015eifreleme etkinle\u015ftirilmedi";
    },
    endedTheCall$1(senderName) {
      return senderName + " aramay\u0131 sonland\u0131rd\u0131";
    },
    get$enterAnEmailAddress() {
      return "Bir e-posta adresi girin";
    },
    errorObtainingLocation$1(error) {
      return "Konum al\u0131n\u0131rken hata olu\u015ftu: " + error;
    },
    get$extremeOffensive() {
      return "A\u015f\u0131r\u0131 rahats\u0131z edici";
    },
    get$fontSize(_) {
      return "Yaz\u0131 tipi boyutu";
    },
    get$forward(_) {
      return "\u0130let";
    },
    get$fromJoining() {
      return "Kat\u0131lmadan";
    },
    get$fromTheInvitation() {
      return "Davetten";
    },
    get$goToTheNewRoom() {
      return "Yeni odaya git";
    },
    get$group() {
      return "Grup";
    },
    get$chatDescription() {
      return "Sohbet a\xe7\u0131klamas\u0131";
    },
    get$groups() {
      return "Gruplar";
    },
    groupWith$1(displayname) {
      return displayname + " ile grup";
    },
    get$guestsAreForbidden() {
      return "Misafirlere izin verilmiyor";
    },
    get$guestsCanJoin() {
      return "Misafirler kat\u0131labilir";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + ", " + targetName + " i\xe7in daveti geri \xe7ekti";
    },
    get$help() {
      return "Yard\u0131m";
    },
    get$hideRedactedMessages() {
      return "D\xfczenlenen mesajlar\u0131 gizle";
    },
    get$hideRedactedMessagesBody() {
      return "Birisi bir mesaj\u0131 d\xfczenlerse, bu mesaj art\u0131k sohbette g\xf6r\xfcnmeyecektir.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Ge\xe7ersiz veya bilinmeyen mesaj bi\xe7imlerini gizle";
    },
    get$howOffensiveIsThisContent() {
      return "Bu i\xe7erik ne kadar rahats\u0131z edici?";
    },
    get$block() {
      return "Engelle";
    },
    get$blockedUsers() {
      return "Engellenen kullan\u0131c\u0131lar";
    },
    get$blockListDescription() {
      return "Sizi rahats\u0131z eden kullan\u0131c\u0131lar\u0131 engelleyebilirsiniz. Ki\u015fisel engelleme listenizdeki kullan\u0131c\u0131lardan herhangi bir mesaj veya oda daveti alamazs\u0131n\u0131z.";
    },
    get$blockUsername() {
      return "Kullan\u0131c\u0131 ad\u0131n\u0131 g\xf6rmezden gel";
    },
    get$iHaveClickedOnLink() {
      return "Ba\u011flant\u0131ya t\u0131klad\u0131m";
    },
    get$incorrectPassphraseOrKey() {
      return "Yanl\u0131\u015f parola veya kurtarma anahtar\u0131";
    },
    get$inoffensive() {
      return "Rahats\u0131z edici de\u011fil";
    },
    get$inviteContact() {
      return "Ki\u015fi davet et";
    },
    get$noChatDescriptionYet() {
      return "Daha sohbet a\xe7\u0131klamas\u0131 olu\u015fturulmad\u0131.";
    },
    get$tryAgain() {
      return "Tekrar deneyin";
    },
    get$invited() {
      return "Davet edildi";
    },
    get$redactMessageDescription() {
      return "Bu mesaj bu g\xf6r\xfc\u015fmedeki herkes i\xe7in d\xfczenlenecek. Bu i\u015flem geri al\u0131namaz.";
    },
    get$optionalRedactReason() {
      return "(\u0130ste\u011fe ba\u011fl\u0131) Bu mesaj\u0131 d\xfczenleme nedeni\u2026";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + ", " + targetName + " ki\u015fisini davet etti";
    },
    get$invitedUsersOnly() {
      return "Sadece davet edilen kullan\u0131c\u0131lar";
    },
    get$inviteForMe() {
      return "Benim i\xe7in davet et";
    },
    inviteText$2(username, link) {
      return username + " sizi FluffyChat'e davet etti.\n1. fluffychat.im adresini ziyaret edin ve uygulamay\u0131 kurun \n2. Kaydolun veya oturum a\xe7\u0131n \n3. Davet ba\u011flant\u0131s\u0131n\u0131 a\xe7\u0131n: \n " + link;
    },
    get$isTyping() {
      return "yaz\u0131yor\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " sohbete kat\u0131ld\u0131";
    },
    get$joinRoom() {
      return "Odaya kat\u0131l";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + ", " + targetName + " ki\u015fisini att\u0131";
    },
    get$kickFromChat() {
      return "Sohbetten at";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Son g\xf6r\xfclen: " + localizedTimeShort;
    },
    get$leave() {
      return "Ayr\u0131l";
    },
    get$leftTheChat() {
      return "Sohbetten ayr\u0131ld\u0131";
    },
    get$lightTheme() {
      return "A\xe7\u0131k";
    },
    loadCountMoreParticipants$1(count) {
      return count + " kat\u0131l\u0131mc\u0131 daha y\xfckle";
    },
    get$dehydrate() {
      return "Oturumu d\u0131\u015fa aktar ve ayg\u0131t\u0131 sil";
    },
    get$dehydrateWarning() {
      return "Bu eylem geri al\u0131namaz. Yedekleme dosyas\u0131n\u0131 g\xfcvenli bir \u015fekilde saklad\u0131\u011f\u0131n\u0131zdan emin olun.";
    },
    get$dehydrateTor() {
      return "TOR Kullan\u0131c\u0131lar\u0131: Oturumu d\u0131\u015fa aktar";
    },
    get$dehydrateTorLong() {
      return "TOR kullan\u0131c\u0131lar\u0131 i\xe7in, pencereyi kapatmadan \xf6nce oturumu d\u0131\u015fa aktarmalar\u0131 tavsiye edilir.";
    },
    get$loadingPleaseWait() {
      return "Y\xfckleniyor\u2026 L\xfctfen bekleyin.";
    },
    get$loadMore() {
      return "Daha fazla y\xfckle\u2026";
    },
    get$locationDisabledNotice() {
      return "Konum hizmetleri devre d\u0131\u015f\u0131. L\xfctfen konumunuzu payla\u015fabilmek i\xe7in etkinle\u015ftirin.";
    },
    get$locationPermissionDeniedNotice() {
      return "Konum izni reddedildi. L\xfctfen konumunuzu payla\u015fabilmek i\xe7in izin verin.";
    },
    get$logout() {
      return "Oturumu kapat";
    },
    get$memberChanges() {
      return "\xdcye de\u011fi\u015fiklikleri";
    },
    get$mention() {
      return "Bahset";
    },
    get$messages() {
      return "Mesajlar";
    },
    get$messagesStyle() {
      return "Mesajlar:";
    },
    get$moderator() {
      return "Moderat\xf6r";
    },
    get$newChat() {
      return "Yeni sohbet";
    },
    get$newVerificationRequest() {
      return "Yeni do\u011frulama iste\u011fi!";
    },
    get$next(_) {
      return "\u0130leri";
    },
    get$no() {
      return "Hay\u0131r";
    },
    get$noConnectionToTheServer() {
      return "Sunucuyla ba\u011flant\u0131 yok";
    },
    get$noEmotesFound() {
      return "\u0130fade bulunamad\u0131. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Davet ba\u011flant\u0131s\u0131n\u0131 payla\u015f";
    },
    get$noPasswordRecoveryDescription() {
      return "Hen\xfcz parolan\u0131z\u0131 kurtarmak i\xe7in bir yol eklemediniz.";
    },
    get$noPermission() {
      return "\u0130zin yok";
    },
    get$noRoomsFound() {
      return "Oda bulunamad\u0131\u2026";
    },
    get$notifications() {
      return "Bildirimler";
    },
    get$notificationsEnabledForThisAccount() {
      return "Bu hesap i\xe7in bildirimler etkinle\u015ftirildi";
    },
    get$obtainingLocation() {
      return "Konum al\u0131n\u0131yor\u2026";
    },
    get$offensive() {
      return "Rahats\u0131z edici";
    },
    get$ok() {
      return "Tamam";
    },
    get$oopsSomethingWentWrong() {
      return "T\xfch, bir \u015feyler yanl\u0131\u015f gitti\u2026";
    },
    get$oneClientLoggedOut() {
      return "\u0130stemcilerinizden birinin oturumu kapat\u0131ld\u0131";
    },
    get$addAccount() {
      return "Hesap ekle";
    },
    get$enableMultiAccounts() {
      return "(BETA) Bu ayg\u0131tta \xe7oklu hesaplar\u0131 etkinle\u015ftir";
    },
    get$openInMaps() {
      return "Haritalarda a\xe7";
    },
    get$link() {
      return "Ba\u011flant\u0131";
    },
    get$serverRequiresEmail() {
      return "Bu sunucunun kay\u0131t i\xe7in e-posta adresinizi do\u011frulamas\u0131 gerekiyor.";
    },
    get$or() {
      return "Veya";
    },
    get$participant() {
      return "Kat\u0131l\u0131mc\u0131";
    },
    get$passphraseOrKey() {
      return "parola veya kurtarma anahtar\u0131";
    },
    get$password(_) {
      return "Parola";
    },
    get$passwordHasBeenChanged() {
      return "Parola de\u011fi\u015ftirildi";
    },
    get$overview() {
      return "Genel g\xf6r\xfcn\xfcm";
    },
    get$notifyMeFor() {
      return "Beni bilgilendir";
    },
    get$passwordRecoverySettings() {
      return "Parola kurtarma ayarlar\u0131";
    },
    get$passwordRecovery() {
      return "Parola kurtarma";
    },
    get$pickImage() {
      return "Bir resim se\xe7";
    },
    get$pin() {
      return "Sabitle";
    },
    get$pleaseChoose() {
      return "L\xfctfen se\xe7in";
    },
    get$pleaseClickOnLink() {
      return "L\xfctfen e-postadaki ba\u011flant\u0131ya t\u0131klay\u0131n ve devam edin.";
    },
    get$pleaseEnterYourPassword() {
      return "L\xfctfen parolan\u0131z\u0131 girin";
    },
    get$pleaseEnterYourPin() {
      return "L\xfctfen PIN kodunuzu girin";
    },
    get$pleaseEnterYourUsername() {
      return "L\xfctfen kullan\u0131c\u0131 ad\u0131n\u0131z\u0131 girin";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return 'L\xfctfen web sitesindeki talimatlar\u0131 izleyin ve "\u0130leri" d\xfc\u011fmesine dokunun.';
    },
    get$privacy() {
      return "Gizlilik";
    },
    get$reason(_) {
      return "Neden";
    },
    redactedBy$1(username) {
      return username + " taraf\u0131ndan d\xfczenlendi";
    },
    get$directChat() {
      return "Do\u011frudan sohbet";
    },
    redactedByBecause$2(username, reason) {
      return username + ' taraf\u0131ndan "' + reason + '" nedeniyle d\xfczenlendi';
    },
    redactedAnEvent$1(username) {
      return username + " bir etkinli\u011fi d\xfczenledi";
    },
    get$redactMessage() {
      return "Mesaj\u0131 d\xfczenle";
    },
    get$reject() {
      return "Reddet";
    },
    rejectedTheInvitation$1(username) {
      return username + " daveti reddetti";
    },
    get$removeAllOtherDevices() {
      return "Di\u011fer t\xfcm ayg\u0131tlar\u0131 kald\u0131r";
    },
    get$unbanFromChat() {
      return "Sohbet engelini kald\u0131r";
    },
    get$removeYourAvatar() {
      return "Avatar\u0131n\u0131z\u0131 kald\u0131r\u0131n";
    },
    get$replaceRoomWithNewerVersion() {
      return "Oday\u0131 yeni s\xfcr\xfcmle de\u011fi\u015ftir";
    },
    get$reply(_) {
      return "Yan\u0131tla";
    },
    get$reportMessage() {
      return "Mesaj\u0131 bildir";
    },
    get$roomHasBeenUpgraded() {
      return "Oda y\xfckseltildi";
    },
    get$roomVersion() {
      return "Oda s\xfcr\xfcm\xfc";
    },
    get$search(_) {
      return "Ara";
    },
    get$security() {
      return "G\xfcvenlik";
    },
    get$send(_) {
      return "G\xf6nder";
    },
    get$sendAsText() {
      return "Metin olarak g\xf6nder";
    },
    get$sendAudio() {
      return "Ses g\xf6nder";
    },
    get$sendFile() {
      return "Dosya g\xf6nder";
    },
    get$sendImage() {
      return "Resim g\xf6nder";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "Mesajlar\u0131 g\xf6nder";
    },
    get$sendVideo() {
      return "Video g\xf6nder";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " bir dosya g\xf6nderdi";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " bir ses g\xf6nderdi";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " bir resim g\xf6nderdi";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " bir \xe7\u0131kartma g\xf6nderdi";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " bir video g\xf6nderdi";
    },
    sentCallInformations$1(senderName) {
      return senderName + " arama bilgilerini g\xf6nderdi";
    },
    get$separateChatTypes() {
      return "Do\u011frudan Sohbetleri ve Gruplar\u0131 Ay\u0131r";
    },
    get$setAsCanonicalAlias() {
      return "Ana takma ad olarak ayarla";
    },
    get$setChatDescription() {
      return "Sohbet a\xe7\u0131klamas\u0131n\u0131 ayarla";
    },
    get$setPermissionsLevel() {
      return "\u0130zin seviyesini ayarla";
    },
    get$settings() {
      return "Ayarlar";
    },
    get$share(_) {
      return "Payla\u015f";
    },
    sharedTheLocation$1(username) {
      return username + " konumunu payla\u015ft\u0131";
    },
    get$shareLocation() {
      return "Konumu payla\u015f";
    },
    get$presencesToggle() {
      return "Di\u011fer kullan\u0131c\u0131lar\u0131n durum mesajlar\u0131n\u0131 g\xf6ster";
    },
    get$skip(_) {
      return "Atla";
    },
    get$sourceCode() {
      return "Kaynak kodlar\u0131";
    },
    get$spaceName() {
      return "Alan ad\u0131";
    },
    startedACall$1(senderName) {
      return senderName + " bir arama ba\u015flatt\u0131";
    },
    get$status(_) {
      return "Durum";
    },
    get$submit(_) {
      return "G\xf6nder";
    },
    get$synchronizingPleaseWait() {
      return "E\u015fzamanlan\u0131yor\u2026 L\xfctfen bekleyin.";
    },
    get$systemTheme() {
      return "Sistem";
    },
    get$theyDontMatch() {
      return "E\u015fle\u015fmediler";
    },
    get$theyMatch() {
      return "E\u015fle\u015ftiler";
    },
    get$title(_) {
      return "FluffyChat";
    },
    get$tooManyRequestsWarning() {
      return "\xc7ok fazla istek. L\xfctfen daha sonra tekrar deneyin!";
    },
    get$tryToSendAgain() {
      return "Tekrar g\xf6ndermeyi deneyin";
    },
    get$unavailable() {
      return "Yok";
    },
    unbannedUser$2(username, targetName) {
      return username + ", " + targetName + " ki\u015fisinin engelini kald\u0131rd\u0131";
    },
    get$unblockDevice() {
      return "Ayg\u0131t\u0131n Engellemesini Kald\u0131r";
    },
    get$unknownDevice() {
      return "Bilinmeyen ayg\u0131t";
    },
    get$unknownEncryptionAlgorithm() {
      return "Bilinmeyen \u015fifreleme algoritmas\u0131";
    },
    unknownEvent$1(type) {
      return "Bilinmeyen etkinlik '" + type + "'";
    },
    get$unpin() {
      return "Sabitlemeyi kald\u0131r";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " ve " + count + " di\u011fer ki\u015fi yaz\u0131yor\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " ve " + username2 + " yaz\u0131yor\u2026";
    },
    userIsTyping$1(username) {
      return username + " yaz\u0131yor\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " sohbetten ayr\u0131ld\u0131";
    },
    get$username(_) {
      return "Kullan\u0131c\u0131 ad\u0131";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " bir " + type + " etkinli\u011fi g\xf6nderdi";
    },
    get$unverified() {
      return "Do\u011frulanmad\u0131";
    },
    get$verified() {
      return "Do\u011fruland\u0131";
    },
    get$verifyStart() {
      return "Do\u011frulamay\u0131 Ba\u015flat";
    },
    get$verifySuccess() {
      return "Ba\u015far\u0131yla do\u011fruland\u0131!";
    },
    get$verifyTitle() {
      return "Di\u011fer hesap do\u011frulan\u0131yor";
    },
    get$visibilityOfTheChatHistory() {
      return "Sohbet ge\xe7mi\u015fi g\xf6r\xfcn\xfcrl\xfc\u011f\xfc";
    },
    get$visibleForAllParticipants() {
      return "T\xfcm kat\u0131l\u0131mc\u0131lar i\xe7in g\xf6r\xfcn\xfcr";
    },
    get$visibleForEveryone() {
      return "Herkes i\xe7in g\xf6r\xfcn\xfcr";
    },
    get$voiceMessage() {
      return "Sesli mesaj";
    },
    get$waitingPartnerAcceptRequest() {
      return "Orta\u011f\u0131n iste\u011fi kabul etmesi bekleniyor\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Orta\u011f\u0131n emojiyi kabul etmesi bekleniyor\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Orta\u011f\u0131n numaralar\u0131 kabul etmesi bekleniyor\u2026";
    },
    get$warning() {
      return "Uyar\u0131!";
    },
    get$weSentYouAnEmail() {
      return "Size bir e-posta g\xf6nderdik";
    },
    get$whoCanPerformWhichAction() {
      return "Kim hangi eylemi ger\xe7ekle\u015ftirebilir";
    },
    get$whoIsAllowedToJoinThisGroup() {
      return "Bu gruba kimler kat\u0131labilir";
    },
    get$whyDoYouWantToReportThis() {
      return "Bunu neden bildirmek istiyorsunuz?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Bu adresler ile parolan\u0131z\u0131 kurtarabilirsiniz.";
    },
    get$writeAMessage() {
      return "Bir mesaj yaz\u2026";
    },
    writeAMessageFlag$2(l1flag, l2flag) {
      return "Write a message in " + l1flag + " or " + l2flag;
    },
    get$yes() {
      return "Evet";
    },
    get$you() {
      return "Sen";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Art\u0131k bu sohbette kat\u0131l\u0131mc\u0131 de\u011filsiniz";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Bu sohbetten engellendiniz";
    },
    get$yourPublicKey() {
      return "Ortak anahtar\u0131n\u0131z";
    },
    get$messageInfo() {
      return "Mesaj bilgileri";
    },
    get$time(_) {
      return "Zaman";
    },
    get$sender() {
      return "G\xf6nderen";
    },
    get$openGallery() {
      return "Galeriyi a\xe7";
    },
    get$removeFromSpace() {
      return "Alandan kald\u0131r";
    },
    videoWithSize$1(size) {
      return "Video (" + size + ")";
    },
    get$markAsRead() {
      return "Okundu olarak i\u015faretle";
    },
    get$reportUser() {
      return "Kullan\u0131c\u0131y\u0131 bildir";
    },
    reactedWith$2(sender, reaction) {
      return sender + ", " + reaction + " ile tepki verdi";
    },
    get$pinMessage() {
      return "Odaya sabitle";
    },
    get$confirmEventUnpin() {
      return "Etkinli\u011fin sabitlemesini kal\u0131c\u0131 olarak kald\u0131rmak istedi\u011finizden emin misiniz?";
    },
    get$emojis() {
      return "Emojiler";
    },
    get$youRejectedTheInvitation() {
      return "Daveti reddettiniz";
    },
    get$youJoinedTheChat() {
      return "Sohbete kat\u0131ld\u0131n\u0131z";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Daveti kabul ettiniz";
    },
    youBannedUser$1(user) {
      return user + " kullan\u0131c\u0131s\u0131n\u0131 yasaklad\u0131n\u0131z";
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return user + " i\xe7in daveti geri \xe7ektiniz";
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 " + user + " taraf\u0131ndan davet edildiniz";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 " + user + " kullan\u0131c\u0131s\u0131n\u0131 davet ettiniz";
    },
    youKicked$1(user) {
      return "\ud83d\udc5e " + user + " kullan\u0131c\u0131s\u0131n\u0131 att\u0131n\u0131z";
    },
    youUnbannedUser$1(user) {
      return user + " kullan\u0131c\u0131s\u0131n\u0131n yasa\u011f\u0131n\u0131 kald\u0131rd\u0131n\u0131z";
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " t\u0131klatt\u0131";
    },
    get$usersMustKnock() {
      return "Kullan\u0131c\u0131lar t\u0131klatmal\u0131";
    },
    get$noOneCanJoin() {
      return "Kimse kat\u0131lamaz";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " sohbete kat\u0131lmak istiyor.";
    },
    get$knock() {
      return "T\u0131klat";
    },
    get$users() {
      return "Kullan\u0131c\u0131lar";
    },
    countFiles$1(count) {
      return count + " dosya";
    },
    get$user() {
      return "Kullan\u0131c\u0131";
    },
    get$custom() {
      return "\xd6zel";
    },
    get$noKeyForThisMessage() {
      return "Bu durum, mesaj siz bu ayg\u0131tta hesab\u0131n\u0131zda oturum a\xe7madan \xf6nce g\xf6nderildiyse meydana gelebilir.\n\nG\xf6nderenin ayg\u0131t\u0131n\u0131z\u0131 engellemi\u015f olmas\u0131 veya internet ba\u011flant\u0131s\u0131nda bir sorun olmas\u0131 da m\xfcmk\xfcnd\xfcr.\n\nMesaj\u0131 ba\u015fka bir oturumda okuyabiliyor musunuz? O zaman mesaj\u0131 oradan aktarabilirsiniz! Ayarlar > Ayg\u0131tlar b\xf6l\xfcm\xfcne gidin ve ayg\u0131tlar\u0131n\u0131z\u0131n birbirini do\u011frulad\u0131\u011f\u0131ndan emin olun. Oday\u0131 bir sonraki sefer a\xe7t\u0131\u011f\u0131n\u0131zda ve her iki oturum da \xf6n planda oldu\u011funda, anahtarlar otomatik olarak iletilecektir.\n\nOturumu kapat\u0131rken veya ayg\u0131t de\u011fi\u015ftirirken anahtarlar\u0131 kaybetmek istemiyor musunuz? Ayarlarda sohbet yedeklemesini etkinle\u015ftirdi\u011finizden emin olun.";
    },
    get$newSpace() {
      return "Yeni alan";
    },
    get$doNotShowAgain() {
      return "Tekrar g\xf6sterme";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Bo\u015f sohbet (" + oldDisplayName + " idi)";
    },
    get$reopenChat() {
      return "Sohbeti yeniden a\xe7";
    },
    get$noBackupWarning() {
      return "Uyar\u0131! Sohbet yedeklemesini etkinle\u015ftirmezseniz, \u015fifrelenen mesajlar\u0131n\u0131za eri\u015fiminizi kaybedersiniz. Oturumu kapatmadan \xf6nce sohbet yedeklemesini etkinle\u015ftirmeniz \xf6nemle tavsiye edilir.";
    },
    get$noOtherDevicesFound() {
      return "Ba\u015fka ayg\u0131t bulunamad\u0131";
    },
    fileIsTooBigForServer$1(max) {
      return "G\xf6nderilemiyor! Sunucu yaln\u0131zca " + max + " de\u011ferine kadar olan ekleri destekliyor.";
    },
    get$jumpToLastReadMessage() {
      return "Son okunan mesaja atla";
    },
    get$readUpToHere() {
      return "Buraya kadar oku";
    },
    get$jump() {
      return "Atla";
    },
    get$openLinkInBrowser() {
      return "Ba\u011flant\u0131y\u0131 taray\u0131c\u0131da a\xe7";
    },
    get$profileNotFound() {
      return "Kullan\u0131c\u0131 sunucuda bulunamad\u0131. Belki bir ba\u011flant\u0131 sorunu vard\u0131r veya kullan\u0131c\u0131 mevcut de\u011fildir.";
    },
    get$setColorTheme() {
      return "Renk temas\u0131n\u0131 ayarla:";
    },
    get$invite() {
      return "Davet et";
    },
    get$invitePrivateChat() {
      return "\ud83d\udce8 Gizli sohbete davet et";
    },
    get$invalidInput() {
      return "Ge\xe7ersiz giri\u015f!";
    },
    wrongPinEntered$1(seconds) {
      return "Yanl\u0131\u015f PIN girildi! " + seconds + " saniye sonra tekrar deneyin...";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$interactiveTranslatorRequired() {
      return "Required";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$myLanguages() {
      return "My base and target languages";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$sourceLanguage() {
      return "Base language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$toggleToolSettingsDescription() {
      return "Here you can toggle your individual language tool settings.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocabulary";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$abDisplayName() {
      return "Abkhaz";
    },
    get$aaDisplayName() {
      return "Afar";
    },
    get$afDisplayName() {
      return "Afrikaans";
    },
    get$akDisplayName() {
      return "Akan";
    },
    get$sqDisplayName() {
      return "Albanian";
    },
    get$amDisplayName() {
      return "Amharic";
    },
    get$arDisplayName() {
      return "Arabic";
    },
    get$anDisplayName() {
      return "Aragonese";
    },
    get$hyDisplayName() {
      return "Armenian";
    },
    get$asDisplayName() {
      return "Assamese";
    },
    get$avDisplayName() {
      return "Avaric";
    },
    get$aeDisplayName() {
      return "Avestan";
    },
    get$ayDisplayName() {
      return "Aymara";
    },
    get$azDisplayName() {
      return "Azerbaijani";
    },
    get$bmDisplayName() {
      return "Bambara";
    },
    get$baDisplayName() {
      return "Bashkir";
    },
    get$euDisplayName() {
      return "Basque";
    },
    get$beDisplayName() {
      return "Belarusian";
    },
    get$bnDisplayName() {
      return "Bengali";
    },
    get$bhDisplayName() {
      return "Bihari";
    },
    get$biDisplayName() {
      return "Bislama";
    },
    get$bsDisplayName() {
      return "Bosnian";
    },
    get$brDisplayName() {
      return "Breton";
    },
    get$bgDisplayName() {
      return "Bulgarian";
    },
    get$myDisplayName() {
      return "Burmese";
    },
    get$caDisplayName() {
      return "Catalan, Valencian";
    },
    get$chDisplayName() {
      return "Chamorro";
    },
    get$ceDisplayName() {
      return "Chechen";
    },
    get$nyDisplayName() {
      return "Chichewa, Chewa, Nyanja";
    },
    get$zhDisplayName() {
      return "Chinese";
    },
    get$cvDisplayName() {
      return "Chuvash";
    },
    get$kwDisplayName() {
      return "Cornish";
    },
    get$coDisplayName() {
      return "Corsican";
    },
    get$crDisplayName() {
      return "Cree";
    },
    get$hrDisplayName() {
      return "Croatian";
    },
    get$csDisplayName() {
      return "Czech";
    },
    get$daDisplayName() {
      return "Danish";
    },
    get$dvDisplayName() {
      return "Divehi; Dhivehi; Maldivian;";
    },
    get$nlDisplayName() {
      return "Dutch";
    },
    get$enDisplayName() {
      return "English";
    },
    get$eoDisplayName() {
      return "Esperanto";
    },
    get$etDisplayName() {
      return "Estonian";
    },
    get$eeDisplayName() {
      return "Ewe";
    },
    get$foDisplayName() {
      return "Faroese";
    },
    get$fjDisplayName() {
      return "Fijian";
    },
    get$fiDisplayName() {
      return "Finnish";
    },
    get$frDisplayName() {
      return "French";
    },
    get$ffDisplayName() {
      return "Fula; Fulah; Pulaar; Pular";
    },
    get$glDisplayName() {
      return "Galician";
    },
    get$kaDisplayName() {
      return "Georgian";
    },
    get$deDisplayName() {
      return "German";
    },
    get$elDisplayName() {
      return "Greek, Modern";
    },
    get$gnDisplayName() {
      return "Guaran\xed";
    },
    get$guDisplayName() {
      return "Gujarati";
    },
    get$htDisplayName() {
      return "Haitian, Haitian Creole";
    },
    get$haDisplayName() {
      return "Hausa";
    },
    get$heDisplayName() {
      return "Hebrew (modern)";
    },
    get$hzDisplayName() {
      return "Herero";
    },
    get$hiDisplayName() {
      return "Hindi";
    },
    get$hoDisplayName() {
      return "Hiri Motu";
    },
    get$huDisplayName() {
      return "Hungarian";
    },
    get$iaDisplayName() {
      return "Interlingua";
    },
    get$idDisplayName() {
      return "Indonesian";
    },
    get$ieDisplayName() {
      return "Interlingue";
    },
    get$gaDisplayName() {
      return "Irish";
    },
    get$igDisplayName() {
      return "Igbo";
    },
    get$ikDisplayName() {
      return "Inupiaq";
    },
    get$ioDisplayName() {
      return "Ido";
    },
    get$isDisplayName() {
      return "Icelandic";
    },
    get$itDisplayName() {
      return "Italian";
    },
    get$iuDisplayName() {
      return "Inuktitut";
    },
    get$jaDisplayName() {
      return "Japanese";
    },
    get$jvDisplayName() {
      return "Javanese";
    },
    get$klDisplayName() {
      return "Kalaallisut, Greenlandic";
    },
    get$knDisplayName() {
      return "Kannada";
    },
    get$krDisplayName() {
      return "Kanuri";
    },
    get$ksDisplayName() {
      return "Kashmiri";
    },
    get$kkDisplayName() {
      return "Kazakh";
    },
    get$kmDisplayName() {
      return "Khmer";
    },
    get$kiDisplayName() {
      return "Kikuyu, Gikuyu";
    },
    get$rwDisplayName() {
      return "Kinyarwanda";
    },
    get$kyDisplayName() {
      return "Kirghiz, Kyrgyz";
    },
    get$kvDisplayName() {
      return "Komi";
    },
    get$kgDisplayName() {
      return "Kongo";
    },
    get$koDisplayName() {
      return "Korean";
    },
    get$kuDisplayName() {
      return "Kurdish";
    },
    get$kjDisplayName() {
      return "Kwanyama, Kuanyama";
    },
    get$laDisplayName() {
      return "Latin";
    },
    get$lbDisplayName() {
      return "Luxembourgish, Letzeburgesch";
    },
    get$lgDisplayName() {
      return "Luganda";
    },
    get$liDisplayName() {
      return "Limburgish, Limburgan, Limburger";
    },
    get$lnDisplayName() {
      return "Lingala";
    },
    get$loDisplayName() {
      return "Lao";
    },
    get$ltDisplayName() {
      return "Lithuanian";
    },
    get$luDisplayName() {
      return "Luba-Katanga";
    },
    get$lvDisplayName() {
      return "Latvian";
    },
    get$gvDisplayName() {
      return "Manx";
    },
    get$mkDisplayName() {
      return "Macedonian";
    },
    get$mgDisplayName() {
      return "Malagasy";
    },
    get$msDisplayName() {
      return "Malay";
    },
    get$mlDisplayName() {
      return "Malayalam";
    },
    get$mtDisplayName() {
      return "Maltese";
    },
    get$miDisplayName() {
      return "M\u0101ori";
    },
    get$mrDisplayName() {
      return "Marathi (Mar\u0101\u1e6dh\u012b)";
    },
    get$mhDisplayName() {
      return "Marshallese";
    },
    get$mnDisplayName() {
      return "Mongolian";
    },
    get$naDisplayName() {
      return "Nauru";
    },
    get$nvDisplayName() {
      return "Navajo, Navaho";
    },
    get$nbDisplayName() {
      return "Norwegian Bokm\xe5l";
    },
    get$ndDisplayName() {
      return "North Ndebele";
    },
    get$neDisplayName() {
      return "Nepali";
    },
    get$ngDisplayName() {
      return "Ndonga";
    },
    get$nnDisplayName() {
      return "Norwegian Nynorsk";
    },
    get$noDisplayName() {
      return "Norwegian";
    },
    get$iiDisplayName() {
      return "Nuosu";
    },
    get$nrDisplayName() {
      return "South Ndebele";
    },
    get$ocDisplayName() {
      return "Occitan";
    },
    get$ojDisplayName() {
      return "Ojibwe, Ojibwa";
    },
    get$cuDisplayName() {
      return "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic";
    },
    get$omDisplayName() {
      return "Oromo";
    },
    get$orDisplayName() {
      return "Oriya";
    },
    get$osDisplayName() {
      return "Ossetian, Ossetic";
    },
    get$paDisplayName() {
      return "Panjabi, Punjabi";
    },
    get$piDisplayName() {
      return "P\u0101li";
    },
    get$faDisplayName() {
      return "Persian";
    },
    get$plDisplayName() {
      return "Polish";
    },
    get$psDisplayName() {
      return "Pashto, Pushto";
    },
    get$ptDisplayName() {
      return "Portuguese";
    },
    get$quDisplayName() {
      return "Quechua";
    },
    get$rmDisplayName() {
      return "Romansh";
    },
    get$rnDisplayName() {
      return "Kirundi";
    },
    get$roDisplayName() {
      return "Romanian, Moldavian, Moldovan";
    },
    get$ruDisplayName() {
      return "Russian";
    },
    get$saDisplayName() {
      return "Sanskrit (Sa\u1e41sk\u1e5bta)";
    },
    get$scDisplayName() {
      return "Sardinian";
    },
    get$sdDisplayName() {
      return "Sindhi";
    },
    get$seDisplayName() {
      return "Northern Sami";
    },
    get$smDisplayName() {
      return "Samoan";
    },
    get$sgDisplayName() {
      return "Sango";
    },
    get$srDisplayName() {
      return "Serbian";
    },
    get$gdDisplayName() {
      return "Scottish Gaelic, Gaelic";
    },
    get$snDisplayName() {
      return "Shona";
    },
    get$siDisplayName() {
      return "Sinhala, Sinhalese";
    },
    get$skDisplayName() {
      return "Slovak";
    },
    get$slDisplayName() {
      return "Slovene";
    },
    get$soDisplayName() {
      return "Somali";
    },
    get$stDisplayName() {
      return "Southern Sotho";
    },
    get$esDisplayName() {
      return "Spanish";
    },
    get$suDisplayName() {
      return "Sundanese";
    },
    get$swDisplayName() {
      return "Swahili";
    },
    get$ssDisplayName() {
      return "Swati";
    },
    get$svDisplayName() {
      return "Swedish";
    },
    get$taDisplayName() {
      return "Tamil";
    },
    get$teDisplayName() {
      return "Telugu";
    },
    get$tgDisplayName() {
      return "Tajik";
    },
    get$thDisplayName() {
      return "Thai";
    },
    get$tiDisplayName() {
      return "Tigrinya";
    },
    get$boDisplayName() {
      return "Tibetan Standard, Tibetan, Central";
    },
    get$tkDisplayName() {
      return "Turkmen";
    },
    get$tlDisplayName() {
      return "Tagalog";
    },
    get$tnDisplayName() {
      return "Tswana";
    },
    get$toDisplayName() {
      return "Tonga (Tonga Islands)";
    },
    get$trDisplayName() {
      return "Turkish";
    },
    get$tsDisplayName() {
      return "Tsonga";
    },
    get$ttDisplayName() {
      return "Tatar";
    },
    get$twDisplayName() {
      return "Twi";
    },
    get$tyDisplayName() {
      return "Tahitian";
    },
    get$ugDisplayName() {
      return "Uighur, Uyghur";
    },
    get$ukDisplayName() {
      return "Ukrainian";
    },
    get$urDisplayName() {
      return "Urdu";
    },
    get$uzDisplayName() {
      return "Uzbek";
    },
    get$veDisplayName() {
      return "Venda";
    },
    get$viDisplayName() {
      return "Vietnamese";
    },
    get$voDisplayName() {
      return "Volap\xfck";
    },
    get$waDisplayName() {
      return "Walloon";
    },
    get$cyDisplayName() {
      return "Welsh";
    },
    get$woDisplayName() {
      return "Wolof";
    },
    get$fyDisplayName() {
      return "Western Frisian";
    },
    get$xhDisplayName() {
      return "Xhosa";
    },
    get$yiDisplayName() {
      return "Yiddish";
    },
    get$yoDisplayName() {
      return "Yoruba";
    },
    get$zaDisplayName() {
      return "Zhuang, Chuang";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$zuDisplayName() {
      return "Zulu";
    },
    get$hawDisplayName() {
      return "Hawaiian";
    },
    get$hmnDisplayName() {
      return "Hmong";
    },
    get$multiDisplayName() {
      return "Multi";
    },
    get$cebDisplayName() {
      return "Cebuano";
    },
    get$dzDisplayName() {
      return "Dzongkha";
    },
    get$iwDisplayName() {
      return "Hebrew";
    },
    get$jwDisplayName() {
      return "Javanese";
    },
    get$moDisplayName() {
      return "Moldavian";
    },
    get$shDisplayName() {
      return "Serbo-Croatian";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$declinedInvitation() {
      return "Declined invitation";
    },
    get$acceptedInvitation() {
      return "Accepted invitation";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    get$pleaseEnterANumber() {
      return "L\xfctfen 0'dan b\xfcy\xfck bir say\u0131 girin";
    },
    get$archiveRoomDescription() {
      return "Sohbet ar\u015five ta\u015f\u0131nacak. Di\u011fer kullan\u0131c\u0131lar\u0131 sohbeti terk etti\u011finizi g\xf6rebilecek.";
    },
    get$roomUpgradeDescription() {
      return "Sohbet daha sonra yeni oda s\xfcr\xfcm\xfcyle yeniden olu\u015fturulacakt\u0131r. T\xfcm kat\u0131l\u0131mc\u0131lara yeni sohbete ge\xe7meleri gerekti\u011fi bildirilecektir. Oda s\xfcr\xfcmleri hakk\u0131nda daha fazla bilgiyi https://spec.matrix.org/latest/rooms/ adresinde bulabilirsiniz.";
    },
    get$removeDevicesDescription() {
      return "Bu ayg\u0131ttan \xe7\u0131k\u0131\u015f yapacaks\u0131n\u0131z ve art\u0131k mesaj alamayacaks\u0131n\u0131z.";
    },
    get$banUserDescription() {
      return "Kullan\u0131c\u0131 sohbetten yasaklanacak ve yasa\u011f\u0131 kald\u0131r\u0131lana kadar sohbete tekrar giremeyecek.";
    },
    get$unbanUserDescription() {
      return "Kullan\u0131c\u0131 denerse sohbete tekrar girebilecektir.";
    },
    get$kickUserDescription() {
      return "Kullan\u0131c\u0131 sohbetten at\u0131l\u0131r ancak yasaklanmaz. Herkese a\xe7\u0131k sohbetlerde kullan\u0131c\u0131 istedi\u011fi zaman yeniden kat\u0131labilir.";
    },
    get$makeAdminDescription() {
      return "Bu kullan\u0131c\u0131y\u0131 y\xf6netici yapt\u0131ktan sonra, sizinle ayn\u0131 izinlere sahip olaca\u011f\u0131 i\xe7in bunu geri alamayabilirsiniz.";
    },
    get$yourGlobalUserIdIs() {
      return "Genel kullan\u0131c\u0131 kimli\u011finiz: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Ne yaz\u0131k ki "' + query + '" ile kullan\u0131c\u0131 bulunamad\u0131. L\xfctfen bir yaz\u0131m hatas\u0131 yap\u0131p yapmad\u0131\u011f\u0131n\u0131z\u0131 kontrol edin.';
    },
    get$knocking() {
      return "T\u0131klat";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "Sohbet " + server + " \xfczerinde aranarak ke\u015ffedilebilir";
    },
    get$searchChatsRooms() {
      return "#sohbetler, @kullan\u0131c\u0131lar... i\xe7in arama yap\u0131n";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$nothingFound() {
      return "Hi\xe7bir \u015fey bulunamad\u0131...";
    },
    get$wrongRecoveryKey() {
      return "\xdczg\xfcn\xfcm... bu do\u011fru kurtarma anahtar\u0131 gibi g\xf6r\xfcnm\xfcyor.";
    },
    get$startConversation() {
      return "G\xf6r\xfc\u015fme ba\u015flat";
    },
    get$commandHint_sendraw() {
      return "Ham JSON g\xf6nder";
    },
    get$searchForUsers() {
      return "@kullan\u0131c\u0131lar\u0131 ara...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "L\xfctfen ge\xe7erli parolan\u0131z\u0131 girin";
    },
    get$newPassword() {
      return "Yeni parola";
    },
    get$pleaseChooseAStrongPassword() {
      return "L\xfctfen g\xfc\xe7l\xfc bir parola se\xe7in";
    },
    get$passwordsDoNotMatch() {
      return "Parolalar e\u015fle\u015fmiyor";
    },
    get$passwordIsWrong() {
      return "Girdi\u011finiz parola yanl\u0131\u015f";
    },
    get$publicChatAddresses() {
      return "Herkese a\xe7\u0131k sohbet adresleri";
    },
    get$createNewAddress() {
      return "Yeni adres olu\u015ftur";
    },
    get$joinSpace() {
      return "Alana kat\u0131l";
    },
    get$publicSpaces() {
      return "Herkese a\xe7\u0131k alanlar";
    },
    get$decline() {
      return "Reddet";
    },
    get$thisDevice() {
      return "Bu ayg\u0131t:";
    },
    get$initAppError() {
      return "Uygulama ba\u015flat\u0131l\u0131rken bir hata olu\u015ftu";
    },
    get$userRole() {
      return "Kullan\u0131c\u0131 rol\xfc";
    },
    searchIn$1(chat) {
      return '"' + chat + '" sohbeti i\xe7inde ara...';
    },
    get$searchMore() {
      return "Daha fazla ara...";
    },
    get$gallery() {
      return "Galeri";
    },
    get$files(_) {
      return "Dosyalar";
    },
    sessionLostBody$2(url, error) {
      return "Oturumunuz kayboldu. L\xfctfen bu hatay\u0131 " + url + string$._adres + error;
    },
    restoreSessionBody$2(url, error) {
      return "Uygulama \u015fimdi oturumunuzu yedekten geri y\xfcklemeye \xe7al\u0131\u015f\u0131yor. L\xfctfen bu hatay\u0131 " + url + string$._adres + error;
    },
    forwardMessageTo$1(roomName) {
      return "Mesajlar " + roomName + " ki\u015fisine iletilsin mi?";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$sendReadReceipts() {
      return "Okundu bilgisi g\xf6nder";
    },
    get$sendTypingNotificationsDescription() {
      return "Sohbetteki di\u011fer kat\u0131l\u0131mc\u0131lar yeni bir mesaj yazd\u0131\u011f\u0131n\u0131z\u0131 g\xf6rebilir.";
    },
    get$sendReadReceiptsDescription() {
      return "Sohbetteki di\u011fer kat\u0131l\u0131mc\u0131lar bir mesaj\u0131 okudu\u011funuzu g\xf6rebilir.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Di\u011fer ayg\u0131t\u0131 do\u011frula";
    },
    get$verifyOtherDeviceDescription() {
      return "Ba\u015fka bir ayg\u0131t\u0131 do\u011frulad\u0131\u011f\u0131n\u0131zda, bu ayg\u0131tlar anahtarlar\u0131 de\u011fi\u015f toku\u015f ederek genel g\xfcvenli\u011finizi art\u0131r\u0131r. \ud83d\udcaa Bir do\u011frulama ba\u015flatt\u0131\u011f\u0131n\u0131zda, her iki ayg\u0131ttaki uygulamada bir a\xe7\u0131l\u0131r pencere g\xf6r\xfcnecektir. Orada birbirleriyle kar\u015f\u0131la\u015ft\u0131rman\u0131z gereken bir dizi emoji veya say\u0131 g\xf6receksiniz. Do\u011frulamaya ba\u015flamadan \xf6nce her iki ayg\u0131t\u0131n da elinizin alt\u0131nda olmas\u0131 en iyisidir. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " anahtar do\u011frulamay\u0131 kabul etti";
    },
    canceledKeyVerification$1(sender) {
      return sender + " anahtar do\u011frulamay\u0131 iptal etti";
    },
    completedKeyVerification$1(sender) {
      return sender + " anahtar do\u011frulamay\u0131 tamamlad\u0131";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " anahtar do\u011frulama i\xe7in haz\u0131r";
    },
    requestedKeyVerification$1(sender) {
      return sender + " anahtar do\u011frulama istedi";
    },
    startedKeyVerification$1(sender) {
      return sender + " anahtar do\u011frulama ba\u015flatt\u0131";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$stickers() {
      return "\xc7\u0131kartmalar";
    },
    get$discover() {
      return "Ke\u015ffet";
    },
    get$commandHint_ignore() {
      return "Verilen matrix kimli\u011fini g\xf6rmezden gel";
    },
    get$commandHint_unignore() {
      return "Verilen matrix kimli\u011fini g\xf6rmezden gelmeyi iptal et";
    },
    get$accuracy(_) {
      return "Accuracy";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run language assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run language assistance after typing messages";
    },
    get$leaveRoomDescription() {
      return "The chat will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$leaveSpaceDescription() {
      return "All chats within this space will be moved to the archive. Other users will be able to see that you have left the space.";
    },
    get$onlyAdminDescription() {
      return "Since there are no other admins, all other participants will also be removed.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$spaceCapacity() {
      return "Space capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$spaceCapacityHasBeenChanged() {
      return "Space capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of non-admins.";
    },
    get$spaceCapacitySetTooLow() {
      return "Space capacity cannot be set below the current number of non-admins.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of non-admins allowed in a chat.";
    },
    get$spaceCapacityExplanation() {
      return "Space capacity limits the number of non-admins allowed in a space.";
    },
    get$chatExceedsCapacity() {
      return "This chat exceeds its capacity.";
    },
    get$spaceExceedsCapacity() {
      return "This space exceeds its capacity.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    thereAreCountUsersBlocked$1(count) {
      return "\u015eu anda " + count + " engellenen kullan\u0131c\u0131 var.";
    },
    get$restricted() {
      return "K\u0131s\u0131tl\u0131";
    },
    get$knockRestricted() {
      return "T\u0131klatma k\u0131s\u0131tl\u0131";
    },
    get$createNewSpace() {
      return "Yeni alan";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "See how well you did by looking at your Accuracy and Words Per Minute scores";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$continueText() {
      return "Continue";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$sendCanceled() {
      return "G\xf6nderme iptal edildi";
    },
    goToSpace$1(space) {
      return "Alana git: " + space;
    },
    get$markAsUnread() {
      return "Okunmad\u0131 olarak i\u015faretle";
    },
    userLevel$1(level) {
      return "" + level + " - Kullan\u0131c\u0131";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderat\xf6r";
    },
    adminLevel$1(level) {
      return "" + level + " - Y\xf6netici";
    },
    get$changeGeneralChatSettings() {
      return "Genel sohbet ayarlar\u0131n\u0131 de\u011fi\u015ftir";
    },
    get$inviteOtherUsers() {
      return "Di\u011fer kullan\u0131c\u0131lar\u0131 bu sohbete davet et";
    },
    get$changeTheChatPermissions() {
      return "Sohbet izinlerini de\u011fi\u015ftir";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Sohbet ge\xe7mi\u015finin g\xf6r\xfcn\xfcrl\xfc\u011f\xfcn\xfc de\u011fi\u015ftir";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Ana herkese a\xe7\u0131k sohbet adresini de\u011fi\u015ftir";
    },
    get$sendRoomNotifications() {
      return "@oda bildirimleri g\xf6nder";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Sohbetin a\xe7\u0131klamas\u0131n\u0131 de\u011fi\u015ftir";
    },
    get$chatPermissionsDescription() {
      return "Bu sohbette belirli eylemler i\xe7in hangi g\xfc\xe7 d\xfczeyinin gerekli oldu\u011funu tan\u0131mlay\u0131n. 0, 50 ve 100 g\xfc\xe7 d\xfczeyleri genellikle kullan\u0131c\u0131lar\u0131, moderat\xf6rleri ve y\xf6neticileri temsil eder, ancak herhangi bir derecelendirme m\xfcmk\xfcnd\xfcr.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 G\xfcncelleme " + version + " kuruldu!";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Uyumlu bir ana sunucu gibi g\xf6r\xfcnm\xfcyor. Yanl\u0131\u015f URL mi?";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$unlockedLanguageTools() {
      return "You\u2019ve unlocked the language tools for this message. Try them out by clicking below!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$calculatingFileSize() {
      return "Dosya boyutu hesaplan\u0131yor...";
    },
    get$prepareSendingAttachment() {
      return "Ek g\xf6nderilmeye haz\u0131rlan\u0131yor...";
    },
    get$sendingAttachment() {
      return "Ek g\xf6nderiliyor...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Ek " + index + " / " + $length + " g\xf6nderiliyor...";
    },
    serverLimitReached$1(seconds) {
      return "Sunucu s\u0131n\u0131r\u0131na ula\u015f\u0131ld\u0131! " + seconds + " saniye bekleniyor...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Not: T\xfcm ayg\u0131tlar\u0131n\u0131z\u0131 sohbet yedeklemesine ba\u011flad\u0131\u011f\u0131n\u0131zda, otomatik olarak do\u011frulan\u0131rlar.";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$blur(_) {
      return "Blur:";
    },
    get$opacity(_) {
      return "Opacity:";
    },
    get$setWallpaper() {
      return "Set wallpaper";
    },
    get$noContactInformationProvided() {
      return "Server does not provide any valid contact information";
    },
    get$contactServerAdmin() {
      return "Contact server admin";
    },
    get$contactServerSecurity() {
      return "Contact server security";
    },
    get$supportPage() {
      return "Support page";
    },
    get$serverInformation() {
      return "Server information:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Bold text";
    },
    get$italicText() {
      return "Italic text";
    },
    get$strikeThrough() {
      return "Strikethrough";
    },
    get$pleaseFillOut() {
      return "Please fill out";
    },
    get$invalidUrl() {
      return "Invalid url";
    },
    get$addLink() {
      return "Add link";
    },
    get$unableToJoinChat() {
      return "Unable to join chat. Maybe the other party has already closed the conversation.";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$mandatoryUpdateRequired() {
      return "Mandatory Update Required";
    },
    get$updateAvailable() {
      return "Update Available";
    },
    get$mandatoryUpdateRequiredDesc() {
      return "A new version of the app is required to continue. Please update now to proceed.";
    },
    get$updateAvailableDesc() {
      return "A new version of the app is available. Update now for the latest features and improvements!";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language";
    },
    get$couldNotFindTTS() {
      return "We couldn't find a text-to-speech engine for your current target language. ";
    },
    get$ttsInstructionsHyperlink() {
      return "Click here to view instructions for downloading a new voice on your device.";
    },
    get$currentVersion() {
      return "Current Version";
    },
    get$latestVersion() {
      return "Latest Version";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseAgreeToTOS() {
      return "Please agree to the Terms and Conditions";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "Click on a word or the buttons below to learn more";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$noEmojiSelectedTooltip() {
      return "No emoji selected";
    },
    get$writingExercisesTooltip() {
      return "Writing activities";
    },
    get$listeningExercisesTooltip() {
      return "Listening activities";
    },
    get$readingExercisesTooltip() {
      return "Reading activities";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$formsNotFound() {
      return "Forms could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$downloadSpaceAnalytics() {
      return "Download space analytics";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    pickAnEmoji$2(lemma, partOfSpeech) {
      return "What's your favorite emoji for '" + lemma + "'?";
    },
    get$lemmaMeaningInstructionsBody() {
      return "Above is the meaning of the lemma. Double-click to edit.";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$notInClass() {
      return "Not in a class!";
    },
    get$noClassCode() {
      return "No class code!";
    },
    get$chooseCorrectLabel() {
      return "Choose the correct label.";
    },
    get$activityPlannerTitle() {
      return "Activity Planner";
    },
    get$topicLabel() {
      return "Topic";
    },
    get$topicPlaceholder() {
      return "Choose a topic...";
    },
    get$modeLabel() {
      return "Mode";
    },
    get$modePlaceholder() {
      return "Choose a mode...";
    },
    get$learningObjectiveLabel() {
      return "Learning Objective";
    },
    get$learningObjectivePlaceholder() {
      return "Choose a learning objective...";
    },
    get$mediaLabel() {
      return "Media students should share";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR Level";
    },
    get$generateActivitiesButton() {
      return "Generate Activities";
    },
    get$launchActivityButton() {
      return "Launch Activity";
    },
    get$image(_) {
      return "Image";
    },
    get$video(_) {
      return "Video";
    },
    get$nan() {
      return "Not applicable";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete the highlighted word activities to unlock";
    },
    get$myBookmarkedActivities() {
      return "My Bookmarked Activities";
    },
    get$noBookmarkedActivities() {
      return "No bookmarked activities";
    },
    get$noLemmasFound() {
      return "No lemmas found";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.L10nTr, C.L10n);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nTr":{"L10n":[]}}'));
  var string$ = {
    _adres: " adresinde geli\u015ftiricilere bildirin. Hata mesaj\u0131: "
  };
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_284", e: "endPart", h: h});
})($__dart_deferred_initializers__, "pw3ed4cYlTrpFbaSFy45C54szq4=");
;
//# sourceMappingURL=main.dart.js_284.part.js.map
