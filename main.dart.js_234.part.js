// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.6.1.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_234", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nIt$() {
      return new A.L10nIt(B.canonicalizedLocale("it"));
    },
    L10nIt: function L10nIt(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[51];
  A = hunkHelpers.updateHolder(holdersList[31], A);
  A.L10nIt.prototype = {
    get$alwaysUse24HourFormat() {
      return "disattivato";
    },
    get$repeatPassword() {
      return "Ripeti password";
    },
    get$notAnImage() {
      return "Non \xe8 un file immagine.";
    },
    get$remove(_) {
      return "Rimuovi";
    },
    get$importNow() {
      return "Importa ora";
    },
    get$importEmojis() {
      return "Importa Emoji";
    },
    get$importFromZipFile() {
      return "Importa da file .zip";
    },
    get$exportEmotePack() {
      return "Esporta pack di Emote come .zip";
    },
    get$replace(_) {
      return "Sostituisci";
    },
    aboutHomeserver$1(homeserver) {
      return "Informazioni su " + homeserver;
    },
    get$accept(_) {
      return "Accetta";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " ha accettato l'invito";
    },
    get$account() {
      return "Account";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " ha abilitato la crittografia end to end";
    },
    get$addEmail() {
      return "Aggiungi e-mail";
    },
    get$confirmMatrixId() {
      return "Per eliminare il tuo account, conferma il tuo Matrix ID.";
    },
    supposedMxid$1(mxid) {
      return "Dovrebbe essere " + mxid;
    },
    get$addToSpace() {
      return "Aggiungi a uno spazio";
    },
    get$admin() {
      return "Amministratore";
    },
    get$alias() {
      return "alias";
    },
    get$all() {
      return "Tutto";
    },
    get$commandHint_googly() {
      return "Invia degli occhi finti";
    },
    get$commandHint_cuddle() {
      return "Invia una coccola";
    },
    get$commandHint_hug() {
      return "Invia un abbraccio";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " ti ha inviato degli occhi finti";
    },
    cuddleContent$1(senderName) {
      return senderName + " ti coccola";
    },
    hugContent$1(senderName) {
      return senderName + " ti abbraccia";
    },
    answeredTheCall$1(senderName) {
      return senderName + " ha risposto alla chiamata";
    },
    get$anyoneCanJoin() {
      return "Tutti possono partecipare";
    },
    get$archive() {
      return "Archivia";
    },
    get$areGuestsAllowedToJoin() {
      return "Gli utenti ospiti possono partecipare";
    },
    get$areYouSure() {
      return "Sei sicuro/a?";
    },
    get$areYouSureYouWantToLogout() {
      return "Sei sicuro/a di voler uscire?";
    },
    get$askSSSSSign() {
      return "Per far accedere l'altra persona, per favore inserisci la tua frase segreta o chiave di recupero.";
    },
    askVerificationRequest$1(username) {
      return "Accettare questa richiesta di verifica da " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "L'homeserver supporta i tipi di accesso:\n" + serverVersions + "\nMa questa applicazione supporta solo:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Invia notifiche di scrittura";
    },
    get$swipeRightToLeftToReply() {
      return "Scorri da destra a sinistra per rispondere";
    },
    get$sendOnEnter() {
      return "Invia quando premi Invio";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "L'homeserver supporta le versioni Spec:\n" + serverVersions + "\nMa questa applicazione supporta solo " + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " chat e " + participants + " partecipanti";
    },
    get$noMoreChatsFound() {
      return "Non sono state trovate altre chat...";
    },
    get$noChatsFoundHere() {
      return "Nessuna chat trovata. Inizia una nuova chat con qualcuno usando il pulsante qui sotto. \u2935\ufe0f";
    },
    get$unread() {
      return "Non letti";
    },
    get$space() {
      return "Spazio";
    },
    get$spaces() {
      return "Spazi";
    },
    get$banFromChat() {
      return "Bandisci dalla chat";
    },
    get$banned() {
      return "Bandito";
    },
    bannedUser$2(username, targetName) {
      return username + " ha bandito " + targetName;
    },
    get$blockDevice() {
      return "Blocca dispositivo";
    },
    get$blocked() {
      return "Bloccato";
    },
    get$botMessages() {
      return "Messaggi bot";
    },
    get$cancel(_) {
      return "Annulla";
    },
    cantOpenUri$1(uri) {
      return "Impossibile aprire l'URI " + uri;
    },
    get$changeDeviceName() {
      return "Cambia nome dispositivo";
    },
    changedTheChatAvatar$1(username) {
      return username + " ha cambiato l'avatar della discussione";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " ha cambiato la descrizione della chat in: \xab" + description + "\xbb";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " ha cambiato il nome della discussione in: \xab" + chatname + "\xbb";
    },
    changedTheChatPermissions$1(username) {
      return username + " ha cambiato i permessi della chat";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " ha cambiato nome in: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " ha cambiato le regole di accesso per ospiti";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " ha cambiato le regole di accesso per ospiti con: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " ha cambiato la visibilit\xe0 della cronologia";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " ha cambiato la visibilit\xe0 della cronologia in: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " ha cambiato le regole per unirsi";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " ha cambiato le regole per unirsi in: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " ha cambiato il suo avatar";
    },
    changedTheRoomAliases$1(username) {
      return username + " ha cambiato il nome delle stanze";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " ha cambiato il link di invito";
    },
    get$changePassword() {
      return "Cambia la password";
    },
    get$changeTheme() {
      return "Cambia il tuo stile";
    },
    get$changeYourAvatar() {
      return "Cambia il tuo avatar";
    },
    get$channelCorruptedDecryptError() {
      return "La crittografia \xe8 corrotta";
    },
    get$chat() {
      return "Chat";
    },
    get$chatDetails() {
      return "Dettagli chat";
    },
    get$chats() {
      return "Discussioni";
    },
    get$chooseAStrongPassword() {
      return "Scegli una password complessa";
    },
    get$clearArchive() {
      return "Cancella archivio";
    },
    get$close(_) {
      return "Chiudi";
    },
    get$commandHint_markasdm() {
      return "Contrassegna questo Matrix ID come stanza di messaggi diretti";
    },
    get$commandHint_markasgroup() {
      return "Segna come gruppo";
    },
    get$commandHint_ban() {
      return "Banna l'utente specificato da questa stanza";
    },
    get$commandHint_clearcache() {
      return "Pulisci cache";
    },
    get$commandHint_create() {
      return "Crea una chat di gruppo vuota\nUtilizza --no-encryption per disattivare la criptazione";
    },
    get$commandHint_discardsession() {
      return "Scarta sessione";
    },
    get$commandHint_dm() {
      return "Avvia una chat diretta\nUsa --no-encryption per disabilitare la crittografia";
    },
    get$commandHint_html() {
      return "Invia testo formattato in HTML";
    },
    get$commandHint_invite() {
      return "Invia l utente fornito in questa stanza";
    },
    get$commandHint_join() {
      return "Unisciti alla stanza fornita";
    },
    get$commandHint_kick() {
      return "Rimuovi l'utente fornito da questa stanza";
    },
    get$commandHint_leave() {
      return "Abbandona questa stanza";
    },
    get$commandHint_me() {
      return "Descriviti";
    },
    get$commandHint_myroomavatar() {
      return "Importa la foto profilo per questa stanza ( mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Imposta il nome visualizzato per questa stanza";
    },
    get$commandHint_op() {
      return "Imposta il livello di privilegi dell'utente specificato (predefinito: 50)";
    },
    get$commandHint_plain() {
      return "Invia testo non formattato";
    },
    get$commandHint_react() {
      return "Rispondi con una reazione";
    },
    get$commandHint_send() {
      return "Invia testo";
    },
    get$commandHint_unban() {
      return "Sbanna l'utente fornito da questa stanza";
    },
    get$commandInvalid() {
      return "Comando non valido";
    },
    commandMissing$1(command) {
      return command + " non \xe8 un comando.";
    },
    get$compareEmojiMatch() {
      return "Per favore confronta gli emoji";
    },
    get$compareNumbersMatch() {
      return "Per favore confronta i numeri";
    },
    get$configureChat() {
      return "Configura la discussione";
    },
    get$confirm(_) {
      return "Conferma";
    },
    get$containsDisplayName() {
      return "Contiene nome visibile";
    },
    get$containsUserName() {
      return "Contiene nome utente";
    },
    get$contentHasBeenReported() {
      return "Il contenuto \xe8 stato segnalato agli amministratori del server";
    },
    get$copiedToClipboard() {
      return "Copiato negli Appunti";
    },
    get$copy(_) {
      return "Copia";
    },
    couldNotDecryptMessage$1(error) {
      return "Impossibile decriptare messaggio: " + error;
    },
    countParticipants$1(count) {
      return "" + count + " partecipanti";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " ha creato la chat";
    },
    get$createGroup() {
      return "Crea gruppo";
    },
    get$createNewSpace() {
      return "Nuovo spazio";
    },
    get$currentlyActive() {
      return "Attualmente attivo";
    },
    get$darkTheme() {
      return "Scuro";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Disabiliter\xe0 il tuo account. Non puoi tornare indietro! Sei sicuro/a?";
    },
    get$defaultPermissionLevel() {
      return "Livello di autorizzazione predefinito per i nuovi utenti";
    },
    get$$delete(_) {
      return "Cancella";
    },
    get$deleteAccount() {
      return "Elimina l'account";
    },
    get$deleteMessage() {
      return "Elimina il messaggio";
    },
    get$devices() {
      return "Dispositivi";
    },
    get$directChats() {
      return "Chat dirette";
    },
    get$allRooms() {
      return "Tutte le chat di gruppo";
    },
    get$displaynameHasBeenChanged() {
      return "Il nominativo \xe8 stato cambiato";
    },
    get$downloadFile() {
      return "Scarica il file";
    },
    get$edit() {
      return "Modifica";
    },
    get$editBlockedServers() {
      return "Modifica i server bloccati";
    },
    get$chatPermissions() {
      return "Permessi della chat";
    },
    get$editDisplayname() {
      return "Modifica il nominativo";
    },
    get$editRoomAliases() {
      return "Modifica gli alias della stanza";
    },
    get$editRoomAvatar() {
      return "Modifica l'avatar della stanza";
    },
    get$emoteExists() {
      return "L'emote gi\xe0 esiste!";
    },
    get$emoteInvalid() {
      return "Shortcode emote invalido!";
    },
    get$emoteKeyboardNoRecents() {
      return "Le emoticon recentemente usate appariranno qui...";
    },
    get$emotePacks() {
      return "Pacchetti emotes della stanza";
    },
    get$globalChatId() {
      return "ID chat globale";
    },
    get$accessAndVisibility() {
      return "Accesso e visibilit\xe0";
    },
    get$customEmojisAndStickers() {
      return "Emoji e adesivi personalizzati";
    },
    get$emoteShortcode() {
      return "Scorciatoia emote";
    },
    get$emoteWarnNeedToPick() {
      return "Devi scegliere una scorciatoia emote e aggiungere un immagine!";
    },
    get$emptyChat() {
      return "Discussione vuota";
    },
    get$enableEmotesGlobally() {
      return "Abilita i pacchetti emotes globalmente";
    },
    get$enableEncryption() {
      return "Abilita la crittografia";
    },
    get$encrypted() {
      return "Crittografato";
    },
    get$encryptionNotEnabled() {
      return "Crittografia non abilitata";
    },
    endedTheCall$1(senderName) {
      return senderName + " \xe8 entrato in chiamata";
    },
    get$enterAnEmailAddress() {
      return "Inserisci un indirizzo e-mail";
    },
    errorObtainingLocation$1(error) {
      return "Errore cercando di ottenere la posizione: " + error;
    },
    get$extremeOffensive() {
      return "Estremamente offensivo";
    },
    get$fontSize(_) {
      return "Dimensione carattere";
    },
    get$forward(_) {
      return "Inoltra";
    },
    get$fromJoining() {
      return "Dall'adesione";
    },
    get$fromTheInvitation() {
      return "Dall'invito";
    },
    get$goToTheNewRoom() {
      return "Vai nella nuova stanza";
    },
    get$chatDescription() {
      return "Descrizione della chat";
    },
    get$groups() {
      return "Gruppi";
    },
    get$guestsAreForbidden() {
      return "Gli ospiti sono vietati";
    },
    get$guestsCanJoin() {
      return "Gli ospiti possono partecipare";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " ha ritirato l'invito per " + targetName;
    },
    get$help() {
      return "Aiuto";
    },
    get$hideRedactedMessages() {
      return "Mostra i messaggi rimossi";
    },
    get$hideRedactedMessagesBody() {
      return "Se qualcuno rimuove un messaggio, il messaggio non sar\xe0 pi\xf9 visibile nella chat.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Nascondi formati di messaggi non validi o sconosciuti";
    },
    get$howOffensiveIsThisContent() {
      return "Quanto \xe8 offensivo questo contenuto?";
    },
    get$block() {
      return "Blocca";
    },
    get$blockedUsers() {
      return "Utenti bloccati";
    },
    get$blockListDescription() {
      return "Puoi bloccare gli utenti che ti disturbano. Non sarai pi\xf9 in grado di ricevere messaggi o inviti alle stanze dalle persone che hai bloccato.";
    },
    get$blockUsername() {
      return "Nome utente da ignorare";
    },
    get$iHaveClickedOnLink() {
      return "Ho cliccato sul collegamento";
    },
    get$incorrectPassphraseOrKey() {
      return "Frase segrata o chiave di ripristino errate";
    },
    get$inviteContact() {
      return "Invita contatto";
    },
    get$noChatDescriptionYet() {
      return "La descrizione della chat non \xe8 ancora stata creata.";
    },
    get$tryAgain() {
      return "Riprova";
    },
    get$invited() {
      return "Invitato/a";
    },
    get$redactMessageDescription() {
      return "Questo messaggio sar\xe0 rimosso per tutti i partecipanti di questa conversazione. Questa operazione non pu\xf2 essere annullata.";
    },
    get$optionalRedactReason() {
      return "(Opzionale) Ragione per rimuovere questo messaggio...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " ha invitato " + targetName;
    },
    get$invitedUsersOnly() {
      return "Solo utenti invitati";
    },
    get$inviteForMe() {
      return "Invita per me";
    },
    inviteText$2(username, link) {
      return username + " ti ha invitato/a a FluffyChat.\n1. Visita fluffychat.im e installa l'applicazione\n2. Iscriviti o accedi\n3. Apri il collegamento di invito: \n " + link;
    },
    get$isTyping() {
      return "sta scrivendo\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " si \xe8 unito/a alla chat";
    },
    get$joinRoom() {
      return "Unisciti alla stanza";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " ha espulso " + targetName;
    },
    get$kickFromChat() {
      return "Espelli dalla chat";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Ultima attivit\xe0: " + localizedTimeShort;
    },
    get$leave() {
      return "Abbandona";
    },
    get$leftTheChat() {
      return "Ha abbandonato la chat";
    },
    get$lightTheme() {
      return "Chiaro";
    },
    loadCountMoreParticipants$1(count) {
      return "Carica altri " + count + " partecipanti";
    },
    get$dehydrate() {
      return "Esporta la sessione e cancella il dispositivo";
    },
    get$dehydrateWarning() {
      return "Questa azione non pu\xf2 essere annullata. Assicurarsi di aver salvato il file di backup.";
    },
    get$dehydrateTor() {
      return "Utenti TOR: Esporta la sessione";
    },
    get$dehydrateTorLong() {
      return "Per gli utenti TOR, \xe8 raccomandato esportare la sessione prima di chiudere la finestra.";
    },
    get$loadingPleaseWait() {
      return "Caricamento\u2026 Attendere prego.";
    },
    get$loadMore() {
      return "Carica di pi\xf9\u2026";
    },
    get$locationDisabledNotice() {
      return "I servizi di localizzazione sono disabilitati. Per favore abilitali per poter condividere la tua posizione.";
    },
    get$locationPermissionDeniedNotice() {
      return "Permesso per accedere alla posizione negato. Per favore concedilo per essere in grado di condividere la tua posizione.";
    },
    get$logout() {
      return "Esci";
    },
    get$memberChanges() {
      return "Cambiamenti di membri";
    },
    get$mention() {
      return "Menzione";
    },
    get$messages() {
      return "Messaggi";
    },
    get$messagesStyle() {
      return "Messaggi:";
    },
    get$moderator() {
      return "Moderatore";
    },
    get$newChat() {
      return "Nuova discussione";
    },
    get$newVerificationRequest() {
      return "Nuova richiesta di verifica!";
    },
    get$next(_) {
      return "Avanti";
    },
    get$no() {
      return "No";
    },
    get$noConnectionToTheServer() {
      return "Nessuna connessione al server";
    },
    get$noEmotesFound() {
      return "Nessun emote trovato. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Condividi link d'invito";
    },
    get$noPasswordRecoveryDescription() {
      return "Non hai ancora aggiunto un modo per recuperare la tua password.";
    },
    get$noPermission() {
      return "Nessuna autorizzazione";
    },
    get$noRoomsFound() {
      return "Nessuna stanza trovata\u2026";
    },
    get$notifications() {
      return "Notifiche";
    },
    get$notificationsEnabledForThisAccount() {
      return "Notifiche abilitate per questo account";
    },
    get$obtainingLocation() {
      return "Ottengo la posizione\u2026";
    },
    get$offensive() {
      return "Offensivo";
    },
    get$ok() {
      return "Ok";
    },
    get$oopsSomethingWentWrong() {
      return "Ops, qualcosa \xe8 andato storto\u2026";
    },
    get$oneClientLoggedOut() {
      return "Uno dei tuoi client \xe8 stato disconnesso";
    },
    get$addAccount() {
      return "Aggiungi account";
    },
    get$enableMultiAccounts() {
      return "(BETA) Abilita account multipli su questo dispositivo";
    },
    get$openInMaps() {
      return "Apri in maps";
    },
    get$link() {
      return "Link";
    },
    get$serverRequiresEmail() {
      return "Questo server ha bisogno di validare la tua email per la registrazione.";
    },
    get$or() {
      return "O";
    },
    get$participant() {
      return "Partecipante";
    },
    get$passphraseOrKey() {
      return "frase segreta o chiave di recupero";
    },
    get$password(_) {
      return "Password";
    },
    get$passwordForgotten() {
      return "Password dimenticata";
    },
    get$passwordHasBeenChanged() {
      return "La password \xe8 stata cambiata";
    },
    get$overview() {
      return "Panoramica";
    },
    get$notifyMeFor() {
      return "Avvisami per";
    },
    get$passwordRecoverySettings() {
      return "Impostazioni di recupero password";
    },
    get$passwordRecovery() {
      return "Recupero della password";
    },
    get$pickImage() {
      return "Scegli un'immagine";
    },
    get$pin() {
      return "Fissa";
    },
    get$pleaseChoose() {
      return "Si prega di scegliere";
    },
    get$pleaseEnterYourPassword() {
      return "Inserisci la tua password";
    },
    get$pleaseEnterYourPin() {
      return "Per favore inserisci il tuo PIN";
    },
    get$pleaseEnterYourUsername() {
      return "Inserisci il tuo nome utente";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Segui le istruzioni sul sito web e tocca Avanti.";
    },
    get$privacy() {
      return "Privacy";
    },
    get$reason(_) {
      return "Motivo";
    },
    redactedBy$1(username) {
      return "Rimosso da " + username;
    },
    get$directChat() {
      return "Chat diretta";
    },
    redactedByBecause$2(username, reason) {
      return "Rimosso da " + username + ' per: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " ha eliminato un evento";
    },
    get$redactMessage() {
      return "Elimina un messaggio";
    },
    get$reject() {
      return "Rifiuta";
    },
    rejectedTheInvitation$1(username) {
      return username + " ha rifiutato l'invito";
    },
    get$removeAllOtherDevices() {
      return "Rimuovi tutti gli altri dispositivi";
    },
    get$unbanFromChat() {
      return "Rimuovi il ban dalla chat";
    },
    get$removeYourAvatar() {
      return "Rimuovi il tuo avatar";
    },
    get$replaceRoomWithNewerVersion() {
      return "Sostituisci la stanza con la versione pi\xf9 recente";
    },
    get$reply(_) {
      return "Rispondi";
    },
    get$reportMessage() {
      return "Segnala il messaggio";
    },
    get$roomHasBeenUpgraded() {
      return "La stanza \xe8 stata aggiornata";
    },
    get$roomVersion() {
      return "Versione della stanza";
    },
    get$search(_) {
      return "Cerca";
    },
    get$security() {
      return "Sicurezza";
    },
    get$send(_) {
      return "Invia";
    },
    get$sendAMessage() {
      return "Invia un messaggio";
    },
    get$sendAsText() {
      return "Invia come testo";
    },
    get$sendAudio() {
      return "Invia un file audio";
    },
    get$sendFile() {
      return "Invia un file";
    },
    get$sendImage() {
      return "Invia un'immagine";
    },
    sendImages$1(count) {
      return "Invia " + count + " immagine";
    },
    get$sendMessages() {
      return "Invia messaggi";
    },
    get$sendVideo() {
      return "Invia un video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " ha inviato un file";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " ha inviato un file audio";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " ha inviato un'immagine";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " ha inviato un adesivo";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " ha inviato un video";
    },
    sentCallInformations$1(senderName) {
      return senderName + " ha inviato informazioni sulla chiamata";
    },
    get$separateChatTypes() {
      return "Separare le chat dirette e i gruppi";
    },
    get$setAsCanonicalAlias() {
      return "Imposta come alias principale";
    },
    get$setChatDescription() {
      return "Imposta la descrizione della chat";
    },
    get$setPermissionsLevel() {
      return "Imposta il livello di autorizzazione";
    },
    get$settings() {
      return "Impostazioni";
    },
    get$share(_) {
      return "Condividi";
    },
    sharedTheLocation$1(username) {
      return username + " ha condiviso la sua posizione";
    },
    get$shareLocation() {
      return "Condividi posizione";
    },
    get$presencesToggle() {
      return "Mostra i messaggi di stato di altri utenti";
    },
    get$skip(_) {
      return "Ignora";
    },
    get$sourceCode() {
      return "Codice sorgente";
    },
    get$spaceName() {
      return "Nome dello spazio";
    },
    startedACall$1(senderName) {
      return senderName + " ha iniziato una chiamata";
    },
    get$status(_) {
      return "Stato";
    },
    get$submit(_) {
      return "Invia";
    },
    get$synchronizingPleaseWait() {
      return "Sincronizzazione... Attendere prego.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Synchronizing\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "Sistema";
    },
    get$theyDontMatch() {
      return "Non corrispondono";
    },
    get$theyMatch() {
      return "Corrispondono";
    },
    get$tooManyRequestsWarning() {
      return "Troppe richieste. Per favore riprova pi\xf9 tardi!";
    },
    get$tryToSendAgain() {
      return "Prova a inviare di nuovo";
    },
    get$unavailable() {
      return "Non disponibile";
    },
    unbannedUser$2(username, targetName) {
      return username + " ha rimosso il bando di " + targetName;
    },
    get$unblockDevice() {
      return "Sblocca il dispositivo";
    },
    get$unknownDevice() {
      return "Dispositivo sconosciuto";
    },
    get$unknownEncryptionAlgorithm() {
      return "Algoritmo di crittografia sconosciuto";
    },
    unknownEvent$1(type) {
      return "Evento sconosciuto \xab" + type + "\xbb";
    },
    get$unpin() {
      return "Rimuovi";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " e " + username2 + " stanno scrivendo\u2026";
    },
    userIsTyping$1(username) {
      return username + " sta scrivendo\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " ha abbandonato la chat";
    },
    get$username(_) {
      return "Nome utente";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " ha inviato un evento " + type;
    },
    get$unverified() {
      return "Non verificato";
    },
    get$verified() {
      return "Verificato";
    },
    get$verifyStart() {
      return "Avvia la verifica";
    },
    get$verifySuccess() {
      return "Hai verificato con successo!";
    },
    get$verifyTitle() {
      return "Verifica dell'altro account";
    },
    get$visibilityOfTheChatHistory() {
      return "Visibilit\xe0 della cronologia della discussione";
    },
    get$visibleForAllParticipants() {
      return "Visibile a tutti i partecipanti";
    },
    get$visibleForEveryone() {
      return "Visibile a tutti";
    },
    get$voiceMessage() {
      return "Messaggio vocale";
    },
    get$waitingPartnerAcceptRequest() {
      return "In attesa che il partner accetti la richiesta\u2026";
    },
    get$waitingPartnerEmoji() {
      return "In attesa che il partner accetti l'emoji\u2026";
    },
    get$waitingPartnerNumbers() {
      return "In attesa che il partner accetti i numeri\u2026";
    },
    get$warning() {
      return "Attenzione!";
    },
    get$weSentYouAnEmail() {
      return "Ti abbiamo inviato un'e-mail";
    },
    get$whoCanPerformWhichAction() {
      return "Chi pu\xf2 eseguire quale azione";
    },
    get$whyDoYouWantToReportThis() {
      return "Perch\xe9 vuoi segnalarlo?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Con questi indirizzi puoi recuperare la tua password se necessario.";
    },
    get$writeAMessage() {
      return "Scrivi un messaggio\u2026";
    },
    get$yes() {
      return "S\xec";
    },
    get$you() {
      return "Tu";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Non stai pi\xf9 partecipando a questa chat";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Sei stato/a bandito/a da questa chat";
    },
    get$yourPublicKey() {
      return "La tua chiave pubblica";
    },
    get$messageInfo() {
      return "Informazioni del messaggio";
    },
    get$time(_) {
      return "Tempo";
    },
    get$sender() {
      return "Mittente";
    },
    get$openGallery() {
      return "Apri la galleria";
    },
    get$removeFromSpace() {
      return "Rimuovi dallo spazio";
    },
    videoWithSize$1(size) {
      return "Video (" + size + ")";
    },
    get$markAsRead() {
      return "Segna come letto";
    },
    reactedWith$2(sender, reaction) {
      return sender + " ha reagito con " + reaction;
    },
    get$pinMessage() {
      return "Fissa alla stanza";
    },
    get$confirmEventUnpin() {
      return "Sei sicuro di voler permanentemente sfissare l'evento?";
    },
    get$emojis() {
      return "Emoji";
    },
    get$youRejectedTheInvitation() {
      return "Hai rifiutato l'invito";
    },
    get$youJoinedTheChat() {
      return "Sei entrato/a nella chat";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Hai accettato l'invito";
    },
    youBannedUser$1(user) {
      return "Hai bannato " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Hai revocato l'invito per " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Sei stato invitato/a da " + user;
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Hai invitato " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Hai rimosso " + user;
    },
    youUnbannedUser$1(user) {
      return "Hai sbannato " + user;
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " ha bussato";
    },
    get$usersMustKnock() {
      return "Gli utenti devono bussare";
    },
    get$noOneCanJoin() {
      return "Nessuno pu\xf2 unirsi";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " vorrebbe unirsi alla chat.";
    },
    get$knock() {
      return "Bussa";
    },
    get$users() {
      return "Utenti";
    },
    countFiles$1(count) {
      return "" + count + " file";
    },
    get$user() {
      return "Utente";
    },
    get$custom() {
      return "Personalizzato";
    },
    get$noKeyForThisMessage() {
      return "Questo pu\xf2 accadere se il messaggio \xe8 stato inviato prima che hai fatto l'accesso in questo dispositivo.\n\n\xc8 anche possibile che il mittente abbia bloccato il tuo dispositivo o che qualcosa sia andato storto con la tua connessione ad internet.\n\nSei in grado di leggere il messaggio su altre sessioni? Allora puoi trasferire il messaggio da l\xec! Vai su Impostazioni > Dispositivi e verifica che i tuoi dispositivi siano verificati l'un l'altro. Quando aprirai la stanza la prossima volta ed entrambe le sessioni sono in primo piano, le chiavi saranno trasmesse automaticamente.\n\nNon vuoi perdere le chiavi quando ti disconnetti o cambi dispositivo? Assicurati di aver attivato il backup delle chat nelle impostazioni.";
    },
    get$newSpace() {
      return "Nuovo spazio";
    },
    get$doNotShowAgain() {
      return "Non mostrare pi\xf9";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Chat vuota (era " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Riapri la chat";
    },
    get$noOtherDevicesFound() {
      return "Nessun altro dispositivo trovato";
    },
    fileIsTooBigForServer$1(max) {
      return "Impossibile inviare! Il server supporta solo allegati fino a " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "Salta all'ultimo messaggio letto";
    },
    get$readUpToHere() {
      return "Letto fino a qui";
    },
    get$jump() {
      return "Salta";
    },
    get$openLinkInBrowser() {
      return "Apri il collegamento nel browser";
    },
    get$profileNotFound() {
      return "Impossibile trovare l'utente sul server. Forse c'\xe8 un problema di connessione oppure l'utente non esiste.";
    },
    get$setColorTheme() {
      return "Imposta tema colore:";
    },
    get$invite() {
      return "Invitare";
    },
    get$invitePrivateChat() {
      return "\ud83d\udce8 Invita a una chat privata";
    },
    get$invalidInput() {
      return "Contenuto non valido!";
    },
    wrongPinEntered$1(seconds) {
      return "\xc8 stato inserito il pin sbagliato! Riprova tra " + seconds + " secondi...";
    },
    get$pleaseEnterANumber() {
      return "Per favore inserisci un numero maggiore di 0";
    },
    get$archiveRoomDescription() {
      return "Questa chat sar\xe0 archiviata. Gli altri utenti saranno in grado di vedere che hai abbandonato la chat.";
    },
    get$roomUpgradeDescription() {
      return "Questa chat sar\xe0 ricreata con la nuova versione della stanza. Tutti i partecipanti saranno avvertiti che devono passare alla nuova chat. Puoi leggere di pi\xf9 riguardo le versioni delle stanze su https://spec.matrix.org/latest/rooms/";
    },
    get$removeDevicesDescription() {
      return "Sarai disconnesso da questo dispositivo e non potrai pi\xf9 ricevere messaggi.";
    },
    get$banUserDescription() {
      return "L'utente sar\xe0 bannato dalla chat e non sar\xe0 in grado di rientrare finch\xe9 non verr\xe0 sbannato.";
    },
    get$unbanUserDescription() {
      return "L'utente potr\xe0 rientrare nella chat.";
    },
    get$kickUserDescription() {
      return "L'utente \xe8 stato rimosso, ma non bannato. Nelle chat pubbliche, l'utente potr\xe0 rientrare quando vuole.";
    },
    get$makeAdminDescription() {
      return "Una volta che fai questo utente amministratore, potresti non essere in grado di rimuoverlo, in quanto avr\xe0 i tuoi stessi privilegi.";
    },
    get$yourGlobalUserIdIs() {
      return "Il tuo ID dell'utente globale \xe8: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Sfortunatamente non \xe8 stato trovato nessun utente con "' + query + '". Per favore controlla se hai fatto un errore di battitura.';
    },
    get$knocking() {
      return "Bussare";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "La chat pu\xf2 essere trovata tramite la ricerca su " + server;
    },
    get$searchChatsRooms() {
      return "Cerca per #chat, @utenti...";
    },
    get$nothingFound() {
      return "Non \xe8 stato trovato nulla...";
    },
    get$wrongRecoveryKey() {
      return "Mi dispiace... questa non sembra essere la chiave di recupero corretta.";
    },
    get$startConversation() {
      return "Inizia una conversazione";
    },
    get$commandHint_sendraw() {
      return "Manda un json grezzo";
    },
    get$searchForUsers() {
      return "Cerca @utenti...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Per favore inserisci la tua password attuale";
    },
    get$newPassword() {
      return "Nuova password";
    },
    get$pleaseChooseAStrongPassword() {
      return "Per favore scegli una password forte";
    },
    get$passwordsDoNotMatch() {
      return "Le password non corrispondono";
    },
    get$passwordIsWrong() {
      return "La password inserita \xe8 sbagliata";
    },
    get$publicChatAddresses() {
      return "Indirizzi di chat pubblici";
    },
    get$createNewAddress() {
      return "Crea un nuovo indirizzo";
    },
    get$joinSpace() {
      return "Unisciti allo spazio";
    },
    get$publicSpaces() {
      return "Spazio pubblico";
    },
    get$decline() {
      return "Declina";
    },
    get$thisDevice() {
      return "Questo dispositivo:";
    },
    get$initAppError() {
      return "Si \xe8 verificato un errore durante l'inizializzazione dell'app";
    },
    get$userRole() {
      return "Ruolo utente";
    },
    searchIn$1(chat) {
      return 'Cerca nella chat "' + chat + '"...';
    },
    get$searchMore() {
      return "Cerca di pi\xf9...";
    },
    get$gallery() {
      return "Galleria";
    },
    get$files(_) {
      return "File";
    },
    sessionLostBody$2(url, error) {
      return "La tua sessione \xe8 andata persa. Segnala questo errore agli sviluppatori all'indirizzo " + url + ". Il messaggio di errore \xe8: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "L'app ora tenta di ripristinare la sessione dal backup. Segnala questo errore agli sviluppatori all'indirizzo " + url + ". Il messaggio di errore \xe8: " + error;
    },
    get$sendReadReceipts() {
      return "Invia ricevute di lettura";
    },
    get$sendTypingNotificationsDescription() {
      return "Gli altri partecipanti alla chat possono vedere quando stai scrivendo un nuovo messaggio.";
    },
    get$sendReadReceiptsDescription() {
      return "Gli altri partecipanti alla chat possono vedere quando hai letto un messaggio.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verifica altro dispositivo";
    },
    get$verifyOtherDeviceDescription() {
      return "Quando verifichi un altro dispositivo, questi dispositivi possono scambiarsi le chiavi, aumentando la tua sicurezza complessiva. \ud83d\udcaa Quando inizi una verifica, apparir\xe0 un popup nell'app su entrambi i dispositivi. L\xec vedrai una serie di emoji o numeri che dovrai confrontare tra loro. \xc8 meglio avere entrambi i dispositivi a portata di mano prima di iniziare la verifica. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " ha accettato la verifica della chiave";
    },
    canceledKeyVerification$1(sender) {
      return sender + " ha annullato la verifica della chiave";
    },
    completedKeyVerification$1(sender) {
      return sender + " ha completato la verifica della chiave";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " \xe8 pronto per la verifica della chiave";
    },
    requestedKeyVerification$1(sender) {
      return sender + " ha richiesto la verifica della chiave";
    },
    startedKeyVerification$1(sender) {
      return sender + " ha avviato la verifica della chiave";
    },
    get$stickers() {
      return "Adesivi";
    },
    get$discover() {
      return "Scopri";
    },
    get$commandHint_ignore() {
      return "Ignora il Matrix ID fornito";
    },
    get$commandHint_unignore() {
      return "Ignora il Matrix ID specificato";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Al momento ci sono " + count + " utenti bloccati.";
    },
    get$restricted() {
      return "Limitato";
    },
    get$knockRestricted() {
      return "Limitato al bussare";
    },
    goToSpace$1(space) {
      return "Vai allo spazio: " + space;
    },
    get$markAsUnread() {
      return "Contrassegna come non letto";
    },
    userLevel$1(level) {
      return "" + level + " - Utente";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderatore";
    },
    adminLevel$1(level) {
      return "" + level + " - Amministratore";
    },
    get$changeGeneralChatSettings() {
      return "Modifica le impostazioni generali della chat";
    },
    get$inviteOtherUsers() {
      return "Invita altri utenti a questa chat";
    },
    get$changeTheChatPermissions() {
      return "Cambia i permessi della chat";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Cambia la visibilit\xe0 della cronologia chat";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Cambia l'indirizzo principale della chat pubblica";
    },
    get$sendRoomNotifications() {
      return "Invia notifiche alla @stanza";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Cambia la descrizione della chat";
    },
    get$chatPermissionsDescription() {
      return "Definisci quale livello di privilegi \xe8 necessario per determinate azioni in questa chat. I livelli di privilegi 0, 50 e 100 rappresentano solitamente utenti, moderatori e amministratori, ma qualsiasi valore intermedio \xe8 possibile.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Aggiornamento " + version + " installato!";
    },
    get$sendCanceled() {
      return "Invio annullato";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Non sembra essere un homeserver compatibile. URL sbagliato?";
    },
    get$calculatingFileSize() {
      return "Calcolo della dimensione del file...";
    },
    get$prepareSendingAttachment() {
      return "Preparazione per l'invio dell'allegato...";
    },
    get$sendingAttachment() {
      return "Invio allegato...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Invio dell'allegato " + index + " di " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Limite server raggiunto! Attendere " + seconds + " secondi...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Nota: quando colleghi tutti i tuoi dispositivi al backup della chat, vengono verificati automaticamente.";
    },
    get$continueText() {
      return "Continua";
    },
    get$blur(_) {
      return "Sfocatura:";
    },
    get$opacity(_) {
      return "Opacit\xe0:";
    },
    get$setWallpaper() {
      return "Imposta sfondo";
    },
    get$noContactInformationProvided() {
      return "Il server non fornisce alcuna informazione di contatto valida";
    },
    get$contactServerAdmin() {
      return "Contatta l'amministratore del server";
    },
    get$contactServerSecurity() {
      return "Contatta la sicurezza del server";
    },
    get$supportPage() {
      return "Pagina di supporto";
    },
    get$serverInformation() {
      return "Informazioni sul server:";
    },
    get$name(_) {
      return "Nome";
    },
    get$version(_) {
      return "Versione";
    },
    get$compress() {
      return "Comprimere";
    },
    get$boldText() {
      return "Testo in grassetto";
    },
    get$italicText() {
      return "Testo in corsivo";
    },
    get$strikeThrough() {
      return "Barrato";
    },
    get$pleaseFillOut() {
      return "Si prega di compilare";
    },
    get$invalidUrl() {
      return "URL non valido";
    },
    get$addLink() {
      return "Aggiungi collegamento";
    },
    get$unableToJoinChat() {
      return "Impossibile partecipare alla chat. Forse l'altra parte ha gi\xe0 chiuso la conversazione.";
    },
    get$previous() {
      return "Previous";
    },
    get$otherPartyNotLoggedIn() {
      return "The other party is currently not logged in and therefore cannot receive messages!";
    },
    get$open(_) {
      return "Open";
    },
    get$waitingForServer() {
      return "Waiting for server...";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$interactiveTranslatorRequired() {
      return "Required";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$declinedInvitation() {
      return "Declined invitation";
    },
    get$acceptedInvitation() {
      return "Accepted invitation";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run language assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run language assistance after typing messages";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of members.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "SuApine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$unlockedLanguageTools() {
      return "You\u2019ve unlocked the language tools for this message. Try them out by clicking below!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$mandatoryUpdateRequired() {
      return "Mandatory Update Required";
    },
    get$updateAvailable() {
      return "Update Available";
    },
    get$mandatoryUpdateRequiredDesc() {
      return "A new version of the app is required to continue. Please update now to proceed.";
    },
    get$updateAvailableDesc() {
      return "A new version of the app is available. Update now for the latest features and improvements!";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language";
    },
    get$couldNotFindTTS() {
      return "We couldn't find a text-to-speech engine for your current target language. ";
    },
    get$ttsInstructionsHyperlink() {
      return "Click here to view instructions for downloading a new voice on your device.";
    },
    get$currentVersion() {
      return "Current Version";
    },
    get$latestVersion() {
      return "Latest Version";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseAgreeToTOS() {
      return "Please agree to the Terms and Conditions";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "Click on a word or the buttons below to learn more";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$noEmojiSelectedTooltip() {
      return "No emoji selected";
    },
    get$writingExercisesTooltip() {
      return "Writing activities";
    },
    get$listeningExercisesTooltip() {
      return "Listening activities";
    },
    get$readingExercisesTooltip() {
      return "Reading activities";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$formsNotFound() {
      return "Forms could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$downloadSpaceAnalytics() {
      return "Download space analytics";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    pickAnEmoji$2(lemma, partOfSpeech) {
      return "What's your favorite emoji for '" + lemma + "'?";
    },
    get$lemmaMeaningInstructionsBody() {
      return "Above is the meaning of the lemma. Double-click to edit.";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$notInClass() {
      return "Not in a class!";
    },
    get$noClassCode() {
      return "No class code!";
    },
    get$chooseCorrectLabel() {
      return "Choose the correct label.";
    },
    levelPopupTitle$1(level) {
      return "Congratulations on reaching\nLevel " + level;
    },
    get$activityPlannerTitle() {
      return "Activity Planner";
    },
    get$topicLabel() {
      return "Topic";
    },
    get$topicPlaceholder() {
      return "Choose a topic...";
    },
    get$modeLabel() {
      return "Mode";
    },
    get$modePlaceholder() {
      return "Choose a mode...";
    },
    get$learningObjectiveLabel() {
      return "Learning Objective";
    },
    get$learningObjectivePlaceholder() {
      return "Choose a learning objective...";
    },
    get$mediaLabel() {
      return "Media learners should share";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR Level";
    },
    get$generateActivitiesButton() {
      return "Generate Activities";
    },
    get$launchActivityButton() {
      return "Launch Activity";
    },
    get$image(_) {
      return "Image";
    },
    get$video() {
      return "Video";
    },
    get$nan() {
      return "Not applicable";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete the highlighted word activities to unlock";
    },
    get$myBookmarkedActivities() {
      return "My Bookmarked Activities";
    },
    get$noBookmarkedActivities() {
      return "No bookmarked activities";
    },
    get$activityTitle() {
      return "Activity Title";
    },
    get$addVocabulary() {
      return "Add Vocabulary";
    },
    get$instructions() {
      return "Instructions";
    },
    get$numberOfLearners() {
      return "Number of learners";
    },
    get$mustBeInteger() {
      return "Must be an integer e.g. 1, 2, 3, ...";
    },
    noLemmasFound$1(xp) {
      return "There's no vocabulary with more than " + xp + " XP. Keep practicing!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "The space will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$whatIsLemma() {
      return "What is the lemma?";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$clickForMeaningActivity() {
      return "Click here for a Meaning Challenge";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$slightlyOffensive() {
      return "Slightly offensive";
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed. In rare cases, the email can be sent to spam or take up to 5 minutes to arrive.";
    },
    get$whoIsAllowedToJoinThisChat() {
      return "Who is allowed to join this chat";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "Use your keyboard's built-in autocorrect when typing messages";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No space description created yet.";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nIt, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nIt":{"L10n":[]}}'));
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_234", e: "endPart", h: h});
})($__dart_deferred_initializers__, "qmVWDb1thYD2emD/1p8G1PDew3A=");
;
//# sourceMappingURL=main.dart.js_234.part.js.map
