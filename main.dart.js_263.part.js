// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.6.0.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_263", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    L10nLv$() {
      return new B.L10nLv(A.canonicalizedLocale("lv"));
    },
    L10nLv: function L10nLv(t0) {
      this.localeName = t0;
    }
  };
  A = holdersList[0];
  C = holdersList[51];
  B = hunkHelpers.updateHolder(holdersList[36], B);
  B.L10nLv.prototype = {
    get$alwaysUse24HourFormat() {
      return "n\u0113";
    },
    get$repeatPassword() {
      return "Atk\u0101rtot paroli";
    },
    get$notAnImage() {
      return "Nav att\u0113la datne.";
    },
    get$remove(_) {
      return "No\u0146emt";
    },
    get$importNow() {
      return "Ievietot tagad";
    },
    get$importEmojis() {
      return "Ievietot emocijz\u012bmes";
    },
    get$importFromZipFile() {
      return "Ievietot no .zip datnes";
    },
    get$exportEmotePack() {
      return "Izg\u016bt emociju paku k\u0101 .zip";
    },
    get$replace(_) {
      return "Aizst\u0101t";
    },
    aboutHomeserver$1(homeserver) {
      return "Par " + homeserver;
    },
    get$accept(_) {
      return "Pie\u0146emt";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " pie\u0146\u0113ma uzaicin\u0101jumu";
    },
    get$account() {
      return "Konts";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " iesp\u0113joja piln\u012bgu \u0161ifr\u0113\u0161anu";
    },
    get$addEmail() {
      return "Pievienot e-pasta adresi";
    },
    get$confirmMatrixId() {
      return "L\u016bgums apliecin\u0101t savu Matrix Id, lai var\u0113tu izdz\u0113st savu kontu.";
    },
    supposedMxid$1(mxid) {
      return "Tam b\u016btu j\u0101b\u016bt " + mxid;
    },
    get$addToSpace() {
      return "Pievienot vietai";
    },
    get$admin() {
      return "P\u0101rvald\u012bt\u0101js";
    },
    get$alias() {
      return "aizst\u0101jv\u0101rds";
    },
    get$all() {
      return "Viss";
    },
    get$commandHint_googly() {
      return "Nos\u016bt\u012bt izbol\u012btu acu p\u0101ri";
    },
    get$commandHint_cuddle() {
      return "Nos\u016bt\u012bt sam\u012b\u013cojienu";
    },
    get$commandHint_hug() {
      return "Nos\u016bt\u012bt apsk\u0101vienu";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " s\u016bta izbol\u012btas acis";
    },
    cuddleContent$1(senderName) {
      return senderName + " sam\u012b\u013co Tevi";
    },
    hugContent$1(senderName) {
      return senderName + " apskauj Tevi";
    },
    answeredTheCall$1(senderName) {
      return senderName + " atbild\u0113ja uz zvanu";
    },
    get$anyoneCanJoin() {
      return "Ikviens var pievienoties";
    },
    get$archive() {
      return "Arh\u012bvs";
    },
    get$areGuestsAllowedToJoin() {
      return "Vai vieslietot\u0101jiem ir \u013cauts pievienoties";
    },
    get$areYouSure() {
      return "Vai tie\u0161\u0101m?";
    },
    get$areYouSureYouWantToLogout() {
      return "Vai tie\u0161\u0101m atteikties?";
    },
    get$askSSSSSign() {
      return "Lai var\u0113tu parakst\u012bt otru cilv\u0113ku, l\u016bgums ievad\u012bt savu dro\u0161o kr\u0101tuves paroles v\u0101rdkopu vai atkop\u0161anas atsl\u0113gu.";
    },
    askVerificationRequest$1(username) {
      return "Pie\u0146emt apliecin\u0101\u0161anas piepras\u012bjumu no " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "M\u0101jasserveris nodro\u0161ina pieteik\u0161an\u0101s veidus:\n" + serverVersions + "\nSavuk\u0101rt, \u0161\u012b lietotne atbalsta tikai:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Nos\u016bt\u012bt rakst\u012b\u0161anas pazi\u0146ojumus";
    },
    get$swipeRightToLeftToReply() {
      return "Pavilkt pa labi, lai atbild\u0113tu";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "M\u0101jasserveris nodro\u0161ina specifik\u0101cijas versijas:\n" + serverVersions + "\nSavuk\u0101rt, lietotne atbalsta tikai " + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return A.S(chats) + " t\u0113rz\u0113\u0161anas un " + A.S(participants) + " dal\u012bbnieki";
    },
    get$noMoreChatsFound() {
      return "Vairs nav t\u0113rz\u0113\u0161anu...";
    },
    get$noChatsFoundHere() {
      return "\u0160eit v\u0113l nav t\u0113rz\u0113\u0161anu. Jauna saruna ar k\u0101du ir uzs\u0101kama ar zem\u0101k eso\u0161o pogu. \u2935\ufe0f";
    },
    get$unread() {
      return "Nelas\u012btas";
    },
    get$space() {
      return "Vieta";
    },
    get$spaces() {
      return "Vietas";
    },
    get$banFromChat() {
      return "Izsl\u0113gt no t\u0113rz\u0113\u0161anas";
    },
    get$banned() {
      return "Izsl\u0113gts";
    },
    bannedUser$2(username, targetName) {
      return username + " izsl\u0113dza " + targetName;
    },
    get$blockDevice() {
      return "Liegt ier\u012bci";
    },
    get$blocked() {
      return "Liegta";
    },
    get$botMessages() {
      return "Robotprogrammat\u016bras zi\u0146as";
    },
    get$cancel(_) {
      return "Atcelt";
    },
    cantOpenUri$1(uri) {
      return "Nevar atv\u0113rt adresi " + uri;
    },
    get$changeDeviceName() {
      return "Main\u012bt ier\u012bces nosaukumu";
    },
    changedTheChatAvatar$1(username) {
      return username + " nomain\u012bja t\u0113rz\u0113\u0161anas att\u0113lu";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " nomain\u012bja t\u0113rz\u0113\u0161anas aprakstu uz '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " nomain\u012bja t\u0113rz\u0113\u0161anas nosaukumu uz '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " nomain\u012bja t\u0113rz\u0113\u0161anas at\u013caujas";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " nomain\u012bja savu att\u0113lojamo v\u0101rdu uz '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " nomain\u012bja viesu piek\u013cuves nosac\u012bjumus";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " nomain\u012bja viesu piek\u013cuves nosac\u012bjumus uz " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " main\u012bja v\u0113stures redzam\u012bbu";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " nomain\u012bja v\u0113stures redzam\u012bbu uz " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " nomain\u012bja pievieno\u0161an\u0101s nosac\u012bjumus";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " nomain\u012bja pievieno\u0161an\u0101s nosac\u012bjumus uz " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " nomain\u012bja savu att\u0113lu";
    },
    changedTheRoomAliases$1(username) {
      return username + " nomain\u012bja istabas aizst\u0101jv\u0101rdus";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " nomain\u012bja uzaicin\u0101juma saiti";
    },
    get$changePassword() {
      return "Nomain\u012bt paroli";
    },
    get$changeTheme() {
      return "Main\u012bt izskatu";
    },
    get$changeTheNameOfTheGroup() {
      return "Main\u012bt kopas nosaukumu";
    },
    get$changeYourAvatar() {
      return "Main\u012bt savu att\u0113lu";
    },
    get$channelCorruptedDecryptError() {
      return "\u0160ifr\u0113\u0161ana tika boj\u0101ta";
    },
    get$chat() {
      return "T\u0113rz\u0113\u0161ana";
    },
    get$chatDetails() {
      return "T\u0113rz\u0113\u0161anas izv\u0113rsums";
    },
    get$chats() {
      return "T\u0113rz\u0113\u0161anas";
    },
    get$chooseAStrongPassword() {
      return "J\u0101izv\u0113las sp\u0113c\u012bga parole";
    },
    get$clearArchive() {
      return "Izt\u012br\u012bt arh\u012bvu";
    },
    get$close(_) {
      return "Aizv\u0113rt";
    },
    get$commandHint_markasdm() {
      return "Atz\u012bm\u0113t k\u0101 tie\u0161o zi\u0146u istabu nor\u0101d\u012btajam Matrix Id";
    },
    get$commandHint_markasgroup() {
      return "Atz\u012bm\u0113t k\u0101 kopu";
    },
    get$commandHint_ban() {
      return "Izsl\u0113gt nor\u0101d\u012bto lietot\u0101ju no \u0161\u012bs istabas";
    },
    get$commandHint_clearcache() {
      return "Izt\u012br\u012bt ke\u0161atmi\u0146u";
    },
    get$commandHint_create() {
      return "Izveidot tuk\u0161u kopas t\u0113rz\u0113\u0161anu\nLai atsp\u0113jotu \u0161ifr\u0113\u0161anu, j\u0101izmanto --no-encryption";
    },
    get$commandHint_discardsession() {
      return "Atmest sesiju";
    },
    get$commandHint_dm() {
      return "Uzs\u0101kt tie\u0161u t\u0113rz\u0113\u0161anu\nLai atsp\u0113jotu \u0161ifr\u0113\u0161anu, j\u0101izmanto --no-encryption";
    },
    get$commandHint_html() {
      return "Nos\u016bt\u012bt ar HTML format\u0113tu tekstu";
    },
    get$commandHint_invite() {
      return "Uzaicin\u0101t nor\u0101d\u012bto lietot\u0101ju \u0161aj\u0101 istab\u0101";
    },
    get$commandHint_join() {
      return "Pievienoties nor\u0101d\u012btajai istabai";
    },
    get$commandHint_kick() {
      return "No\u0146emt nor\u0101d\u012bto lietot\u0101ju no \u0161\u012bs istabas";
    },
    get$commandHint_leave() {
      return "Pamest \u0161o istabu";
    },
    get$commandHint_me() {
      return "Apraksti sevi";
    },
    get$commandHint_myroomavatar() {
      return "Iestat\u012bt savu att\u0113lu \u0161aj\u0101 istab\u0101 (ar mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Iestat\u012bt savu att\u0113lojamo v\u0101rdu \u0161aj\u0101 istab\u0101";
    },
    get$commandHint_op() {
      return "Iestat\u012bt nor\u0101d\u012bt\u0101 lietot\u0101ja sp\u0113ka l\u012bmeni (noklus\u0113jums: 50)";
    },
    get$commandHint_plain() {
      return "Nos\u016bt\u012bt neformat\u0113tu tekstu";
    },
    get$commandHint_react() {
      return "Nos\u016bt\u012bt atbildi k\u0101 reakciju";
    },
    get$commandHint_send() {
      return "Nos\u016bt\u012bt tekstu";
    },
    get$commandHint_unban() {
      return "Atcelt nor\u0101d\u012bt\u0101 lietot\u0101ja izsl\u0113g\u0161anu no \u0161\u012bs istabas";
    },
    get$commandInvalid() {
      return "Neder\u012bga komanda";
    },
    commandMissing$1(command) {
      return command + " nav komanda.";
    },
    get$compareEmojiMatch() {
      return "L\u016bgums sal\u012bdzin\u0101t emocijz\u012bmes";
    },
    get$compareNumbersMatch() {
      return "L\u016bgums sal\u012bdzin\u0101t skait\u013cus";
    },
    get$configureChat() {
      return "Konfigur\u0113t t\u0113rz\u0113\u0161anu";
    },
    get$confirm(_) {
      return "Apstiprin\u0101t";
    },
    get$containsDisplayName() {
      return "Satur att\u0113lojamo v\u0101rdu";
    },
    get$containsUserName() {
      return "Satur lietot\u0101jv\u0101rdu";
    },
    get$contentHasBeenReported() {
      return "Par saturu tika zi\u0146os servera p\u0101rvald\u012bt\u0101jiem";
    },
    get$copiedToClipboard() {
      return "Ievietots starpliktuv\u0113";
    },
    get$copy(_) {
      return "Ievietot starpliktuv\u0113";
    },
    couldNotDecryptMessage$1(error) {
      return "Nevar\u0113ja at\u0161ifr\u0113t zi\u0146u: " + error;
    },
    countParticipants$1(count) {
      return A.S(count) + " dal\u012bbnieki";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " izveidoja t\u0113rz\u0113\u0161anu";
    },
    get$currentlyActive() {
      return "Pa\u0161reiz darb\u012bgi";
    },
    get$darkTheme() {
      return "Tum\u0161s";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Tas atsp\u0113jos Tavu lietot\u0101ja kontu. To nevar atdar\u012bt. Vai tie\u0161\u0101m?";
    },
    get$defaultPermissionLevel() {
      return "Noklus\u0113juma at\u013cauju l\u012bmenis jauniem lietot\u0101jiem";
    },
    get$$delete(_) {
      return "Izdz\u0113st";
    },
    get$deleteAccount() {
      return "Izdz\u0113st kontu";
    },
    get$deleteMessage() {
      return "Izdz\u0113st zi\u0146u";
    },
    get$devices() {
      return "Ier\u012bces";
    },
    get$directChats() {
      return "Tie\u0161\u0101s t\u0113rz\u0113\u0161anas";
    },
    get$allRooms() {
      return "Visas kopu t\u0113rz\u0113\u0161anas";
    },
    get$displaynameHasBeenChanged() {
      return "Att\u0113lojamais v\u0101rds tika nomain\u012bts";
    },
    get$downloadFile() {
      return "Lejupiel\u0101d\u0113t datni";
    },
    get$edit() {
      return "Labot";
    },
    get$editBlockedServers() {
      return "Labot liegtos serveros";
    },
    get$chatPermissions() {
      return "T\u0113rz\u0113\u0161anas at\u013caujas";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    get$editDisplayname() {
      return "Labot att\u0113lojamo v\u0101rdu";
    },
    get$editRoomAliases() {
      return "Labot istabu aizst\u0101jv\u0101rdus";
    },
    get$editRoomAvatar() {
      return "Labot istabas att\u0113lu";
    },
    get$emoteExists() {
      return "Emocija jau past\u0101v.";
    },
    get$emoteInvalid() {
      return "Neder\u012bgs emocijas \u012bskods.";
    },
    get$emoteKeyboardNoRecents() {
      return "Nesen izmantot\u0101s emocijas par\u0101d\u012bsies \u0161eit...";
    },
    get$emotePacks() {
      return "Emociju pakas istabai";
    },
    get$globalChatId() {
      return "Visp\u0101r\u0113jais t\u0113rz\u0113\u0161anas Id";
    },
    get$accessAndVisibility() {
      return "Piek\u013cuve un redzam\u012bba";
    },
    get$customEmojisAndStickers() {
      return "Piel\u0101gotas emocijz\u012bmes un uzl\u012bmes";
    },
    get$emoteShortcode() {
      return "Emocijas \u012bskods";
    },
    get$emoteWarnNeedToPick() {
      return "Nepiecie\u0161ams izv\u0113l\u0113ties emocijas \u012bskodu un att\u0113lu.";
    },
    get$emptyChat() {
      return "Tuk\u0161a t\u0113rz\u0113\u0161ana";
    },
    get$enableEmotesGlobally() {
      return "Iesp\u0113jot k\u0101 visp\u0101r\u0113ju emociju paku";
    },
    get$enableEncryption() {
      return "Iesp\u0113jot \u0161ifr\u0113\u0161anu";
    },
    get$encrypted() {
      return "\u0160ifr\u0113ta";
    },
    get$encryptionNotEnabled() {
      return "\u0160ifr\u0113\u0161ana nav iesp\u0113jota";
    },
    endedTheCall$1(senderName) {
      return senderName + " beidza zvanu";
    },
    get$enterAnEmailAddress() {
      return "J\u0101ievada e-pasta adrese";
    },
    errorObtainingLocation$1(error) {
      return "K\u013c\u016bda atra\u0161an\u0101s vietas ieg\u016b\u0161an\u0101: " + error;
    },
    get$extremeOffensive() {
      return "\u012apa\u0161i aizskaro\u0161s";
    },
    get$fontSize(_) {
      return "Fonta izm\u0113rs";
    },
    get$forward(_) {
      return "P\u0101rs\u016bt\u012bt";
    },
    get$fromJoining() {
      return "No pievieno\u0161an\u0101s";
    },
    get$fromTheInvitation() {
      return "No uzaicin\u0101juma";
    },
    get$goToTheNewRoom() {
      return "Doties uz jauno istabu";
    },
    get$group() {
      return "Kopa";
    },
    get$chatDescription() {
      return "T\u0113rz\u0113\u0161anas apraksts";
    },
    get$groups() {
      return "Kopas";
    },
    groupWith$1(displayname) {
      return "Kopa ar " + displayname;
    },
    get$guestsAreForbidden() {
      return "Viesi nav \u013cauti";
    },
    get$guestsCanJoin() {
      return "Viesi var pievienoties";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " atsauca uzaicin\u0101jumu " + targetName;
    },
    get$help() {
      return "Pal\u012bdz\u012bba";
    },
    get$hideRedactedMessages() {
      return "Pasl\u0113pt labo\u0161anas zi\u0146as";
    },
    get$hideRedactedMessagesBody() {
      return "Ja k\u0101ds labo zi\u0146u, t\u0101 vairs neb\u016bs redzama t\u0113rz\u0113\u0161an\u0101.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Pasl\u0113pt neder\u012bgus vai nezin\u0101mus zi\u0146u form\u0101tus";
    },
    get$howOffensiveIsThisContent() {
      return "Cik aizskaro\u0161s ir \u0161is saturs?";
    },
    get$block() {
      return "Izsl\u0113gt";
    },
    get$blockedUsers() {
      return "Atsl\u0113gtie lietot\u0101ji";
    },
    get$blockListDescription() {
      return "Ir iesp\u0113jams atsl\u0113gt trauc\u0113jo\u0161us lietot\u0101jus. Neb\u016bs iesp\u0113jams sa\u0146em jebk\u0101das zi\u0146as vai uzaicin\u0101jumus uz istab\u0101m no lietot\u0101jiem, kas ir person\u012bgaj\u0101 izsl\u0113g\u0161anas sarakst\u0101.";
    },
    get$blockUsername() {
      return "Ne\u0146emt v\u0113r\u0101 lietot\u0101jv\u0101rdu";
    },
    get$iHaveClickedOnLink() {
      return "Es uzklik\u0161\u0137in\u0101ju uz saites";
    },
    get$incorrectPassphraseOrKey() {
      return "Nepareiza paroles v\u0101rdkopa vai atkop\u0161anas atsl\u0113ga";
    },
    get$inoffensive() {
      return "Nav aizskaro\u0161s";
    },
    get$inviteContact() {
      return "Uzaicin\u0101t kontaktpersonu";
    },
    get$noChatDescriptionYet() {
      return "V\u0113l nav izveidots t\u0113rz\u0113\u0161anas apraksts.";
    },
    get$tryAgain() {
      return "J\u0101m\u0113\u0123ina v\u0113lreiz";
    },
    get$invited() {
      return "Uzaicin\u0101ts";
    },
    get$redactMessageDescription() {
      return "Zi\u0146a tiks labota visiem \u0161\u012bs sarunas dal\u012bbniekiem. To nevar atdar\u012bt.";
    },
    get$optionalRedactReason() {
      return "(P\u0113c izv\u0113les) Zi\u0146as labo\u0161anas iemesls...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " uzaicin\u0101ja " + targetName;
    },
    get$invitedUsersOnly() {
      return "Tikai uzaicin\u0101ti lietot\u0101ji";
    },
    get$inviteForMe() {
      return "Uzaicin\u0101jums man";
    },
    inviteText$2(username, link) {
      return username + " uzaicin\u0101ja pievienoties FluffyChat.\n1. J\u0101apmekl\u0113 fluffychat.im un j\u0101uzst\u0101da lietotne \n2. J\u0101izveido konts vai j\u0101piesak\u0101s \n3. J\u0101atver uzaicin\u0101juma saite: \n " + link;
    },
    get$isTyping() {
      return "raksta\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " pievienoj\u0101s t\u0113rz\u0113\u0161anai";
    },
    get$joinRoom() {
      return "Pievienoties istabai";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " izmeta " + targetName;
    },
    get$kickFromChat() {
      return "Izmest no t\u0113rz\u0113\u0161anas";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "P\u0113d\u0113joreiz redz\u0113ts: " + localizedTimeShort;
    },
    get$leave() {
      return "Pamest";
    },
    get$leftTheChat() {
      return "Pameta t\u0113rz\u0113\u0161anu";
    },
    get$lightTheme() {
      return "Gai\u0161s";
    },
    loadCountMoreParticipants$1(count) {
      return "Iel\u0101d\u0113t v\u0113l " + count + " dal\u012bbniekus";
    },
    get$dehydrate() {
      return "Izg\u016bt sesiju un izt\u012br\u012bt ier\u012bci";
    },
    get$dehydrateWarning() {
      return "\u0160\u012b darb\u012bba nav atdar\u0101ma. J\u0101nodro\u0161ina, ka rezerves kopijas datne tiek dro\u0161i uzglab\u0101ta.";
    },
    get$dehydrateTor() {
      return "TOR lietot\u0101ji: izg\u016bt sesiju";
    },
    get$dehydrateTorLong() {
      return "TOR lietot\u0101jiem ir ieteicams izg\u016bt sesiju pirms loga aizv\u0113r\u0161anas.";
    },
    get$loadingPleaseWait() {
      return "Iel\u0101d\u0113... L\u016bgums uzgaid\u012bt.";
    },
    get$loadMore() {
      return "Iel\u0101d\u0113t v\u0113l\u2026";
    },
    get$locationDisabledNotice() {
      return "Atra\u0161an\u0101s vietas pakalpojumi ir atsp\u0113joti. L\u016bgums tos iesp\u0113jot, lai b\u016btu iesp\u0113jams kop\u012bgot savu atra\u0161an\u0101s vietu.";
    },
    get$locationPermissionDeniedNotice() {
      return "Atra\u0161an\u0101s vietas at\u013cauja noliegta. L\u016bgums nodro\u0161in\u0101t to, lai b\u016btu iesp\u0113jams kop\u012bgot savu atra\u0161an\u0101s vietu.";
    },
    get$logout() {
      return "Atteikties";
    },
    get$memberChanges() {
      return "Dal\u012bbnieku izmai\u0146as";
    },
    get$mention() {
      return "Piemin\u0113t";
    },
    get$messages() {
      return "Zi\u0146as";
    },
    get$messagesStyle() {
      return "Zi\u0146as:";
    },
    get$moderator() {
      return "Moderators";
    },
    get$newChat() {
      return "Jauna t\u0113rz\u0113\u0161ana";
    },
    get$newVerificationRequest() {
      return "Jauns apliecin\u0101\u0161anas piepras\u012bjums.";
    },
    get$next(_) {
      return "N\u0101kamais";
    },
    get$no() {
      return "N\u0113";
    },
    get$noConnectionToTheServer() {
      return "Nav savienojuma ar serveri";
    },
    get$noEmotesFound() {
      return "Netika atrastas emocijas. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Kop\u012bgot uzaicin\u0101juma saiti";
    },
    get$noPasswordRecoveryDescription() {
      return "V\u0113l nav pievienots paroles atjauno\u0161anas veids.";
    },
    get$noPermission() {
      return "Nav at\u013caujas";
    },
    get$noRoomsFound() {
      return "Istabas netika atrastas\u2026";
    },
    get$notifications() {
      return "Pazi\u0146ojumi";
    },
    get$notificationsEnabledForThisAccount() {
      return "Pazi\u0146ojumi iesp\u0113joti \u0161im kontam";
    },
    get$obtainingLocation() {
      return "Ieg\u016bst atra\u0161an\u0101s vietu\u2026";
    },
    get$offensive() {
      return "Aizskaro\u0161s";
    },
    get$ok() {
      return "Labi";
    },
    get$oopsSomethingWentWrong() {
      return "Ups! Kaut kas nog\u0101ja greizi\u2026";
    },
    get$oneClientLoggedOut() {
      return "Viens no klientiem ir atteicies";
    },
    get$addAccount() {
      return "Pievienot kontu";
    },
    get$enableMultiAccounts() {
      return "(BETA) Iesp\u0113jot vair\u0101kus kontus \u0161aj\u0101 ier\u012bc\u0113";
    },
    get$openInMaps() {
      return "Atv\u0113rt kart\u0113s";
    },
    get$link() {
      return "Saite";
    },
    get$serverRequiresEmail() {
      return "\u0160im serverim ir nepiecie\u0161ams p\u0101rbaud\u012bt Tavu e-pasta adresi re\u0123istr\u0101cijai.";
    },
    get$or() {
      return "Vai";
    },
    get$participant() {
      return "Dal\u012bbnieks";
    },
    get$passphraseOrKey() {
      return "paroles v\u0101rdkopa vai atkop\u0161anas atsl\u0113ga";
    },
    get$password(_) {
      return "Parole";
    },
    get$passwordHasBeenChanged() {
      return "Parole tikai nomain\u012bta";
    },
    get$overview() {
      return "P\u0101rskats";
    },
    get$notifyMeFor() {
      return "Pazi\u0146ot man par";
    },
    get$passwordRecoverySettings() {
      return "Paroles atjauno\u0161anas iestat\u012bjumi";
    },
    get$passwordRecovery() {
      return "Paroles atjauno\u0161ana";
    },
    get$pickImage() {
      return "Izv\u0113l\u0113ties att\u0113lu";
    },
    get$pin() {
      return "PIN";
    },
    get$pleaseChoose() {
      return "L\u016bgums izv\u0113l\u0113ties";
    },
    get$pleaseClickOnLink() {
      return "L\u016bgums klik\u0161\u0137in\u0101t uz saites e-past\u0101 un tad turpin\u0101t.";
    },
    get$pleaseEnterYourPassword() {
      return "L\u016bgums ievad\u012bt savu paroli";
    },
    get$pleaseEnterYourPin() {
      return "L\u016bgums ievad\u012bt savu PIN";
    },
    get$pleaseEnterYourUsername() {
      return "L\u016bgums ievad\u012bt savu lietot\u0101jv\u0101rdu";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return 'L\u016bgums sekot nor\u0101d\u0113m t\u012bmek\u013cvietn\u0113 un piesist "N\u0101kamais".';
    },
    get$privacy() {
      return "Priv\u0101tums";
    },
    get$reason(_) {
      return "Iemesls";
    },
    redactedBy$1(username) {
      return "Laboja " + username;
    },
    get$directChat() {
      return "Tie\u0161\u0101 t\u0113rz\u0113\u0161ana";
    },
    redactedByBecause$2(username, reason) {
      return "Laboja " + username + ', jo: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " laboja notikumu";
    },
    get$redactMessage() {
      return "Labot zi\u0146u";
    },
    get$reject() {
      return "Noraid\u012bt";
    },
    rejectedTheInvitation$1(username) {
      return username + " noraid\u012bja uzaicin\u0101jumu";
    },
    get$removeAllOtherDevices() {
      return "No\u0146emt visas p\u0101r\u0113j\u0101s ier\u012bces";
    },
    get$unbanFromChat() {
      return "Atcelt liegumu t\u0113rz\u0113\u0161an\u0101";
    },
    get$removeYourAvatar() {
      return "No\u0146emt savu att\u0113lu";
    },
    get$replaceRoomWithNewerVersion() {
      return "Aizvietot istabu ar jaun\u0101ku versiju";
    },
    get$reply(_) {
      return "Atbild\u0113t";
    },
    get$reportMessage() {
      return "Zi\u0146ot par zi\u0146u";
    },
    get$roomHasBeenUpgraded() {
      return "Istaba tika atjaunin\u0101ta";
    },
    get$roomVersion() {
      return "Istabas versija";
    },
    get$search(_) {
      return "Mekl\u0113t";
    },
    get$security() {
      return "Dro\u0161\u012bba";
    },
    get$send(_) {
      return "Nos\u016bt\u012bt";
    },
    get$sendAsText() {
      return "Nos\u016bt\u012bt k\u0101 tekstu";
    },
    get$sendAudio() {
      return "Nos\u016bt\u012bt ska\u0146u";
    },
    get$sendFile() {
      return "Nos\u016bt\u012bt datni";
    },
    get$sendImage() {
      return "Nos\u016bt\u012bt att\u0113lu";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "Nos\u016bt\u012bt zi\u0146as";
    },
    get$sendVideo() {
      return "Nos\u016bt\u012bt video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " nos\u016bt\u012bja datni";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " nos\u016bt\u012bja ska\u0146u";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " nos\u016bt\u012bja att\u0113lu";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " nos\u016bt\u012bja uzl\u012bmi";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " nos\u016bt\u012bja video";
    },
    sentCallInformations$1(senderName) {
      return senderName + " nos\u016bt\u012bja inform\u0101ciju par zvanu";
    },
    get$separateChatTypes() {
      return "Atdal\u012bt tie\u0161\u0101s t\u0113rz\u0113\u0161anas un kopas";
    },
    get$setAsCanonicalAlias() {
      return "Iestat\u012bt k\u0101 galveno aizst\u0101jv\u0101rdu";
    },
    get$setChatDescription() {
      return "Iestat\u012bt t\u0113rz\u0113\u0161anas aprakstu";
    },
    get$setPermissionsLevel() {
      return "Iestat\u012bt at\u013cauju l\u012bmeni";
    },
    get$settings() {
      return "Iestat\u012bjumi";
    },
    get$share(_) {
      return "Kop\u012bgot";
    },
    sharedTheLocation$1(username) {
      return username + " kop\u012bgoja savu atra\u0161an\u0101s vietu";
    },
    get$shareLocation() {
      return "Kop\u012bgot atra\u0161an\u0101s vietu";
    },
    get$presencesToggle() {
      return "R\u0101d\u012bt citu lietot\u0101ju st\u0101vok\u013ca zi\u0146as";
    },
    get$skip(_) {
      return "Izlaist";
    },
    get$sourceCode() {
      return "Pirmkods";
    },
    get$spaceName() {
      return "Vietas nosaukums";
    },
    startedACall$1(senderName) {
      return senderName + " uzs\u0101ka zvanu";
    },
    get$status(_) {
      return "St\u0101voklis";
    },
    get$submit(_) {
      return "Iesniegt";
    },
    get$synchronizingPleaseWait() {
      return "Sinhroniz\u0113... L\u016bgums uzgaid\u012bt.";
    },
    get$systemTheme() {
      return "Sist\u0113mas";
    },
    get$theyDontMatch() {
      return "T\u0101s nesakr\u012bt";
    },
    get$theyMatch() {
      return "T\u0101s sakr\u012bt";
    },
    get$tooManyRequestsWarning() {
      return "P\u0101r\u0101k daudz piepras\u012bjumu. L\u016bgums v\u0113l\u0101k m\u0113\u0123in\u0101t v\u0113lreiz.";
    },
    get$tryToSendAgain() {
      return "M\u0113\u0123in\u0101t nos\u016bt\u012bt v\u0113lreiz";
    },
    unbannedUser$2(username, targetName) {
      return username + " atc\u0113la " + targetName + " piek\u013cuves liegumu";
    },
    get$unblockDevice() {
      return "Atsl\u0113gt ier\u012bci";
    },
    get$unknownDevice() {
      return "Nezin\u0101ma ier\u012bce";
    },
    get$unknownEncryptionAlgorithm() {
      return "Nezin\u0101ms \u0161ifr\u0113\u0161anas algoritms";
    },
    unknownEvent$1(type) {
      return "Nezin\u0101ms notikums '" + type + "'";
    },
    get$unpin() {
      return "Atspraust";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " un " + count + " citi raksta\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " un " + username2 + " raksta\u2026";
    },
    userIsTyping$1(username) {
      return username + " raksta\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " pameta t\u0113rz\u0113\u0161anu";
    },
    get$username(_) {
      return "Lietot\u0101jv\u0101rds";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " nos\u016bt\u012bja notikumu " + type;
    },
    get$unverified() {
      return "Neapliecin\u0101ta";
    },
    get$verified() {
      return "Apliecin\u0101ta";
    },
    get$verifyStart() {
      return "Uzs\u0101kt apliecin\u0101\u0161anu";
    },
    get$verifySuccess() {
      return "Apliecin\u0101\u0161ana veiksm\u012bga.";
    },
    get$verifyTitle() {
      return "Apliecina citu kontu";
    },
    get$visibilityOfTheChatHistory() {
      return "T\u0113rz\u0113\u0161anas v\u0113stures redzam\u012bba";
    },
    get$visibleForAllParticipants() {
      return "Redzama visiem dal\u012bbniekiem";
    },
    get$visibleForEveryone() {
      return "Redzama visiem";
    },
    get$voiceMessage() {
      return "Balss zi\u0146a";
    },
    get$waitingPartnerAcceptRequest() {
      return "Gaida, l\u012bdz biedrs apstiprin\u0101s piepras\u012bjumu\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Gaida, l\u012bdz biedrs apstiprin\u0101s emocijz\u012bmi\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Gaida, l\u012bdz biedrs apstiprin\u0101s skait\u013cus\u2026";
    },
    get$warning() {
      return "Uzman\u012bbu!";
    },
    get$weSentYouAnEmail() {
      return "M\u0113s nos\u016bt\u012bja e-pasta zi\u0146u";
    },
    get$whoCanPerformWhichAction() {
      return "Kur\u0161 var veikt k\u0101das darb\u012bbas";
    },
    get$whoIsAllowedToJoinThisGroup() {
      return "Kuram ir \u013cauts pievienoties \u0161ai kopai";
    },
    get$whyDoYouWantToReportThis() {
      return "K\u0101d\u0113\u013c v\u0113lies zi\u0146ot par \u0161o?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Ar \u0161\u012bm adres\u0113m var atjaunot savu paroli.";
    },
    get$writeAMessage() {
      return "Rakst\u012bt zi\u0146u\u2026";
    },
    writeAMessageFlag$2(l1flag, l2flag) {
      return "Write a message in " + l1flag + " or " + l2flag;
    },
    get$yes() {
      return "J\u0101";
    },
    get$you() {
      return "Tu";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Tu vairs nepiedalies \u0161aj\u0101 t\u0113rz\u0113\u0161an\u0101";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Tev tika liegta piek\u013cuve \u0161ai t\u0113rz\u0113\u0161anai";
    },
    get$yourPublicKey() {
      return "Tava publisk\u0101 atsl\u0113ga";
    },
    get$messageInfo() {
      return "Inform\u0101cija par zi\u0146u";
    },
    get$time(_) {
      return "Laiks";
    },
    get$sender() {
      return "S\u016bt\u012bt\u0101js";
    },
    get$openGallery() {
      return "Atv\u0113rt galeriju";
    },
    get$removeFromSpace() {
      return "No\u0146emt no vietas";
    },
    videoWithSize$1(size) {
      return "Video (" + size + ")";
    },
    get$markAsRead() {
      return "Atz\u012bm\u0113t k\u0101 las\u012btu";
    },
    get$reportUser() {
      return "Zi\u0146ot par lietot\u0101ju";
    },
    reactedWith$2(sender, reaction) {
      return sender + " atsauc\u0101s ar " + reaction;
    },
    get$pinMessage() {
      return "Piespraust istabai";
    },
    get$confirmEventUnpin() {
      return "Vai tie\u0161\u0101m neatgriezeniski atspraust \u0161o notikumu?";
    },
    get$emojis() {
      return "Emocijz\u012bmes";
    },
    get$youRejectedTheInvitation() {
      return "Tu noraid\u012bji uzaicin\u0101jumu";
    },
    get$youJoinedTheChat() {
      return "Tu pievienojies t\u0113rz\u0113\u0161anai";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Tu pie\u0146\u0113mi uzaicin\u0101jumu";
    },
    youBannedUser$1(user) {
      return "Tu " + user + " liedzi piek\u013cuvi";
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Tu atsauci " + user + " uzaicin\u0101jumu";
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 " + user + " Tevi uzaicin\u0101ja";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Tu uzaicin\u0101ji " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Tu izraid\u012bji " + user;
    },
    youUnbannedUser$1(user) {
      return "Tu atc\u0113li " + user + " piek\u013cuves liegumu";
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " pieklauv\u0113ja";
    },
    get$usersMustKnock() {
      return "Lietot\u0101jiem j\u0101pieklauv\u0113";
    },
    get$noOneCanJoin() {
      return "Neviens nevar pievienoties";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " v\u0113las pievienoties t\u0113rz\u0113\u0161anai.";
    },
    get$knock() {
      return "Pieklauv\u0113t";
    },
    get$users() {
      return "Lietot\u0101ji";
    },
    countFiles$1(count) {
      return count + " datnes";
    },
    get$user() {
      return "Lietot\u0101js";
    },
    get$custom() {
      return "Piel\u0101gots";
    },
    get$noKeyForThisMessage() {
      return "T\u0101 var notikt, ja zi\u0146a tika nos\u016bt\u012bta, pirms pieteicies sav\u0101 kont\u0101 \u0161aj\u0101 ier\u012bc\u0113.\n\nIr ar\u012b iesp\u0113jams, ka s\u016bt\u012bt\u0101js noliedza Tavu ier\u012bci vai kaut kas nog\u0101ja greizi ar interneta savienojumu.\n\nVai zi\u0146as ir las\u0101mas cit\u0101 sesij\u0101? Tad Tu vari p\u0101rs\u016bt\u012bt zi\u0146o no t\u0101s. J\u0101dodas uz Iestat\u012bjumi > Ier\u012bces un j\u0101p\u0101rliecin\u0101s, ka ier\u012bces viena otru ir apliecin\u0101ju\u0161as. Kad n\u0101kamreiz atv\u0113rsi istabu un abas sesijas b\u016bs priek\u0161pl\u0101n\u0101, atsl\u0113gas tiks autom\u0101tiski p\u0101rs\u016bt\u012btas.\n\nVai nev\u0113lies zaud\u0113t atsl\u0113gas, kad atsakies vai maini ier\u012bces? J\u0101p\u0101rliecin\u0101s, ka iestat\u012bjumos ir iesp\u0113jota t\u0113rz\u0113\u0161anas rezerves kopija.";
    },
    get$newSpace() {
      return "Jauna vieta";
    },
    get$doNotShowAgain() {
      return "Vairs ner\u0101d\u012bt";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Tuk\u0161a t\u0113rz\u0113\u0161ana (bija " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Atk\u0101rtoti atv\u0113rt t\u0113rz\u0113\u0161anu";
    },
    get$noBackupWarning() {
      return "Uzman\u012bbu! Bez t\u0113rz\u0113\u0161anas rezerves kopijas iesp\u0113jo\u0161anas tiks zaud\u0113ta piek\u013cuve sav\u0101m \u0161ifr\u0113taj\u0101m zi\u0146\u0101m. Ir \u013coti ieteicams iesp\u0113jot t\u0113rz\u0113\u0161anas rezerves kopiju pirms atteik\u0161an\u0101s.";
    },
    get$noOtherDevicesFound() {
      return "Netika atrastas citas ier\u012bces";
    },
    fileIsTooBigForServer$1(max) {
      return "Nevar nos\u016bt\u012bt. Serveris nodro\u0161ina pielikums l\u012bdz " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "P\u0101rl\u0113kt uz p\u0113d\u0113jo izlas\u012bto zi\u0146u";
    },
    get$readUpToHere() {
      return "Izlas\u012bts l\u012bdz \u0161ejienei";
    },
    get$jump() {
      return "P\u0101rl\u0113kt";
    },
    get$openLinkInBrowser() {
      return "Atv\u0113rt saiti p\u0101rl\u016bk\u0101";
    },
    get$profileNotFound() {
      return "Lietot\u0101ju server\u012b nevar\u0113ja atrast. Varb\u016bt ir neb\u016b\u0161anas ar savienojumu vai lietot\u0101js nepast\u0101v.";
    },
    get$setColorTheme() {
      return "Iestat\u012bt kr\u0101su izskatu:";
    },
    get$invite() {
      return "Uzaicin\u0101t";
    },
    get$invitePrivateChat() {
      return "\ud83d\udce8 Uzaicin\u0101t priv\u0101tu t\u0113rz\u0113\u0161anu";
    },
    get$invalidInput() {
      return "Neder\u012bga ievade.";
    },
    wrongPinEntered$1(seconds) {
      return "Ievad\u012bts nepareizs PIN. L\u016bgums m\u0113\u0123in\u0101t v\u0113lreiz p\u0113c " + seconds + " sekund\u0113m...";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$myLanguages() {
      return "My base and target languages";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$sourceLanguage() {
      return "Base language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$toggleToolSettingsDescription() {
      return "Here you can toggle your individual language tool settings.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$inviteStudentByUserNameDesc() {
      return "If your student already has an account, you can search for them.";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocabulary";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$abDisplayName() {
      return "Abkhaz";
    },
    get$aaDisplayName() {
      return "Afar";
    },
    get$afDisplayName() {
      return "Afrikaans";
    },
    get$akDisplayName() {
      return "Akan";
    },
    get$sqDisplayName() {
      return "Albanian";
    },
    get$amDisplayName() {
      return "Amharic";
    },
    get$arDisplayName() {
      return "Arabic";
    },
    get$anDisplayName() {
      return "Aragonese";
    },
    get$hyDisplayName() {
      return "Armenian";
    },
    get$asDisplayName() {
      return "Assamese";
    },
    get$avDisplayName() {
      return "Avaric";
    },
    get$aeDisplayName() {
      return "Avestan";
    },
    get$ayDisplayName() {
      return "Aymara";
    },
    get$azDisplayName() {
      return "Azerbaijani";
    },
    get$bmDisplayName() {
      return "Bambara";
    },
    get$baDisplayName() {
      return "Bashkir";
    },
    get$euDisplayName() {
      return "Basque";
    },
    get$beDisplayName() {
      return "Belarusian";
    },
    get$bnDisplayName() {
      return "Bengali";
    },
    get$bhDisplayName() {
      return "Bihari";
    },
    get$biDisplayName() {
      return "Bislama";
    },
    get$bsDisplayName() {
      return "Bosnian";
    },
    get$brDisplayName() {
      return "Breton";
    },
    get$bgDisplayName() {
      return "Bulgarian";
    },
    get$myDisplayName() {
      return "Burmese";
    },
    get$caDisplayName() {
      return "Catalan, Valencian";
    },
    get$chDisplayName() {
      return "Chamorro";
    },
    get$ceDisplayName() {
      return "Chechen";
    },
    get$nyDisplayName() {
      return "Chichewa, Chewa, Nyanja";
    },
    get$zhDisplayName() {
      return "Chinese";
    },
    get$cvDisplayName() {
      return "Chuvash";
    },
    get$kwDisplayName() {
      return "Cornish";
    },
    get$coDisplayName() {
      return "Corsican";
    },
    get$crDisplayName() {
      return "Cree";
    },
    get$hrDisplayName() {
      return "Croatian";
    },
    get$csDisplayName() {
      return "Czech";
    },
    get$daDisplayName() {
      return "Danish";
    },
    get$dvDisplayName() {
      return "Divehi; Dhivehi; Maldivian;";
    },
    get$nlDisplayName() {
      return "Dutch";
    },
    get$enDisplayName() {
      return "English";
    },
    get$eoDisplayName() {
      return "Esperanto";
    },
    get$etDisplayName() {
      return "Estonian";
    },
    get$eeDisplayName() {
      return "Ewe";
    },
    get$foDisplayName() {
      return "Faroese";
    },
    get$fjDisplayName() {
      return "Fijian";
    },
    get$fiDisplayName() {
      return "Finnish";
    },
    get$frDisplayName() {
      return "French";
    },
    get$ffDisplayName() {
      return "Fula; Fulah; Pulaar; Pular";
    },
    get$glDisplayName() {
      return "Galician";
    },
    get$kaDisplayName() {
      return "Georgian";
    },
    get$deDisplayName() {
      return "German";
    },
    get$elDisplayName() {
      return "Greek, Modern";
    },
    get$gnDisplayName() {
      return "Guaran\xed";
    },
    get$guDisplayName() {
      return "Gujarati";
    },
    get$htDisplayName() {
      return "Haitian, Haitian Creole";
    },
    get$haDisplayName() {
      return "Hausa";
    },
    get$heDisplayName() {
      return "Hebrew (modern)";
    },
    get$hzDisplayName() {
      return "Herero";
    },
    get$hiDisplayName() {
      return "Hindi";
    },
    get$hoDisplayName() {
      return "Hiri Motu";
    },
    get$huDisplayName() {
      return "Hungarian";
    },
    get$iaDisplayName() {
      return "Interlingua";
    },
    get$idDisplayName() {
      return "Indonesian";
    },
    get$ieDisplayName() {
      return "Interlingue";
    },
    get$gaDisplayName() {
      return "Irish";
    },
    get$igDisplayName() {
      return "Igbo";
    },
    get$ikDisplayName() {
      return "Inupiaq";
    },
    get$ioDisplayName() {
      return "Ido";
    },
    get$isDisplayName() {
      return "Icelandic";
    },
    get$itDisplayName() {
      return "Italian";
    },
    get$iuDisplayName() {
      return "Inuktitut";
    },
    get$jaDisplayName() {
      return "Japanese";
    },
    get$jvDisplayName() {
      return "Javanese";
    },
    get$klDisplayName() {
      return "Kalaallisut, Greenlandic";
    },
    get$knDisplayName() {
      return "Kannada";
    },
    get$krDisplayName() {
      return "Kanuri";
    },
    get$ksDisplayName() {
      return "Kashmiri";
    },
    get$kkDisplayName() {
      return "Kazakh";
    },
    get$kmDisplayName() {
      return "Khmer";
    },
    get$kiDisplayName() {
      return "Kikuyu, Gikuyu";
    },
    get$rwDisplayName() {
      return "Kinyarwanda";
    },
    get$kyDisplayName() {
      return "Kirghiz, Kyrgyz";
    },
    get$kvDisplayName() {
      return "Komi";
    },
    get$kgDisplayName() {
      return "Kongo";
    },
    get$koDisplayName() {
      return "Korean";
    },
    get$kuDisplayName() {
      return "Kurdish";
    },
    get$kjDisplayName() {
      return "Kwanyama, Kuanyama";
    },
    get$laDisplayName() {
      return "Latin";
    },
    get$lbDisplayName() {
      return "Luxembourgish, Letzeburgesch";
    },
    get$lgDisplayName() {
      return "Luganda";
    },
    get$liDisplayName() {
      return "Limburgish, Limburgan, Limburger";
    },
    get$lnDisplayName() {
      return "Lingala";
    },
    get$loDisplayName() {
      return "Lao";
    },
    get$ltDisplayName() {
      return "Lithuanian";
    },
    get$luDisplayName() {
      return "Luba-Katanga";
    },
    get$lvDisplayName() {
      return "Latvian";
    },
    get$gvDisplayName() {
      return "Manx";
    },
    get$mkDisplayName() {
      return "Macedonian";
    },
    get$mgDisplayName() {
      return "Malagasy";
    },
    get$msDisplayName() {
      return "Malay";
    },
    get$mlDisplayName() {
      return "Malayalam";
    },
    get$mtDisplayName() {
      return "Maltese";
    },
    get$miDisplayName() {
      return "M\u0101ori";
    },
    get$mrDisplayName() {
      return "Marathi (Mar\u0101\u1e6dh\u012b)";
    },
    get$mhDisplayName() {
      return "Marshallese";
    },
    get$mnDisplayName() {
      return "Mongolian";
    },
    get$naDisplayName() {
      return "Nauru";
    },
    get$nvDisplayName() {
      return "Navajo, Navaho";
    },
    get$nbDisplayName() {
      return "Norwegian Bokm\xe5l";
    },
    get$ndDisplayName() {
      return "North Ndebele";
    },
    get$neDisplayName() {
      return "Nepali";
    },
    get$ngDisplayName() {
      return "Ndonga";
    },
    get$nnDisplayName() {
      return "Norwegian Nynorsk";
    },
    get$noDisplayName() {
      return "Norwegian";
    },
    get$iiDisplayName() {
      return "Nuosu";
    },
    get$nrDisplayName() {
      return "South Ndebele";
    },
    get$ocDisplayName() {
      return "Occitan";
    },
    get$ojDisplayName() {
      return "Ojibwe, Ojibwa";
    },
    get$cuDisplayName() {
      return "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic";
    },
    get$omDisplayName() {
      return "Oromo";
    },
    get$orDisplayName() {
      return "Oriya";
    },
    get$osDisplayName() {
      return "Ossetian, Ossetic";
    },
    get$paDisplayName() {
      return "Panjabi, Punjabi";
    },
    get$piDisplayName() {
      return "P\u0101li";
    },
    get$faDisplayName() {
      return "Persian";
    },
    get$plDisplayName() {
      return "Polish";
    },
    get$psDisplayName() {
      return "Pashto, Pushto";
    },
    get$ptDisplayName() {
      return "Portuguese";
    },
    get$quDisplayName() {
      return "Quechua";
    },
    get$rmDisplayName() {
      return "Romansh";
    },
    get$rnDisplayName() {
      return "Kirundi";
    },
    get$roDisplayName() {
      return "Romanian, Moldavian, Moldovan";
    },
    get$ruDisplayName() {
      return "Russian";
    },
    get$saDisplayName() {
      return "Sanskrit (Sa\u1e41sk\u1e5bta)";
    },
    get$scDisplayName() {
      return "Sardinian";
    },
    get$sdDisplayName() {
      return "Sindhi";
    },
    get$seDisplayName() {
      return "Northern Sami";
    },
    get$smDisplayName() {
      return "Samoan";
    },
    get$sgDisplayName() {
      return "Sango";
    },
    get$srDisplayName() {
      return "Serbian";
    },
    get$gdDisplayName() {
      return "Scottish Gaelic, Gaelic";
    },
    get$snDisplayName() {
      return "Shona";
    },
    get$siDisplayName() {
      return "Sinhala, Sinhalese";
    },
    get$skDisplayName() {
      return "Slovak";
    },
    get$slDisplayName() {
      return "Slovene";
    },
    get$soDisplayName() {
      return "Somali";
    },
    get$stDisplayName() {
      return "Southern Sotho";
    },
    get$esDisplayName() {
      return "Spanish";
    },
    get$suDisplayName() {
      return "Sundanese";
    },
    get$swDisplayName() {
      return "Swahili";
    },
    get$ssDisplayName() {
      return "Swati";
    },
    get$svDisplayName() {
      return "Swedish";
    },
    get$taDisplayName() {
      return "Tamil";
    },
    get$teDisplayName() {
      return "Telugu";
    },
    get$tgDisplayName() {
      return "Tajik";
    },
    get$thDisplayName() {
      return "Thai";
    },
    get$tiDisplayName() {
      return "Tigrinya";
    },
    get$boDisplayName() {
      return "Tibetan Standard, Tibetan, Central";
    },
    get$tkDisplayName() {
      return "Turkmen";
    },
    get$tlDisplayName() {
      return "Tagalog";
    },
    get$tnDisplayName() {
      return "Tswana";
    },
    get$toDisplayName() {
      return "Tonga (Tonga Islands)";
    },
    get$trDisplayName() {
      return "Turkish";
    },
    get$tsDisplayName() {
      return "Tsonga";
    },
    get$ttDisplayName() {
      return "Tatar";
    },
    get$twDisplayName() {
      return "Twi";
    },
    get$tyDisplayName() {
      return "Tahitian";
    },
    get$ugDisplayName() {
      return "Uighur, Uyghur";
    },
    get$ukDisplayName() {
      return "Ukrainian";
    },
    get$urDisplayName() {
      return "Urdu";
    },
    get$uzDisplayName() {
      return "Uzbek";
    },
    get$veDisplayName() {
      return "Venda";
    },
    get$viDisplayName() {
      return "Vietnamese";
    },
    get$voDisplayName() {
      return "Volap\xfck";
    },
    get$waDisplayName() {
      return "Walloon";
    },
    get$cyDisplayName() {
      return "Welsh";
    },
    get$woDisplayName() {
      return "Wolof";
    },
    get$fyDisplayName() {
      return "Western Frisian";
    },
    get$xhDisplayName() {
      return "Xhosa";
    },
    get$yiDisplayName() {
      return "Yiddish";
    },
    get$yoDisplayName() {
      return "Yoruba";
    },
    get$zaDisplayName() {
      return "Zhuang, Chuang";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$zuDisplayName() {
      return "Zulu";
    },
    get$hawDisplayName() {
      return "Hawaiian";
    },
    get$hmnDisplayName() {
      return "Hmong";
    },
    get$multiDisplayName() {
      return "Multi";
    },
    get$cebDisplayName() {
      return "Cebuano";
    },
    get$dzDisplayName() {
      return "Dzongkha";
    },
    get$iwDisplayName() {
      return "Hebrew";
    },
    get$jwDisplayName() {
      return "Javanese";
    },
    get$moDisplayName() {
      return "Moldavian";
    },
    get$shDisplayName() {
      return "Serbo-Croatian";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$declinedInvitation() {
      return "Declined invitation";
    },
    get$acceptedInvitation() {
      return "Accepted invitation";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    get$pleaseEnterANumber() {
      return "L\u016bgums ievad\u012bt skaitli liel\u0101ku par 0";
    },
    get$archiveRoomDescription() {
      return "T\u0113rz\u0113\u0161ana tiks p\u0101rvietota uz arh\u012bvu. Citi lietot\u0101ji redz\u0113s, ka pameti t\u0113rz\u0113\u0161anu.";
    },
    get$roomUpgradeDescription() {
      return "T\u0113rz\u0113\u0161ana tad tiks atk\u0101rtoti izveidota ar jauno istabas versiju. Visiem dal\u012bbniekiem tiks pazi\u0146ots, ka vi\u0146iem ir j\u0101p\u0101rsl\u0113dzas uz jauno t\u0113rz\u0113\u0161anu. Vair\u0101k par istabu versij\u0101m var atrast https://spec.matrix.org/latest/rooms/";
    },
    get$removeDevicesDescription() {
      return "Tu tiksi izrakst\u012bts no \u0161\u012bs ier\u012bces un vairs nevar\u0113si sa\u0146emt zi\u0146as.";
    },
    get$banUserDescription() {
      return "Lietot\u0101jam tiks liegta piek\u013cuve t\u0113rz\u0113\u0161anai, un vairs nevar\u0113s v\u0113lreiz pievienoties t\u0113rz\u0113\u0161anai, l\u012bdz liegums tiks atcelts.";
    },
    get$unbanUserDescription() {
      return "Lietot\u0101js var\u0113s atkal pievienoties t\u0113rz\u0113\u0161anai, ja m\u0113\u0123in\u0101s.";
    },
    get$kickUserDescription() {
      return "Lietot\u0101js ir izmests no t\u0113rz\u0113\u0161anas, bet piek\u013cuve nav liegta. Publisk\u0101s t\u0113rz\u0113\u0161an\u0101s lietot\u0101js var atk\u0101rtoti pievienoties jebkur\u0101 laik\u0101.";
    },
    get$makeAdminDescription() {
      return "Tikl\u012bdz \u0161is lietot\u0101js tiks padar\u012bts par p\u0101rvald\u012bt\u0101ju, to vairs nevar\u0113s atdar\u012bt, jo tad tam b\u016bs t\u0101das pa\u0161as at\u013caujas k\u0101 Tev.";
    },
    get$yourGlobalUserIdIs() {
      return "Visp\u0101r\u0113jais lietot\u0101ja Id ir: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Diem\u017e\u0113l ar "' + query + '" netika atrasts neviens lietot\u0101js. L\u016bgums p\u0101rbaud\u012bt, vai ir pie\u013cauta drukas k\u013c\u016bda.';
    },
    get$knocking() {
      return "Klauv\u0113";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "T\u0113rz\u0113\u0161ana var tikt atkl\u0101ta ar mekl\u0113\u0161anu " + server;
    },
    get$searchChatsRooms() {
      return "Mekl\u0113t #t\u0113rz\u0113\u0161anas, @lietot\u0101jus...";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$nothingFound() {
      return "Nekas netika atrasts...";
    },
    get$wrongRecoveryKey() {
      return "Atvaino... Ne\u0161\u0137iet, ka \u0161\u012b b\u016btu pareiza atkop\u0161anas atsl\u0113ga.";
    },
    get$startConversation() {
      return "Uzs\u0101kt sarunu";
    },
    get$commandHint_sendraw() {
      return "Nos\u016bt\u012bt neapstr\u0101d\u0101tu JSON";
    },
    get$searchForUsers() {
      return "Mekl\u0113t @lietot\u0101jus...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "L\u016bgums ievad\u012bt savu pa\u0161reiz\u0113jo paroli";
    },
    get$newPassword() {
      return "Jauna parole";
    },
    get$pleaseChooseAStrongPassword() {
      return "L\u016bgums izv\u0113l\u0113ties sp\u0113c\u012bgu paroli";
    },
    get$passwordsDoNotMatch() {
      return "Paroles nesakr\u012bt";
    },
    get$passwordIsWrong() {
      return "Ievad\u012bt\u0101 parole ir nepareiza";
    },
    get$publicChatAddresses() {
      return "Publiskas t\u0113rz\u0113\u0161anas adreses";
    },
    get$createNewAddress() {
      return "Izveidot jaunu adresi";
    },
    get$joinSpace() {
      return "Pievienoties vietai";
    },
    get$publicSpaces() {
      return "Publiskas vietas";
    },
    get$decline() {
      return "Atteikt";
    },
    get$thisDevice() {
      return "\u0160\u012b ier\u012bce:";
    },
    get$initAppError() {
      return "Atgad\u012bj\u0101s k\u013c\u016bda lietotnes s\u0101kn\u0113\u0161anas laik\u0101";
    },
    get$userRole() {
      return "Lietot\u0101ja loma";
    },
    searchIn$1(chat) {
      return 'Mekl\u0113t t\u0113rz\u0113\u0161an\u0101 "' + chat + '"...';
    },
    get$searchMore() {
      return "Mekl\u0113t vair\u0101k...";
    },
    get$gallery() {
      return "Galerija";
    },
    get$files(_) {
      return "Datnes";
    },
    sessionLostBody$2(url, error) {
      return "Sesija ir zaud\u0113ta. L\u016bgums zi\u0146ot par \u0161o k\u013c\u016bdu izstr\u0101d\u0101t\u0101jiem " + url + ". K\u013c\u016bdas zi\u0146ojums ir: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "Lietotne tagad m\u0113\u0123ina atjaunot sesiju no rezerves kopijas. L\u016bgums zi\u0146ot par \u0161o k\u013c\u016bdu izstr\u0101d\u0101t\u0101jiem " + url + ". K\u013c\u016bdas zi\u0146ojums ir: " + error;
    },
    forwardMessageTo$1(roomName) {
      return "P\u0101rs\u016bt\u012bt zi\u0146u uz " + roomName + "?";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$define(_) {
      return "Define";
    },
    get$sendReadReceipts() {
      return "Nos\u016bt\u012bt las\u012b\u0161anas atskaites";
    },
    get$sendTypingNotificationsDescription() {
      return "Citi t\u0113rz\u0113\u0161anas dal\u012bbnieki var redz\u0113t, kad raksti jaunu zi\u0146u.";
    },
    get$sendReadReceiptsDescription() {
      return "Citi t\u0113rz\u0113\u0161anas dal\u012bbnieki var redz\u0113t, kad izlas\u012bji zi\u0146u.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Apliecin\u0101t otru ier\u012bci";
    },
    get$verifyOtherDeviceDescription() {
      return "Kad apliecini citu ier\u012bci, \u0161\u012bs ier\u012bces var apmain\u012bt atsl\u0113gas, palielinot visp\u0101r\u0113jo dro\u0161\u012bbu. \ud83d\udcaa Kad uzs\u0101c apliecin\u0101\u0161anu, ab\u0101s ier\u012bc\u0113s lietotn\u0113 par\u0101d\u012bsies uznirsto\u0161ais logs. Taj\u0101 b\u016bs redzamas da\u017e\u0101das emocijz\u012bmes vai skait\u013ci, kas j\u0101sal\u012bdzina ab\u0101s ier\u012bc\u0113s. Vislab\u0101k, ja abas ier\u012bces ir pieejams, pirms tiek uzs\u0101kta apliecin\u0101\u0161ana. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " apstiprin\u0101ja atsl\u0113gas apliecin\u0101\u0161anu";
    },
    canceledKeyVerification$1(sender) {
      return sender + " atc\u0113la atsl\u0113gas apliecin\u0101\u0161anu";
    },
    completedKeyVerification$1(sender) {
      return sender + " pabeidza atsl\u0113gas apliecin\u0101\u0161anu";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " ir gatavs atsl\u0113gas apliecin\u0101\u0161anai";
    },
    requestedKeyVerification$1(sender) {
      return sender + " piepras\u012bja atsl\u0113gas apliecin\u0101\u0161anu";
    },
    startedKeyVerification$1(sender) {
      return sender + " uzs\u0101ka atsl\u0113gas apliecin\u0101\u0161anu";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$selectToDefine() {
      return "Click any word to see its definition!";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$stickers() {
      return "Uzl\u012bmes";
    },
    get$discover() {
      return "Atkl\u0101t";
    },
    get$commandHint_ignore() {
      return "Ne\u0146emt v\u0113r\u0101 nor\u0101d\u012bto Matrix Id";
    },
    get$commandHint_unignore() {
      return "Atcelt nor\u0101d\u012bt\u0101 Matrix Id ne\u0146em\u0161anu v\u0113r\u0101";
    },
    get$accuracy(_) {
      return "Accuracy";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run language assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run language assistance after typing messages";
    },
    get$leaveRoomDescription() {
      return "The chat will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$leaveSpaceDescription() {
      return "All chats within this space will be moved to the archive. Other users will be able to see that you have left the space.";
    },
    get$onlyAdminDescription() {
      return "Since there are no other admins, all other participants will also be removed.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$spaceCapacity() {
      return "Space capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$spaceCapacityHasBeenChanged() {
      return "Space capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of non-admins.";
    },
    get$spaceCapacitySetTooLow() {
      return "Space capacity cannot be set below the current number of non-admins.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of non-admins allowed in a chat.";
    },
    get$spaceCapacityExplanation() {
      return "Space capacity limits the number of non-admins allowed in a space.";
    },
    get$chatExceedsCapacity() {
      return "This chat exceeds its capacity.";
    },
    get$spaceExceedsCapacity() {
      return "This space exceeds its capacity.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    thereAreCountUsersBlocked$1(count) {
      return "\u0160obr\u012bd ir izsl\u0113gti " + count + " lietot\u0101ji.";
    },
    get$restricted() {
      return "Ierobe\u017eots";
    },
    get$knockRestricted() {
      return "Pieklauv\u0113t ierobe\u017eotajiem";
    },
    get$createNewSpace() {
      return "Jauna vieta";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "See how well you did by looking at your Accuracy and Words Per Minute scores";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$continueText() {
      return "Turpin\u0101t";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$sendCanceled() {
      return "S\u016bt\u012b\u0161ana atcelta";
    },
    goToSpace$1(space) {
      return "Doties uz vietu: " + space;
    },
    get$markAsUnread() {
      return "Atz\u012bm\u0113t k\u0101 nelas\u012btu";
    },
    userLevel$1(level) {
      return "" + level + " - Lietot\u0101js";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderators";
    },
    adminLevel$1(level) {
      return "" + level + " - P\u0101rvald\u012bt\u0101js";
    },
    get$changeGeneralChatSettings() {
      return "Main\u012bt visp\u0101r\u0113jos t\u0113rz\u0113\u0161anas iestat\u012bjumus";
    },
    get$inviteOtherUsers() {
      return "Uzaicin\u0101t \u0161aj\u0101 t\u0113rz\u0113\u0161an\u0101 citus lietot\u0101jus";
    },
    get$changeTheChatPermissions() {
      return "Main\u012bt t\u0113rz\u0113\u0161anas at\u013caujas";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Main\u012bt t\u0113rz\u0113\u0161anas v\u0113stures redzam\u012bbu";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Main\u012bt t\u0113rz\u0113\u0161anas galveno publisko adresi";
    },
    get$sendRoomNotifications() {
      return "S\u016bt\u012bt @istaba pazi\u0146ojumus";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Main\u012bt t\u0113rz\u0113\u0161anas aprakstu";
    },
    get$chatPermissionsDescription() {
      return "Noteikt, kur\u0161 sp\u0113ka l\u012bmenis ir nepiecie\u0161ams noteikt\u0101m darb\u012bb\u0101m \u0161aj\u0101 t\u0113rz\u0113\u0161an\u0101. Sp\u0113ka l\u012bme\u0146i 0, 50 un 100 parasti atbilst lietot\u0101jiem, moderatoriem un p\u0101rvald\u012bt\u0101jiem, bet ir iesp\u0113jams jebk\u0101ds iedal\u012bjums.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Atjaunin\u0101jums " + version + " uzst\u0101d\u012bts.";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Neizskat\u0101s p\u0113c sader\u012bga m\u0101jasservera. Nepareizs URL?";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$reportContentIssueTitle() {
      return "Report content issue";
    },
    get$feedback() {
      return "Optional feedback";
    },
    get$reportContentIssueDescription() {
      return "Uh oh! AI can faciliate personalized learning experiences but... also hallucinates. Please provide any feedback you have and we'll try again.";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$messageNotInTargetLang() {
      return "Message not in target language";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$unlockedLanguageTools() {
      return "You\u2019ve unlocked the language tools for this message. Try them out by clicking below!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$calculatingFileSize() {
      return "Apr\u0113\u0137ina datnes lielumu...";
    },
    get$prepareSendingAttachment() {
      return "Sagatavo pielikuma nos\u016bt\u012b\u0161anu...";
    },
    get$sendingAttachment() {
      return "Nos\u016bta pielikumu...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Nos\u016bta " + index + ". pielikumu no " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Sasniegts servera ierobe\u017eojums. Gaida " + seconds + " sekundes...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Piez\u012bme: kad visas ier\u012bces tiek savienotas ar t\u0113rz\u0113\u0161anas rezerves kopiju, t\u0101s tiek autom\u0101tiski apliecin\u0101tas.";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$blur(_) {
      return "Aizmiglojums:";
    },
    get$opacity(_) {
      return "Necaurredzam\u012bba:";
    },
    get$setWallpaper() {
      return "Iestat\u012bt ekr\u0101ntapeti";
    },
    get$noContactInformationProvided() {
      return "Serveris nesniedz nek\u0101du der\u012bgu sazi\u0146as inform\u0101ciju";
    },
    get$contactServerAdmin() {
      return "Sazin\u0101ties ar servera p\u0101rvald\u012bt\u0101ju";
    },
    get$contactServerSecurity() {
      return "Sazin\u0101ties ar servera dro\u0161\u012bbas uztur\u0113t\u0101jiem";
    },
    get$supportPage() {
      return "Atbalsta lapa";
    },
    get$serverInformation() {
      return "Inform\u0101cija par serveri:";
    },
    get$name(_) {
      return "Nosaukums";
    },
    get$version(_) {
      return "Versija";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Teksts treknrakst\u0101";
    },
    get$italicText() {
      return "Teksts sl\u012bprakst\u0101";
    },
    get$strikeThrough() {
      return "P\u0101rsv\u012btrots";
    },
    get$pleaseFillOut() {
      return "L\u016bgums aizpild\u012bt";
    },
    get$invalidUrl() {
      return "Neder\u012bgs URL";
    },
    get$addLink() {
      return "Pievienot saiti";
    },
    get$unableToJoinChat() {
      return "Unable to join chat. Maybe the other party has already closed the conversation.";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$mandatoryUpdateRequired() {
      return "Mandatory Update Required";
    },
    get$updateAvailable() {
      return "Update Available";
    },
    get$mandatoryUpdateRequiredDesc() {
      return "A new version of the app is required to continue. Please update now to proceed.";
    },
    get$updateAvailableDesc() {
      return "A new version of the app is available. Update now for the latest features and improvements!";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language";
    },
    get$couldNotFindTTS() {
      return "We couldn't find a text-to-speech engine for your current target language. ";
    },
    get$ttsInstructionsHyperlink() {
      return "Click here to view instructions for downloading a new voice on your device.";
    },
    get$currentVersion() {
      return "Current Version";
    },
    get$latestVersion() {
      return "Latest Version";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseAgreeToTOS() {
      return "Please agree to the Terms and Conditions";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.L10nLv, C.L10n);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nLv":{"L10n":[]}}'));
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_263", e: "endPart", h: h});
})($__dart_deferred_initializers__, "BVVUIJUsMwd6VRNRCsXpECRJYvE=");
;
//# sourceMappingURL=main.dart.js_263.part.js.map
