// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.6.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_210", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, C,
  A = {
    L10nFa$() {
      return new A.L10nFa(B.canonicalizedLocale("fa"));
    },
    L10nFa: function L10nFa(t0) {
      this.localeName = t0;
    }
  };
  B = holdersList[0];
  C = holdersList[51];
  A = hunkHelpers.updateHolder(holdersList[18], A);
  A.L10nFa.prototype = {
    get$alwaysUse24HourFormat() {
      return "false";
    },
    get$repeatPassword() {
      return "\u062a\u06a9\u0631\u0627\u0631 \u0631\u0645\u0632\u0639\u0628\u0648\u0631";
    },
    get$notAnImage() {
      return "\u06cc\u06a9 \u0641\u0627\u06cc\u0644 \u062a\u0635\u0648\u06cc\u0631\u06cc \u0646\u06cc\u0633\u062a.";
    },
    get$remove(_) {
      return "\u062d\u0630\u0641 \u06a9\u0631\u062f\u0646";
    },
    get$importNow() {
      return "Import now";
    },
    get$importEmojis() {
      return "Import Emojis";
    },
    get$importFromZipFile() {
      return "Import from .zip file";
    },
    get$exportEmotePack() {
      return "Export Emote pack as .zip";
    },
    get$replace(_) {
      return "Replace";
    },
    aboutHomeserver$1(homeserver) {
      return "About " + homeserver;
    },
    get$accept(_) {
      return "\u067e\u0630\u06cc\u0631\u0634";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " \u062f\u0639\u0648\u062a \u0631\u0627 \u067e\u0630\u06cc\u0631\u0641\u062a";
    },
    get$account() {
      return "\u062d\u0633\u0627\u0628";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0633\u0631\u062a\u0627\u0633\u0631 \u0631\u0627 \u0641\u0639\u0627\u0644 \u06a9\u0631\u062f";
    },
    get$addEmail() {
      return "\u0627\u0641\u0632\u0648\u062f\u0646 \u0627\u06cc\u0645\u06cc\u0644";
    },
    supposedMxid$1(mxid) {
      return "\u0627\u06cc\u0646 \u0628\u0627\u06cc\u062f " + mxid + " \u0628\u0627\u0634\u062f";
    },
    get$addToSpace() {
      return "\u0628\u0647 \u0641\u0636\u0627 \u0627\u0636\u0627\u0641\u0647 \u06a9\u0646\u06cc\u062f";
    },
    get$admin() {
      return "\u0627\u062f\u0645\u06cc\u0646";
    },
    get$alias() {
      return "\u0646\u0627\u0645 \u0645\u0633\u062a\u0639\u0627\u0631";
    },
    get$all() {
      return "\u0647\u0645\u0647";
    },
    get$commandHint_googly() {
      return "\u0627\u0631\u0633\u0627\u0644 \u0686\u0646\u062f \u0686\u0634\u0645 \u06af\u0648\u06af\u0648\u0644\u06cc";
    },
    get$commandHint_cuddle() {
      return "\u0627\u0631\u0633\u0627\u0644 \u0622\u063a\u0648\u0634";
    },
    get$commandHint_hug() {
      return "\u0627\u0631\u0633\u0627\u0644 \u0628\u063a\u0644";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " \u0628\u0647 \u0634\u0645\u0627 \u0686\u0634\u0645\u0627\u0646 \u06af\u0648\u06af\u0648\u0644\u06cc \u0645\u06cc\u200c\u0641\u0631\u0633\u062a\u062f";
    },
    cuddleContent$1(senderName) {
      return senderName + " \u0634\u0645\u0627 \u0631\u0627 \u062f\u0631 \u0622\u063a\u0648\u0634 \u0645\u06cc\u200c\u06af\u06cc\u0631\u062f";
    },
    hugContent$1(senderName) {
      return senderName + " \u0634\u0645\u0627 \u0631\u0627 \u0628\u063a\u0644 \u0645\u06cc\u200c\u06a9\u0646\u062f";
    },
    answeredTheCall$1(senderName) {
      return senderName + " \u067e\u0627\u0633\u062e \u062a\u0645\u0627\u0633 \u0631\u0627 \u062f\u0627\u062f";
    },
    get$anyoneCanJoin() {
      return "\u0647\u0631\u06a9\u0633\u06cc \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u062f \u0628\u067e\u06cc\u0648\u0646\u062f\u062f";
    },
    get$archive() {
      return "\u0628\u0627\u06cc\u06af\u0627\u0646\u06cc";
    },
    get$areGuestsAllowedToJoin() {
      return "\u0622\u06cc\u0627 \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0645\u0647\u0645\u0627\u0646 \u0627\u062c\u0627\u0632\u0647 \u067e\u06cc\u0648\u0633\u062a\u0646 \u062f\u0627\u0631\u0646\u062f";
    },
    get$areYouSure() {
      return "\u0645\u0637\u0645\u0626\u0646 \u0647\u0633\u062a\u06cc\u062f\u061f";
    },
    get$areYouSureYouWantToLogout() {
      return "\u0645\u0637\u0645\u0626\u0646 \u0647\u0633\u062a\u06cc\u062f \u0645\u06cc\u200c\u062e\u0648\u0627\u0647\u06cc\u062f \u062e\u0627\u0631\u062c \u0634\u0648\u06cc\u062f\u061f";
    },
    get$askSSSSSign() {
      return "\u0644\u0637\u0641\u0627 \u0639\u0628\u0627\u0631\u062a \u0639\u0628\u0648\u0631 \u06cc\u0627 \u06a9\u0644\u06cc\u062f \u0628\u0627\u0632\u06cc\u0627\u0628\u06cc \u062d\u0627\u0641\u0638\u0647 \u0627\u0645\u0646 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f \u062a\u0627 \u0628\u062a\u0648\u0627\u0646\u06cc\u062f \u0634\u062e\u0635 \u062f\u06cc\u06af\u0631 \u0631\u0627 \u0627\u0645\u0636\u0627 \u06a9\u0646\u06cc\u062f.";
    },
    askVerificationRequest$1(username) {
      return "\u0627\u06cc\u0646 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u062a\u0627\u06cc\u06cc\u062f \u0631\u0627 \u0627\u0632 " + username + " \u0645\u06cc\u200c\u067e\u0630\u06cc\u0631\u06cc\u062f\u061f";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "\u0633\u0631\u0648\u0631 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u062f \u0627\u06cc\u0646 \u06af\u0648\u0646\u0647\u200c\u0647\u0627\u06cc \u0648\u0631\u0648\u062f\u202e \u0631\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u062a\u06cc \u06a9\u0646\u062f:\n" + serverVersions + string$.______ + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Send typing notifications";
    },
    get$swipeRightToLeftToReply() {
      return "Swipe right to left to reply";
    },
    get$sendOnEnter() {
      return "\u0627\u0631\u0633\u0627\u0644 \u0628\u0627 \u06a9\u0644\u06cc\u062f \u062a\u0639\u0648\u064a\u0636 \u0633\u0637\u0631";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "\u0633\u0631\u0648\u0631 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u062f \u0627\u06cc\u0646 \u0646\u0633\u062e\u0647\u200c\u0647\u0627\u06cc \u0645\u0634\u062e\u0635\u0627\u062a \u0631\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u06a9\u0646\u062f:\n" + serverVersions + string$.______ + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return "" + chats + " chats and " + participants + " participants";
    },
    get$noMoreChatsFound() {
      return "No more chats found...";
    },
    get$noChatsFoundHere() {
      return "No chats found here yet. Start a new chat with someone by using the button below. \u2935\ufe0f";
    },
    get$unread() {
      return "Unread";
    },
    get$space() {
      return "Space";
    },
    get$spaces() {
      return "Spaces";
    },
    get$banFromChat() {
      return "\u0627\u0632 \u06af\u067e \u0645\u062d\u0631\u0648\u0645 \u06a9\u0646\u06cc\u062f";
    },
    get$banned() {
      return "\u0645\u062d\u0631\u0648\u0645 \u0634\u062f\u0647";
    },
    bannedUser$2(username, targetName) {
      return username + " " + targetName + " \u0631\u0627 \u0645\u062d\u0631\u0648\u0645 \u06a9\u0631\u062f";
    },
    get$blockDevice() {
      return "\u062f\u0633\u062a\u06af\u0627\u0647 \u0631\u0627 \u0645\u0633\u062f\u0648\u062f \u06a9\u0646\u06cc\u062f";
    },
    get$blocked() {
      return "\u0645\u0633\u062f\u0648\u062f \u0634\u062f\u0647";
    },
    get$cancel(_) {
      return "\u0644\u063a\u0648";
    },
    cantOpenUri$1(uri) {
      return "\u0646\u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u0645 \u0627\u06cc\u0646 \u0622\u062f\u0631\u0633 \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u06cc \u0631\u0627 \u0628\u0627\u0632 \u06a9\u0646\u06cc\u0645: " + uri;
    },
    get$changeDeviceName() {
      return "\u0646\u0627\u0645 \u062f\u0633\u062a\u06af\u0627\u0647 \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0647\u06cc\u062f";
    },
    changedTheChatAvatar$1(username) {
      return username + " \u062a\u0635\u0648\u06cc\u0631 \u06af\u067e \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " \u062a\u0648\u0635\u06cc\u0641 \u06af\u067e \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f \u0628\u0647: \xab" + description + "\xbb";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " \u0646\u0627\u0645 \u06af\u067e \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f \u0628\u0647: \xab" + chatname + "\xbb";
    },
    changedTheChatPermissions$1(username) {
      return username + " \u0627\u062c\u0627\u0632\u0647\u200c\u0647\u0627\u06cc \u06af\u067e \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " \u0646\u0627\u0645 \u0646\u0645\u0627\u06cc\u0634\u06cc \u062e\u0648\u062f \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f \u0628\u0647: \xab" + displayname + "\xbb";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " \u0642\u0648\u0627\u0646\u06cc\u0646 \u062f\u0633\u062a\u0631\u0633\u06cc \u0645\u0647\u0645\u0627\u0646 \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " \u0642\u0648\u0627\u0646\u06cc\u0646 \u062f\u0633\u062a\u0631\u0633\u06cc \u0645\u0647\u0645\u0627\u0646 \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f \u0628\u0647: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " \u0642\u0627\u0628\u0644\u064a\u062a\u200c \u062f\u064a\u062f\u0646\u200c \u062a\u0627\u0631\u06cc\u062e\u0686\u0647 \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " \u0642\u0627\u0628\u0644\u064a\u062a\u200c \u062f\u064a\u062f\u0646\u200c \u062a\u0627\u0631\u06cc\u062e\u0686\u0647 \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f \u0628\u0647: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " \u0642\u0648\u0627\u0646\u06cc\u0646 \u067e\u06cc\u0648\u0633\u062a\u0646 \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " \u0642\u0648\u0627\u0646\u06cc\u0646 \u067e\u06cc\u0648\u0633\u062a\u0646 \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f \u0628\u0647: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " \u0639\u06a9\u0633 \u067e\u0631\u0648\u0641\u0627\u06cc\u0644 \u062e\u0648\u062f \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f";
    },
    changedTheRoomAliases$1(username) {
      return username + " \u0646\u0627\u0645\u200c\u0647\u0627\u06cc \u0645\u0633\u062a\u0639\u0627\u0631 \u0627\u062a\u0627\u0642 \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0627\u062f";
    },
    get$changePassword() {
      return "\u062a\u063a\u06cc\u06cc\u0631 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631";
    },
    get$changeTheme() {
      return "\u0633\u0628\u06a9 \u062e\u0648\u062f \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0647\u06cc\u062f";
    },
    get$changeYourAvatar() {
      return "\u0639\u06a9\u0633 \u067e\u0631\u0648\u0641\u0627\u06cc\u0644 \u062e\u0648\u062f \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0647\u06cc\u062f";
    },
    get$channelCorruptedDecryptError() {
      return "\u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0645\u062e\u062f\u0648\u0634 \u0634\u062f\u0647\u200c \u0627\u0633\u062a";
    },
    get$chat() {
      return "\u06af\u067e";
    },
    get$chatDetails() {
      return "\u062c\u0632\u0626\u06cc\u0627\u062a \u06af\u067e";
    },
    get$chats() {
      return "\u06af\u067e\u200c\u0647\u0627";
    },
    get$chooseAStrongPassword() {
      return "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u0642\u0648\u06cc \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f";
    },
    get$clearArchive() {
      return "\u0628\u0627\u06cc\u06af\u0627\u0646\u06cc \u0631\u0627 \u067e\u0627\u06a9 \u06a9\u0646\u06cc\u062f";
    },
    get$close(_) {
      return "\u0628\u0633\u062a\u0646";
    },
    get$commandHint_markasdm() {
      return "\u0628\u0631\u0627\u06cc \u062f\u0627\u062f\u0646 \u0634\u0646\u0627\u0633\u0647 \u0645\u0627\u062a\u0631\u06cc\u06a9\u0633 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0627\u062a\u0627\u0642 \u067e\u06cc\u0627\u0645\u200c\u0647\u0627\u06cc \u0645\u0633\u062a\u0642\u06cc\u0645 \u0639\u0644\u0627\u0645\u062a \u0628\u06af\u0630\u0627\u0631\u06cc\u062f";
    },
    get$commandHint_markasgroup() {
      return "\u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u06af\u0631\u0648\u0647 \u0639\u0644\u0627\u0645\u062a \u0628\u06af\u0630\u0627\u0631\u06cc\u062f";
    },
    get$commandHint_ban() {
      return "\u06a9\u0627\u0631\u0628\u0631 \u0645\u0634\u062e\u0635 \u0634\u062f\u0647 \u0631\u0627 \u0627\u0632 \u0627\u06cc\u0646 \u0627\u062a\u0627\u0642 \u0645\u062d\u0631\u0648\u0645 \u06a9\u0646\u06cc\u062f";
    },
    get$commandHint_clearcache() {
      return "\u062d\u0627\u0641\u0638\u0647 \u067e\u0646\u06be\u0627\u0646 \u0631\u0627 \u067e\u0627\u06a9 \u06a9\u0646\u06cc\u062f";
    },
    get$commandHint_create() {
      return "\u06cc\u06a9 \u06af\u067e \u06af\u0631\u0648\u0647\u06cc \u062e\u0627\u0644\u06cc \u0628\u0633\u0627\u0632\u06cc\u062f\n\u0627\u0632 \xab--no-encryption\xbb \u0628\u0631\u0627\u06cc \u063a\u06cc\u0631\u0641\u0639\u0627\u0644 \u06a9\u0631\u062f\u0646 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f";
    },
    get$commandHint_discardsession() {
      return "\u0637\u0631\u062f \u0646\u0634\u0633\u062a";
    },
    get$commandHint_dm() {
      return "\u06cc\u06a9 \u06af\u067e \u0645\u0633\u062a\u0642\u06cc\u0645 \u0634\u0631\u0648\u0639 \u06a9\u0646\u06cc\u062f\n\u0627\u0632 \xab--no-encryption\xbb \u0628\u0631\u0627\u06cc \u063a\u06cc\u0631\u0641\u0639\u0627\u0644 \u06a9\u0631\u062f\u0646 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f";
    },
    get$commandHint_html() {
      return "\u0645\u062a\u0646 \u0628\u0627 \u0641\u0631\u0645\u062a HTML \u0628\u0641\u0631\u0633\u062a\u06cc\u062f";
    },
    get$commandHint_invite() {
      return "\u06a9\u0627\u0631\u0628\u0631 \u0645\u0634\u062e\u0635 \u0634\u062f\u0647 \u0631\u0627 \u0628\u0647 \u0627\u06cc\u0646 \u0627\u062a\u0627\u0642 \u062f\u0639\u0648\u062a \u06a9\u0646\u06cc\u062f";
    },
    get$commandHint_join() {
      return "\u0628\u0647 \u0627\u062a\u0627\u0642 \u0645\u0634\u062e\u0635 \u0634\u062f\u0647 \u0628\u067e\u06cc\u0648\u0646\u062f\u06cc\u062f";
    },
    get$commandHint_kick() {
      return "\u06a9\u0627\u0631\u0628\u0631 \u0645\u0634\u062e\u0635 \u0634\u062f\u0647 \u0631\u0627 \u0627\u0632 \u0627\u06cc\u0646 \u0627\u062a\u0627\u0642 \u062d\u0630\u0641 \u06a9\u0646\u06cc\u062f";
    },
    get$commandHint_leave() {
      return "\u0627\u06cc\u0646 \u0627\u062a\u0627\u0642 \u0631\u0627 \u062a\u0631\u06a9 \u06a9\u0646\u06cc\u062f";
    },
    get$commandHint_me() {
      return "\u062e\u0648\u062f \u0631\u0627 \u062a\u0648\u0635\u06cc\u0641 \u06a9\u0646\u06cc\u062f";
    },
    get$commandHint_myroomavatar() {
      return "\u0639\u06a9\u0633 \u067e\u0631\u0648\u0641\u0627\u06cc\u0644 \u062e\u0648\u062f \u0631\u0627 \u0628\u0631\u0627\u06cc \u0627\u06cc\u0646 \u0627\u062a\u0627\u0642 \u062a\u0646\u0638\u06cc\u0645 \u06a9\u0646\u06cc\u062f (\u0628\u0627 mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "\u0646\u0627\u0645 \u0646\u0645\u0627\u06cc\u0634\u06cc \u062e\u0648\u062f \u0631\u0627 \u0628\u0631\u0627\u06cc \u0627\u06cc\u0646 \u0627\u062a\u0627\u0642 \u062a\u0646\u0638\u06cc\u0645 \u06a9\u0646\u06cc\u062f";
    },
    get$commandHint_op() {
      return "\u062f\u0631\u062c\u0647 \u0627\u062e\u062a\u06cc\u0627\u0631 \u06a9\u0627\u0631\u0628\u0631 \u0645\u0634\u062e\u0635 \u0634\u062f\u0647 \u0631\u0627 \u062a\u0646\u0638\u06cc\u0645 \u06a9\u0646\u06cc\u062f (\u067e\u06cc\u0634\u0641\u0631\u0636: \u06f5\u06f0)";
    },
    get$commandHint_plain() {
      return "\u0645\u062a\u0646 \u0628\u06cc\u200c\u0641\u0631\u0645\u062a \u0628\u0641\u0631\u0633\u062a\u06cc\u062f";
    },
    get$commandHint_react() {
      return "\u067e\u0627\u0633\u062e \u0631\u0627 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u06cc\u06a9 \u0648\u0627\u06a9\u0646\u0634 \u0628\u0641\u0631\u0633\u062a\u06cc\u062f";
    },
    get$commandHint_send() {
      return "\u0645\u062a\u0646 \u0631\u0627 \u0628\u0641\u0631\u0633\u062a\u06cc\u062f";
    },
    get$commandHint_unban() {
      return "\u0645\u062d\u0631\u0648\u0645\u06cc\u062a \u06a9\u0627\u0631\u0628\u0631 \u0645\u0634\u062e\u0635 \u0634\u062f\u0647 \u0631\u0627 \u0627\u0632 \u0627\u06cc\u0646 \u0627\u062a\u0627\u0642 \u0644\u063a\u0648 \u06a9\u0646\u06cc\u062f";
    },
    get$commandInvalid() {
      return "\u062f\u0633\u062a\u0648\u0631 \u0646\u0627\u0645\u0639\u062a\u0628\u0631";
    },
    commandMissing$1(command) {
      return command + " \u06cc\u06a9 \u062f\u0633\u062a\u0648\u0631 \u0646\u06cc\u0633\u062a.";
    },
    get$compareEmojiMatch() {
      return "\u0644\u0637\u0641\u0627 \u0627\u06cc\u0645\u0648\u062c\u06cc\u200c\u0647\u0627 \u0631\u0627 \u0645\u0642\u0627\u06cc\u0633\u0647 \u06a9\u0646\u06cc\u062f";
    },
    get$compareNumbersMatch() {
      return "\u0644\u0637\u0641\u0627 \u0627\u0639\u062f\u0627\u062f \u0631\u0627 \u0645\u0642\u0627\u06cc\u0633\u0647 \u06a9\u0646\u06cc\u062f";
    },
    get$configureChat() {
      return "\u06af\u067e \u0631\u0627 \u062a\u0646\u0638\u06cc\u0645 \u06a9\u0646\u06cc\u062f";
    },
    get$confirm(_) {
      return "\u062a\u0627\u06cc\u06cc\u062f";
    },
    get$contentHasBeenReported() {
      return "\u0645\u062d\u062a\u0648\u0627 \u0628\u0647 \u0645\u062f\u06cc\u0631\u0627\u0646 \u0633\u0631\u0648\u0631 \u06af\u0632\u0627\u0631\u0634 \u0634\u062f\u0647 \u0627\u0633\u062a";
    },
    get$copiedToClipboard() {
      return "\u062f\u0631 \u062d\u0627\u0641\u0638\u0647 \u06a9\u067e\u06cc \u0634\u062f";
    },
    get$copy(_) {
      return "\u06a9\u067e\u06cc";
    },
    couldNotDecryptMessage$1(error) {
      return "\u0646\u062a\u0648\u0627\u0646\u0633\u062a\u06cc\u0645 \u067e\u06cc\u0627\u0645 \u0631\u0627 \u0631\u0645\u0632\u06af\u0634\u0627\u06cc\u06cc \u06a9\u0646\u06cc\u0645: " + error;
    },
    countParticipants$1(count) {
      return "" + count + " \u0634\u0631\u06a9\u062a \u06a9\u0646\u0646\u062f\u0647";
    },
    get$create(_) {
      return "\u0627\u06cc\u062c\u0627\u062f";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " \u06af\u067e \u0631\u0627 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0631\u062f";
    },
    get$createGroup() {
      return "Create group";
    },
    get$createNewSpace() {
      return "\u0641\u0636\u0627\u06cc \u062c\u062f\u06cc\u062f";
    },
    get$currentlyActive() {
      return "\u0627\u06a9\u0646\u0648\u0646 \u0641\u0639\u0627\u0644";
    },
    get$darkTheme() {
      return "\u062a\u0627\u0631\u06cc\u06a9";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + "\u060c " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "\u0627\u06cc\u0646 \u06a9\u0627\u0631 \u062d\u0633\u0627\u0628 \u06a9\u0627\u0631\u0628\u0631\u06cc\u200c\u062a\u0627\u0646 \u0631\u0627 \u063a\u06cc\u0631\u0641\u0639\u0627\u0644 \u062e\u0648\u0627\u0647\u062f \u06a9\u0631\u062f. \u0627\u06cc\u0646 \u0639\u0645\u0644 \u0642\u0627\u0628\u0644 \u062c\u0628\u0631\u0627\u0646 \u0648 \u0628\u0627\u0632\u06af\u0634\u062a \u0646\u06cc\u0633\u062a! \u0622\u06cc\u0627 \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u062f\u0627\u0631\u06cc\u062f\u061f";
    },
    get$defaultPermissionLevel() {
      return "\u062f\u0631\u062c\u0647 \u0627\u062c\u0627\u0632\u06c0 \u067e\u06cc\u0634\u0641\u0631\u0636";
    },
    get$$delete(_) {
      return "\u062d\u0630\u0641";
    },
    get$deleteAccount() {
      return "\u062d\u0633\u0627\u0628 \u0631\u0627 \u062d\u0630\u0641 \u06a9\u0646\u06cc\u062f";
    },
    get$deleteMessage() {
      return "\u067e\u06cc\u0627\u0645 \u0631\u0627 \u062d\u0630\u0641 \u06a9\u0646\u06cc\u062f";
    },
    get$devices() {
      return "\u062f\u0633\u062a\u06af\u0627\u0647\u200c\u0647\u0627";
    },
    get$displaynameHasBeenChanged() {
      return "\u0646\u0627\u0645 \u0646\u0645\u0627\u06cc\u0634\u06cc \u062a\u063a\u06cc\u06cc\u0631 \u06cc\u0627\u0641\u062a\u0647 \u0627\u0633\u062a";
    },
    get$downloadFile() {
      return "\u0628\u0627\u0631\u06af\u06cc\u0631\u06cc \u0641\u0627\u06cc\u0644";
    },
    get$edit() {
      return "\u0648\u06cc\u0631\u0627\u06cc\u0634";
    },
    get$editBlockedServers() {
      return "\u0633\u0631\u0648\u0631\u200c\u0647\u0627\u06cc \u0645\u0633\u062f\u0648\u062f \u0631\u0627 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u06a9\u0646\u06cc\u062f";
    },
    get$chatPermissions() {
      return "Chat permissions";
    },
    get$editDisplayname() {
      return "\u0648\u06cc\u0631\u0627\u06cc\u0634 \u0646\u0627\u0645 \u0646\u0645\u0627\u06cc\u0634\u06cc";
    },
    get$editRoomAliases() {
      return "\u0646\u0627\u0645\u200c\u0647\u0627\u06cc \u0645\u0633\u062a\u0639\u0627\u0631 \u0627\u062a\u0627\u0642 \u0631\u0627 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u06a9\u0646\u06cc\u062f";
    },
    get$editRoomAvatar() {
      return "\u0639\u06a9\u0633 \u0627\u062a\u0627\u0642 \u0631\u0627 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u06a9\u0646\u06cc\u062f";
    },
    get$emoteExists() {
      return "\u0634\u06a9\u0644\u06a9 \u0627\u0632 \u067e\u06cc\u0634 \u0648\u062c\u0648\u062f \u062f\u0627\u0631\u062f!";
    },
    get$emoteInvalid() {
      return "\u06a9\u062f \u06a9\u0648\u062a\u0627\u0647 \u0634\u06a9\u0644\u06a9 \u0646\u0627\u0645\u0639\u062a\u0628\u0631!";
    },
    get$emoteKeyboardNoRecents() {
      return "Recently-used emotes will appear here...";
    },
    get$emotePacks() {
      return "\u0628\u0633\u062a\u0647\u200c\u0647\u0627\u06cc \u0634\u06a9\u0644\u06a9 \u0628\u0631\u0627\u06cc \u0627\u062a\u0627\u0642";
    },
    get$globalChatId() {
      return "Global chat ID";
    },
    get$accessAndVisibility() {
      return "Access and visibility";
    },
    get$customEmojisAndStickers() {
      return "Custom emojis and stickers";
    },
    get$emoteShortcode() {
      return "\u06a9\u062f \u06a9\u0648\u062a\u0627\u0647 \u0634\u06a9\u0644\u06a9";
    },
    get$emoteWarnNeedToPick() {
      return "\u0628\u0627\u06cc\u062f \u06cc\u06a9 \u06a9\u062f \u06a9\u0648\u062a\u0627\u0647 \u0634\u06a9\u0644\u06a9 \u0648 \u06cc\u06a9 \u062a\u0635\u0648\u06cc\u0631 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f!";
    },
    get$emptyChat() {
      return "\u06af\u067e \u062e\u0627\u0644\u06cc";
    },
    get$enableEmotesGlobally() {
      return "\u0628\u0633\u062a\u0647 \u0634\u06a9\u0644\u06a9 \u0631\u0627 \u0628\u0647 \u0637\u0648\u0631 \u0633\u0631\u0627\u0633\u0631\u06cc \u0641\u0639\u0627\u0644 \u06a9\u0646\u06cc\u062f";
    },
    get$enableEncryption() {
      return "\u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0631\u0627 \u0641\u0639\u0627\u0644 \u06a9\u0646\u06cc\u062f";
    },
    get$encrypted() {
      return "\u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0634\u062f\u0647";
    },
    get$encryptionNotEnabled() {
      return "\u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0641\u0639\u0627\u0644 \u0646\u06cc\u0633\u062a";
    },
    endedTheCall$1(senderName) {
      return senderName + " \u0628\u0647 \u062a\u0645\u0627\u0633 \u067e\u0627\u06cc\u0627\u0646 \u062f\u0627\u062f";
    },
    get$enterAnEmailAddress() {
      return "\u06cc\u06a9 \u0622\u062f\u0631\u0633 \u0631\u0627\u06cc\u0627\u0646\u0627\u0645\u0647(\u0627\u06cc\u0645\u06cc\u0644) \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f";
    },
    errorObtainingLocation$1(error) {
      return "\u062e\u0637\u0627 \u0647\u0646\u06af\u0627\u0645 \u0628\u062f\u0633\u062a \u0622\u0648\u0631\u062f\u0646 \u0645\u06a9\u0627\u0646: " + error;
    },
    get$extremeOffensive() {
      return "\u0628\u0647 \u0634\u062f\u062a \u062a\u0648\u0647\u06cc\u0646 \u0622\u0645\u06cc\u0632";
    },
    get$fontSize(_) {
      return "\u0627\u0646\u062f\u0627\u0632\u0647 \u0642\u0644\u0645";
    },
    get$forward(_) {
      return "\u0627\u0631\u0633\u0627\u0644";
    },
    get$fromJoining() {
      return "\u0627\u0632 \u067e\u06cc\u0648\u0633\u062a\u0646";
    },
    get$fromTheInvitation() {
      return "\u0627\u0632 \u062f\u0639\u0648\u062a";
    },
    get$goToTheNewRoom() {
      return "\u0628\u0647 \u0627\u062a\u0627\u0642 \u062c\u062f\u06cc\u062f \u0628\u0631\u0648\u06cc\u062f";
    },
    get$groups() {
      return "\u06af\u0631\u0648\u0647\u200c\u0647\u0627";
    },
    get$guestsAreForbidden() {
      return "\u0645\u0647\u0645\u0627\u0646\u200c\u0647\u0627 \u0645\u0645\u0646\u0648\u0639 \u0634\u062f\u0647\u200c\u0627\u0646\u062f";
    },
    get$guestsCanJoin() {
      return "\u0645\u0647\u0645\u0627\u0646\u200c\u0647\u0627 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u0646\u062f \u0628\u067e\u06cc\u0648\u0646\u062f\u0646\u062f";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " \u062f\u0639\u0648\u062a\u200c\u0646\u0627\u0645\u0647 " + targetName + " \u0631\u0627 \u067e\u0633 \u06af\u0631\u0641\u062a\u0647 \u0627\u0633\u062a";
    },
    get$help() {
      return "\u06a9\u0645\u06a9";
    },
    get$hideRedactedMessages() {
      return "Hide redacted messages";
    },
    get$hideRedactedMessagesBody() {
      return "If someone redacts a message, this message won't be visible in the chat anymore.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Hide invalid or unknown message formats";
    },
    get$howOffensiveIsThisContent() {
      return "\u0627\u06cc\u0646 \u0645\u062d\u062a\u0648\u0627 \u0686\u0647 \u0645\u0642\u062f\u0627\u0631 \u062a\u0648\u0647\u06cc\u0646 \u0622\u0645\u06cc\u0632 \u0627\u0633\u062a\u061f";
    },
    get$block() {
      return "Block";
    },
    get$blockedUsers() {
      return "Blocked users";
    },
    get$blockListDescription() {
      return "You can block users who are disturbing you. You won't be able to receive any messages or room invites from the users on your personal block list.";
    },
    get$blockUsername() {
      return "Ignore username";
    },
    get$iHaveClickedOnLink() {
      return "\u0645\u0646 \u0631\u0648\u06cc \u067e\u06cc\u0648\u0646\u062f \u06a9\u0644\u06cc\u06a9 \u06a9\u0631\u062f\u0645";
    },
    get$incorrectPassphraseOrKey() {
      return "\u0639\u0628\u0627\u0631\u062a \u0639\u0628\u0648\u0631 \u06cc\u0627 \u06a9\u0644\u06cc\u062f \u0628\u0627\u0632\u06cc\u0627\u0628\u06cc \u0627\u0634\u062a\u0628\u0627\u0647 \u0627\u0633\u062a";
    },
    get$inoffensive() {
      return "\u0628\u06cc \u0636\u0631\u0631";
    },
    get$inviteContact() {
      return "\u062f\u0639\u0648\u062a \u0627\u0632 \u0645\u062e\u0627\u0637\u0628";
    },
    get$noChatDescriptionYet() {
      return "No chat description created yet.";
    },
    get$tryAgain() {
      return "Try again";
    },
    get$invited() {
      return "\u062f\u0639\u0648\u062a \u0634\u062f\u0647";
    },
    get$redactMessageDescription() {
      return "The message will be redacted for all participants in this conversation. This cannot be undone.";
    },
    get$optionalRedactReason() {
      return "(Optional) Reason for redacting this message...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " \u0627\u0632 " + targetName + " \u062f\u0639\u0648\u062a \u06a9\u0631\u062f";
    },
    get$invitedUsersOnly() {
      return "\u0641\u0642\u0637 \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u062f\u0639\u0648\u062a \u0634\u062f\u0647";
    },
    inviteText$2(username, link) {
      return username + " \u0634\u0645\u0627 \u0631\u0627 \u0628\u0647 \u0641\u0644\u0627\u0641\u06cc\u200c\u0686\u062a \u062f\u0639\u0648\u062a \u06a9\u0631\u062f.\n\u06f1. \u0628\u0647 fluffychat.im \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0631\u062f\u0647 \u0648 \u06a9\u0627\u0631\u0647 \u0631\u0627 \u0646\u0635\u0628 \u06a9\u0646\u06cc\u062f\n\u06f2. \u062b\u0628\u062a \u0646\u0627\u0645 \u06a9\u0646\u06cc\u062f \u06cc\u0627 \u0648\u0627\u0631\u062f \u0634\u0648\u06cc\u062f.\n\u06f3. \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u0631\u0627 \u0628\u0627\u0632 \u06a9\u0646\u06cc\u062f:\n " + link;
    },
    get$isTyping() {
      return "\u062f\u0631 \u062d\u0627\u0644 \u0646\u0648\u0634\u062a\u0646\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " \u0628\u0647 \u06af\u067e \u067e\u06cc\u0648\u0633\u062a";
    },
    get$joinRoom() {
      return "\u067e\u06cc\u0648\u0633\u062a\u0646 \u0628\u0647 \u0627\u062a\u0627\u0642";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " " + targetName + " \u0631\u0627 \u0628\u06cc\u0631\u0648\u0646 \u06a9\u0631\u062f";
    },
    get$kickFromChat() {
      return "\u0627\u0632 \u06af\u0641\u062a\u06af\u0648 \u0628\u06cc\u0631\u0648\u0646 \u06a9\u0631\u062f\u0646";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "\u0622\u062e\u0631\u06cc\u0646 \u0641\u0639\u0627\u0644\u06cc\u062a: " + localizedTimeShort;
    },
    get$leave() {
      return "\u062a\u0631\u06a9 \u06a9\u0631\u062f\u0646";
    },
    get$leftTheChat() {
      return "\u06af\u067e \u0631\u0627 \u062a\u0631\u06a9 \u06a9\u0631\u062f";
    },
    get$lightTheme() {
      return "\u0631\u0648\u0634\u0646";
    },
    loadCountMoreParticipants$1(count) {
      return "\u0628\u0627\u0631\u06af\u06cc\u0631\u06cc " + count + " \u0634\u0631\u06a9\u062a \u06a9\u0646\u0646\u062f\u06c0 \u0628\u06cc\u0634\u062a\u0631";
    },
    get$dehydrate() {
      return "\u0635\u062f\u0648\u0631 \u062c\u0644\u0633\u0647 \u0648 \u067e\u0627\u06a9 \u06a9\u0631\u062f\u0646 \u062f\u0633\u062a\u06af\u0627\u0647";
    },
    get$dehydrateWarning() {
      return "\u0627\u06cc\u0646 \u0639\u0645\u0644 \u0642\u0627\u0628\u0644 \u0644\u063a\u0648 \u0646\u06cc\u0633\u062a. \u0645\u0637\u0645\u0626\u0646 \u0634\u0648\u06cc\u062f \u06a9\u0647 \u0641\u0627\u06cc\u0644 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646 \u0631\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a \u0627\u0645\u0646 \u0630\u062e\u06cc\u0631\u0647 \u0645\u06cc \u06a9\u0646\u06cc\u062f.";
    },
    get$dehydrateTor() {
      return "\u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u062a\u0648\u0631 (TOR): \u0635\u062f\u0648\u0631 \u062c\u0644\u0633\u0647";
    },
    get$dehydrateTorLong() {
      return "\u0628\u0631\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u062a\u0648\u0631 (TOR)\u060c \u062a\u0648\u0635\u06cc\u0647 \u0645\u06cc \u0634\u0648\u062f \u0642\u0628\u0644 \u0627\u0632 \u0628\u0633\u062a\u0646 \u067e\u0646\u062c\u0631\u0647\u060c \u062c\u0644\u0633\u0647 \u0631\u0627 \u0635\u0627\u062f\u0631 \u06a9\u0646\u0646\u062f.";
    },
    get$loadingPleaseWait() {
      return "\u062f\u0631 \u062d\u0627\u0644 \u0628\u0627\u0631\u06af\u06cc\u0631\u06cc... \u0644\u0637\u0641\u0627 \u0635\u0628\u0631 \u06a9\u0646\u06cc\u062f.";
    },
    get$loadMore() {
      return "\u0628\u0627\u0631\u06af\u06cc\u0631\u06cc \u0628\u06cc\u0634\u062a\u0631\u2026";
    },
    get$locationDisabledNotice() {
      return "\u062e\u062f\u0645\u0627\u062a \u0645\u06a9\u0627\u0646 \u063a\u06cc\u0631\u0641\u0639\u0627\u0644 \u0627\u0633\u062a. \u0644\u0637\u0641\u0627 \u0622\u0646 \u0631\u0627 \u0641\u0639\u0627\u0644 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u0628\u062a\u0648\u0627\u0646\u06cc\u062f \u0645\u0648\u0642\u0639\u06cc\u062a \u0645\u06a9\u0627\u0646\u06cc \u062e\u0648\u062f \u0631\u0627 \u0628\u0647 \u0627\u0634\u062a\u0631\u0627\u06a9 \u0628\u06af\u0630\u0627\u0631\u06cc\u062f.";
    },
    get$locationPermissionDeniedNotice() {
      return "\u0645\u062c\u0648\u0632 \u0645\u06a9\u0627\u0646 \u0631\u062f \u0634\u062f. \u0628\u0631\u0627\u06cc \u0628\u0647 \u0627\u0634\u062a\u0631\u0627\u06a9 \u06af\u0630\u0627\u0634\u062a\u0646 \u0645\u0648\u0642\u0639\u06cc\u062a \u0645\u06a9\u0627\u0646\u06cc \u0634\u0645\u0627 \u0644\u0637\u0641\u0627 \u0628\u0647 \u0622\u0646 \u0627\u062c\u0627\u0632\u0647 \u062f\u0647\u06cc\u062f.";
    },
    get$logout() {
      return "\u062e\u0627\u0631\u062c \u0634\u062f\u0646";
    },
    get$mention() {
      return "\u0646\u0627\u0645\u200c\u200c\u0628\u0631\u062f\u0646\u200c";
    },
    get$messages() {
      return "\u067e\u06cc\u0627\u0645\u200c\u0647\u0627";
    },
    get$messagesStyle() {
      return "Messages:";
    },
    get$moderator() {
      return "\u0645\u062f\u06cc\u0631";
    },
    get$newChat() {
      return "\u06af\u067e \u062c\u062f\u06cc\u062f";
    },
    get$newVerificationRequest() {
      return "\u062f\u0631\u062e\u0648\u0627\u0633\u062a \u062a\u0627\u06cc\u06cc\u062f \u062c\u062f\u06cc\u062f!";
    },
    get$next(_) {
      return "\u0628\u0639\u062f\u06cc";
    },
    get$no() {
      return "\u0646\u0647";
    },
    get$noConnectionToTheServer() {
      return "\u0639\u062f\u0645 \u0627\u062a\u0635\u0627\u0644 \u0628\u0647 \u0633\u0631\u0648\u0631";
    },
    get$noEmotesFound() {
      return "\u0647\u06cc\u0686 \u0634\u06a9\u0644\u06a9\u06cc \u067e\u06cc\u062f\u0627 \u0646\u0634\u062f. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Share invite link";
    },
    get$noPasswordRecoveryDescription() {
      return "\u0634\u0645\u0627 \u0647\u0646\u0648\u0632 \u0631\u0627\u0647\u06cc \u0628\u0631\u0627\u06cc \u0628\u0627\u0632\u06cc\u0627\u0628\u06cc \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062e\u0648\u062f \u0627\u0636\u0627\u0641\u0647 \u0646\u06a9\u0631\u062f\u0647\u200c\u0627\u06cc\u062f.";
    },
    get$noPermission() {
      return "\u0628\u062f\u0648\u0646 \u0627\u062c\u0627\u0632\u0647";
    },
    get$noRoomsFound() {
      return "\u0627\u062a\u0627\u0642\u06cc \u067e\u06cc\u062f\u0627 \u0646\u0634\u062f\u2026";
    },
    get$notifications() {
      return "\u0627\u0639\u0644\u0627\u0646\u200c\u0647\u0627";
    },
    get$obtainingLocation() {
      return "\u0628\u0647 \u062f\u0633\u062a \u0622\u0648\u0631\u062f\u0646 \u0645\u06a9\u0627\u0646\u2026";
    },
    get$offensive() {
      return "\u062a\u0648\u0647\u06cc\u0646 \u0622\u0645\u06cc\u0632";
    },
    get$ok() {
      return "\u062a\u0627\u06cc\u06cc\u062f";
    },
    get$oopsSomethingWentWrong() {
      return "\u0627\u0648\u0647\u060c \u0645\u0634\u06a9\u0644\u06cc \u067e\u06cc\u0634 \u0622\u0645\u062f\u2026";
    },
    get$oneClientLoggedOut() {
      return "\u06cc\u06a9\u06cc \u0627\u0632 \u06a9\u0644\u0627\u06cc\u0646\u062a(\u0628\u0631\u0646\u0627\u0645\u0647)\u0647\u0627\u06cc \u0634\u0645\u0627 \u0627\u0632 \u0633\u06cc\u0633\u062a\u0645 \u062e\u0627\u0631\u062c \u0634\u062f\u0647 \u0627\u0633\u062a";
    },
    get$openInMaps() {
      return "\u0628\u0627\u0632 \u06a9\u0631\u062f\u0646 \u062f\u0631 \u0646\u0642\u0634\u0647";
    },
    get$link() {
      return "\u067e\u06cc\u0648\u0646\u062f";
    },
    get$serverRequiresEmail() {
      return "\u0628\u0631\u0627\u06cc \u062b\u0628\u062a\u200c\u0646\u0627\u0645\u060c \u0627\u06cc\u0646 \u0633\u0631\u0648\u0631 \u0628\u0627\u06cc\u062f \u0622\u062f\u0631\u0633 \u0627\u06cc\u0645\u06cc\u0644 \u0634\u0645\u0627 \u0631\u0627 \u062a\u0627\u06cc\u06cc\u062f \u06a9\u0646\u062f.";
    },
    get$or() {
      return "\u06cc\u0627";
    },
    get$participant() {
      return "\u0634\u0631\u06a9\u062a\u200c\u06a9\u0646\u0646\u062f\u0647";
    },
    get$passphraseOrKey() {
      return "\u0639\u0628\u0627\u0631\u062a \u0639\u0628\u0648\u0631 \u06cc\u0627 \u06a9\u0644\u06cc\u062f \u0628\u0627\u0632\u06cc\u0627\u0628\u06cc";
    },
    get$password(_) {
      return "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631";
    },
    get$passwordForgotten() {
      return "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u0631\u0627 \u0641\u0631\u0627\u0645\u0648\u0634 \u06a9\u0631\u062f\u0647\u200c\u0627\u0645";
    },
    get$passwordHasBeenChanged() {
      return "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062a\u063a\u06cc\u06cc\u0631 \u06a9\u0631\u062f";
    },
    get$overview() {
      return "Overview";
    },
    get$passwordRecoverySettings() {
      return "Password recovery settings";
    },
    get$passwordRecovery() {
      return "\u0628\u0627\u0632\u06cc\u0627\u0628\u06cc \u0631\u0645\u0632 \u0639\u0628\u0648\u0631";
    },
    get$pickImage() {
      return "\u06cc\u06a9 \u0639\u06a9\u0633 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f";
    },
    get$pin() {
      return "\u0633\u0646\u062c\u0627\u0642 \u06a9\u0631\u062f\u0646";
    },
    get$pleaseChoose() {
      return "\u0644\u0637\u0641\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f";
    },
    get$pleaseEnterYourPassword() {
      return "\u0644\u0637\u0641\u0627 \u0631\u0645\u0632\u0639\u0628\u0648\u0631 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f";
    },
    get$pleaseEnterYourPin() {
      return "\u0644\u0637\u0641\u0627 \u06a9\u062f \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f";
    },
    get$pleaseEnterYourUsername() {
      return "\u0644\u0637\u0641\u0627 \u0646\u0627\u0645\u200c\u06a9\u0627\u0631\u0628\u0631\u06cc \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "\u0644\u0637\u0641\u0627 \u062f\u0633\u062a\u0648\u0631\u0627\u0644\u0639\u0645\u0644\u200c\u0647\u0627\u06cc \u0648\u0628\u200c\u0633\u0627\u06cc\u062a \u0631\u0627 \u062f\u0646\u0628\u0627\u0644 \u06a9\u0646\u06cc\u062f \u0648 \u0631\u0648\u06cc \u0628\u0639\u062f\u06cc \u0628\u0632\u0646\u06cc\u062f.";
    },
    get$privacy() {
      return "\u062d\u0631\u06cc\u0645 \u062e\u0635\u0648\u0635\u06cc";
    },
    get$reason(_) {
      return "\u062f\u0644\u06cc\u0644";
    },
    redactedBy$1(username) {
      return "Redacted by " + username;
    },
    get$directChat() {
      return "Direct chat";
    },
    redactedByBecause$2(username, reason) {
      return "Redacted by " + username + ' because: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " \u06cc\u06a9 \u0631\u0648\u06cc\u062f\u0627\u062f \u0631\u0627 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u06a9\u0631\u062f";
    },
    get$redactMessage() {
      return "\u0648\u06cc\u0631\u0627\u06cc\u0634 \u067e\u06cc\u0627\u0645";
    },
    get$reject() {
      return "\u0631\u062f \u06a9\u0631\u062f\u0646";
    },
    rejectedTheInvitation$1(username) {
      return username + " \u062f\u0639\u0648\u062a \u0631\u0627 \u0631\u062f \u06a9\u0631\u062f";
    },
    get$removeAllOtherDevices() {
      return "\u062d\u0630\u0641 \u062a\u0645\u0627\u0645 \u062f\u0633\u062a\u06af\u0627\u0647\u200c\u0647\u0627\u06cc \u062f\u06cc\u06af\u0631";
    },
    get$unbanFromChat() {
      return "\u0644\u063a\u0648 \u0645\u062d\u0631\u0648\u0645\u06cc\u062a \u0627\u0632 \u06af\u067e";
    },
    get$removeYourAvatar() {
      return "\u0622\u0648\u0627\u062a\u0627\u0631(\u0639\u06a9\u0633 \u062d\u0633\u0627\u0628) \u062e\u0648\u062f \u0631\u0627 \u062d\u0630\u0641 \u06a9\u0646\u06cc\u062f";
    },
    get$replaceRoomWithNewerVersion() {
      return "\u0627\u062a\u0627\u0642 \u0631\u0627 \u0628\u0627 \u0646\u0633\u062e\u0647 \u062c\u062f\u06cc\u062f\u062a\u0631 \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u06a9\u0646\u06cc\u062f";
    },
    get$reply(_) {
      return "\u067e\u0627\u0633\u062e";
    },
    get$reportMessage() {
      return "\u06af\u0632\u0627\u0631\u0634 \u062f\u0627\u062f\u0646 \u067e\u06cc\u0627\u0645";
    },
    get$roomHasBeenUpgraded() {
      return "\u0627\u062a\u0627\u0642 \u0627\u0631\u062a\u0642\u0627 \u067e\u06cc\u062f\u0627 \u06a9\u0631\u062f";
    },
    get$roomVersion() {
      return "\u0646\u0633\u062e\u0647 \u0627\u062a\u0627\u0642";
    },
    get$search(_) {
      return "\u062c\u0633\u062a\u062c\u0648";
    },
    get$security() {
      return "\u0627\u0645\u0646\u06cc\u062a";
    },
    get$send(_) {
      return "\u0627\u0631\u0633\u0627\u0644";
    },
    get$sendAMessage() {
      return "\u0627\u0631\u0633\u0627\u0644 \u067e\u06cc\u0627\u0645";
    },
    get$sendAsText() {
      return "\u0627\u0631\u0633\u0627\u0644 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0645\u062a\u0646";
    },
    get$sendAudio() {
      return "\u0627\u0631\u0633\u0627\u0644 \u0635\u062f\u0627";
    },
    get$sendFile() {
      return "\u0627\u0631\u0633\u0627\u0644 \u0641\u0627\u06cc\u0644";
    },
    get$sendImage() {
      return "\u0627\u0631\u0633\u0627\u0644 \u062a\u0635\u0648\u06cc\u0631";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "\u0627\u0631\u0633\u0627\u0644 \u067e\u06cc\u0627\u0645\u200c\u0647\u0627";
    },
    get$sendVideo() {
      return "\u0627\u0631\u0633\u0627\u0644 \u0648\u06cc\u062f\u0626\u0648";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " \u06cc\u06a9 \u0641\u0627\u06cc\u0644 \u0641\u0631\u0633\u062a\u0627\u062f";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " \u06cc\u06a9 \u0635\u062f\u0627\u06cc \u0636\u0628\u0637 \u0634\u062f\u0647 \u0641\u0631\u0633\u062a\u0627\u062f";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " \u06cc\u06a9 \u0639\u06a9\u0633 \u0641\u0631\u0633\u062a\u0627\u062f";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " \u06cc\u06a9 \u0628\u0631\u0686\u0633\u0628 \u0641\u0631\u0633\u062a\u0627\u062f";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " \u06cc\u06a9 \u0648\u06cc\u062f\u0626\u0648 \u0641\u0631\u0633\u062a\u0627\u062f";
    },
    sentCallInformations$1(senderName) {
      return senderName + " \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062a\u0645\u0627\u0633 \u0631\u0627 \u0641\u0631\u0633\u062a\u0627\u062f";
    },
    get$separateChatTypes() {
      return "\u06af\u067e\u200c\u0647\u0627\u06cc \u0645\u0633\u062a\u0642\u06cc\u0645 \u0631\u0627 \u0627\u0632 \u06af\u0631\u0648\u0647\u200c\u0647\u0627 \u062c\u062f\u0627 \u06a9\u0646\u06cc\u062f";
    },
    get$setAsCanonicalAlias() {
      return "\u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0646\u0627\u0645 \u0645\u0633\u062a\u0639\u0627\u0631 \u0627\u0635\u0644\u06cc \u062a\u0646\u0638\u06cc\u0645 \u06a9\u0646\u06cc\u062f";
    },
    get$setChatDescription() {
      return "Set chat description";
    },
    get$setPermissionsLevel() {
      return "\u062a\u0646\u0638\u06cc\u0645 \u062f\u0631\u062c\u0647 \u0627\u062c\u0627\u0632\u0647\u200c\u0647\u0627";
    },
    get$settings() {
      return "\u062a\u0646\u0638\u06cc\u0645\u0627\u062a";
    },
    get$share(_) {
      return "\u0627\u0634\u062a\u0631\u0627\u06a9\u200c\u06af\u0630\u0627\u0631\u06cc";
    },
    sharedTheLocation$1(username) {
      return username + " \u0648\u0636\u0639\u06cc\u062a \u0645\u06a9\u0627\u0646\u06cc \u062e\u0648\u062f \u0631\u0627 \u0628\u0647 \u0627\u0634\u062a\u0631\u0627\u06a9 \u06af\u0630\u0627\u0634\u062a";
    },
    get$shareLocation() {
      return "\u0627\u0634\u062a\u0631\u0627\u06a9\u200c\u06af\u0630\u0627\u0631\u06cc \u0648\u0636\u0639\u06cc\u062a \u0645\u06a9\u0627\u0646\u06cc";
    },
    get$presencesToggle() {
      return "Show status messages from other users";
    },
    get$skip(_) {
      return "\u0631\u062f \u0634\u062f\u0646";
    },
    get$sourceCode() {
      return "\u06a9\u062f \u0645\u0646\u0628\u0639";
    },
    get$spaceName() {
      return "\u0646\u0627\u0645 \u0641\u0636\u0627";
    },
    startedACall$1(senderName) {
      return senderName + " \u062a\u0645\u0627\u0633\u06cc \u0631\u0627 \u0634\u0631\u0648\u0639 \u06a9\u0631\u062f";
    },
    get$status(_) {
      return "\u0648\u0636\u0639\u06cc\u062a";
    },
    get$submit(_) {
      return "\u0627\u0631\u0633\u0627\u0644";
    },
    get$synchronizingPleaseWait() {
      return "\u062f\u0631 \u062d\u0627\u0644 \u0647\u0645\u06af\u0627\u0645\u200c\u0633\u0627\u0632\u06cc... \u0644\u0637\u0641\u0627 \u0635\u0628\u0631 \u06a9\u0646\u06cc\u062f.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Synchronizing\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "\u0633\u06cc\u0633\u062a\u0645";
    },
    get$theyDontMatch() {
      return "\u0628\u0627 \u0647\u0645 \u0645\u0646\u0637\u0628\u0642 \u0646\u06cc\u0633\u062a\u0646\u062f";
    },
    get$theyMatch() {
      return "\u0628\u0627 \u0647\u0645 \u0645\u0646\u0637\u0628\u0642 \u0647\u0633\u062a\u0646\u062f";
    },
    get$tooManyRequestsWarning() {
      return "\u062a\u0639\u062f\u0627\u062f \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u200c\u0647\u0627\u06cc \u0628\u06cc\u0634 \u0627\u0632 \u062d\u062f. \u0644\u0637\u0641\u0627 \u0628\u0639\u062f\u0627 \u062f\u0648\u0628\u0627\u0631\u0647 \u0627\u0645\u062a\u062d\u0627\u0646 \u06a9\u0646\u06cc\u062f!";
    },
    get$tryToSendAgain() {
      return "\u062a\u0644\u0627\u0634 \u0628\u0631\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u0645\u062c\u062f\u062f";
    },
    get$unavailable() {
      return "\u062e\u0627\u0631\u062c \u0627\u0632 \u062f\u0633\u062a\u0631\u0633";
    },
    unbannedUser$2(username, targetName) {
      return username + " \u0645\u062d\u0631\u0648\u0645\u06cc\u062a " + targetName + " \u0631\u0627 \u0628\u0631\u062f\u0627\u0634\u062a";
    },
    get$unblockDevice() {
      return "\u0628\u0631\u062f\u0627\u0634\u062a\u0646 \u0645\u0633\u062f\u0648\u062f \u0628\u0648\u062f\u0646 \u062f\u0633\u062a\u06af\u0627\u0647";
    },
    get$unknownDevice() {
      return "\u062f\u0633\u062a\u06af\u0627\u0647 \u0646\u0627\u0634\u0646\u0627\u0633";
    },
    get$unknownEncryptionAlgorithm() {
      return "\u0627\u0644\u06af\u0648\u0631\u06cc\u062a\u0645 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0646\u0627\u0634\u0646\u0627\u062e\u062a\u0647";
    },
    unknownEvent$1(type) {
      return "\u0631\u0648\u06cc\u062f\u0627\u062f \u0646\u0627\u0634\u0646\u0627\u062e\u062a\u0647 \xab" + type + "\xbb";
    },
    get$unpin() {
      return "\u0628\u0631\u062f\u0627\u0634\u062a\u0646 \u0633\u0646\u062c\u0627\u0642";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " \u0648 " + count + " \u0646\u0641\u0631 \u062f\u06cc\u06af\u0631 \u062f\u0631 \u062d\u0627\u0644 \u062a\u0627\u06cc\u067e \u06a9\u0631\u062f\u0646\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " \u0648 " + username2 + " \u062f\u0631 \u062d\u0627\u0644 \u062a\u0627\u06cc\u067e \u06a9\u0631\u062f\u0646\u2026";
    },
    userIsTyping$1(username) {
      return username + " \u062f\u0631 \u062d\u0627\u0644 \u062a\u0627\u06cc\u067e \u06a9\u0631\u062f\u0646\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa" + username + " \u06af\u067e \u0631\u0627 \u062a\u0631\u06a9 \u06a9\u0631\u062f";
    },
    get$username(_) {
      return "\u0646\u0627\u0645\u200c\u06a9\u0627\u0631\u0628\u0631\u06cc";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " \u06cc\u06a9 \u0631\u0648\u06cc\u062f\u0627\u062f " + type + " \u0641\u0631\u0633\u062a\u0627\u062f";
    },
    get$unverified() {
      return "\u062a\u0627\u06cc\u06cc\u062f\u0646\u0634\u062f\u0647";
    },
    get$verified() {
      return "\u062a\u0627\u06cc\u06cc\u062f\u0634\u062f\u0647";
    },
    get$verifyStart() {
      return "\u0634\u0631\u0648\u0639 \u0628\u0627\u0632\u0628\u06cc\u0646\u06cc \u0648 \u062a\u0627\u06cc\u06cc\u062f";
    },
    get$verifySuccess() {
      return "\u0628\u0627\u0632\u0628\u06cc\u0646\u06cc \u0648 \u062a\u0627\u06cc\u06cc\u062f \u0628\u0627 \u0645\u0648\u0641\u0642\u06cc\u062a \u0627\u0646\u062c\u0627\u0645 \u0634\u062f!";
    },
    get$verifyTitle() {
      return "\u062f\u0631 \u062d\u0627\u0644 \u062a\u0627\u06cc\u06cc\u062f \u062d\u0633\u0627\u0628 \u062f\u06cc\u06af\u0631";
    },
    get$visibilityOfTheChatHistory() {
      return "\u0642\u0627\u0628\u0644\u06cc\u062a \u062f\u06cc\u062f\u0646 \u062a\u0627\u0631\u06cc\u062e\u0686\u0647 \u06af\u067e";
    },
    get$visibleForAllParticipants() {
      return "\u0642\u0627\u0628\u0644 \u0631\u0648\u06cc\u062a \u0628\u0631\u0627\u06cc \u062a\u0645\u0627\u0645 \u0634\u0631\u06a9\u062a\u200c\u06a9\u0646\u0646\u062f\u06af\u0627\u0646";
    },
    get$visibleForEveryone() {
      return "\u0642\u0627\u0628\u0644 \u0631\u0648\u06cc\u062a \u0628\u0631\u0627\u06cc \u0647\u0645\u0647";
    },
    get$voiceMessage() {
      return "\u067e\u06cc\u0627\u0645 \u0635\u0648\u062a\u06cc";
    },
    get$waitingPartnerAcceptRequest() {
      return "\u062f\u0631 \u0627\u0646\u062a\u0638\u0627\u0631 \u067e\u0630\u06cc\u0631\u0641\u062a\u0646 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0627\u0632 \u062c\u0627\u0646\u0628 \u0641\u0631\u062f \u062f\u06cc\u06af\u0631\u2026";
    },
    get$waitingPartnerEmoji() {
      return "\u062f\u0631 \u0627\u0646\u062a\u0638\u0627\u0631 \u067e\u0630\u06cc\u0631\u0641\u062a\u0646 \u0634\u06a9\u0644\u06a9 \u0627\u0632 \u062c\u0627\u0646\u0628 \u0641\u0631\u062f \u062f\u06cc\u06af\u0631\u2026";
    },
    get$waitingPartnerNumbers() {
      return "\u062f\u0631 \u0627\u0646\u062a\u0638\u0627\u0631 \u067e\u0630\u06cc\u0631\u0641\u062a\u0646 \u0627\u0639\u062f\u0627\u062f \u0627\u0632 \u062c\u0627\u0646\u0628 \u0641\u0631\u062f \u062f\u06cc\u06af\u0631\u2026";
    },
    get$warning() {
      return "\u0647\u0634\u062f\u0627\u0631!";
    },
    get$weSentYouAnEmail() {
      return "\u06cc\u06a9 \u0627\u06cc\u0645\u06cc\u0644 \u0628\u0631\u0627\u06cc\u062a\u0627\u0646 \u0641\u0631\u0633\u062a\u0627\u062f\u06cc\u0645";
    },
    get$whoCanPerformWhichAction() {
      return "\u0686\u0647 \u06a9\u0633\u06cc \u062a\u0648\u0627\u0646 \u0627\u0646\u062c\u0627\u0645 \u06a9\u062f\u0627\u0645 \u0639\u0645\u0644 \u0631\u0627 \u062f\u0627\u0631\u0627\u0633\u062a";
    },
    get$whyDoYouWantToReportThis() {
      return "\u0686\u0631\u0627 \u0645\u06cc\u200c\u062e\u0648\u0627\u0647\u06cc\u062f \u06af\u0632\u0627\u0631\u0634 \u062f\u0647\u06cc\u062f\u061f";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "\u0628\u0627 \u0627\u06cc\u0646 \u0622\u062f\u0631\u0633\u200c\u0647\u0627 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0631\u0645\u0632 \u062e\u0648\u062f \u0631\u0627 \u0628\u0627\u0632\u06cc\u0627\u0628\u06cc \u06a9\u0646\u06cc\u062f.";
    },
    get$writeAMessage() {
      return "\u0646\u0648\u0634\u062a\u0646 \u067e\u06cc\u0627\u0645\u2026";
    },
    get$yes() {
      return "\u0628\u0644\u0647";
    },
    get$you() {
      return "\u0634\u0645\u0627";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "\u0634\u0645\u0627 \u062f\u06cc\u06af\u0631 \u062f\u0631 \u0627\u06cc\u0646 \u06af\u067e \u0634\u0631\u06a9\u062a \u0646\u0645\u06cc\u200c\u06a9\u0646\u06cc\u062f";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "\u0634\u0645\u0627 \u0627\u0632 \u0627\u06cc\u0646 \u06af\u067e \u0645\u062d\u0631\u0648\u0645 \u0634\u062f\u0647\u200c\u0627\u06cc\u062f";
    },
    get$yourPublicKey() {
      return "\u06a9\u0644\u06cc\u062f \u0639\u0645\u0648\u0645\u06cc \u0634\u0645\u0627";
    },
    get$messageInfo() {
      return "\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u067e\u06cc\u0627\u0645";
    },
    get$time(_) {
      return "\u0632\u0645\u0627\u0646";
    },
    get$sender() {
      return "\u0641\u0631\u0633\u062a\u0646\u062f\u0647";
    },
    get$openGallery() {
      return "\u0628\u0627\u0632\u06a9\u0631\u062f\u0646 \u06af\u0627\u0644\u0631\u06cc";
    },
    get$removeFromSpace() {
      return "\u062d\u0630\u0641 \u0627\u0632 \u0641\u0636\u0627";
    },
    videoWithSize$1(size) {
      return "\u0648\u06cc\u062f\u0626\u0648 (" + size + ")";
    },
    get$markAsRead() {
      return "\u0639\u0644\u0627\u0645\u062a\u200c\u06af\u0630\u0627\u0634\u062a\u0646 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u062e\u0648\u0627\u0646\u062f\u0647 \u0634\u062f\u0647";
    },
    reactedWith$2(sender, reaction) {
      return sender + " \u0628\u0627 " + reaction + " \u0648\u0627\u06a9\u0646\u0634 \u0646\u0634\u0627\u0646 \u062f\u0627\u062f";
    },
    get$pinMessage() {
      return "\u0633\u0646\u062c\u0627\u0642 \u06a9\u0631\u062f\u0646 \u0628\u0647 \u0627\u062a\u0627\u0642";
    },
    get$confirmEventUnpin() {
      return "\u0622\u06cc\u0627 \u0627\u0632 \u0628\u0631\u062f\u0627\u0634\u062a\u0646 \u0633\u0646\u062c\u0627\u0642 \u0631\u0648\u06cc\u062f\u0627\u062f \u0628\u0647 \u0635\u0648\u0631\u062a \u062f\u0627\u0626\u0645\u06cc \u0645\u0637\u0645\u0626\u0646 \u0647\u0633\u062a\u06cc\u062f\u061f";
    },
    get$emojis() {
      return "\u0634\u06a9\u0644\u06a9\u200c\u0647\u0627";
    },
    get$youRejectedTheInvitation() {
      return "\u0634\u0645\u0627 \u062f\u0639\u0648\u062a \u0631\u0627 \u0631\u062f \u06a9\u0631\u062f\u06cc\u062f";
    },
    get$youJoinedTheChat() {
      return "\u0634\u0645\u0627 \u0628\u0647 \u06af\u067e \u067e\u06cc\u0648\u0633\u062a\u06cc\u062f";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d \u0634\u0645\u0627 \u062f\u0639\u0648\u062a \u0631\u0627 \u067e\u0630\u06cc\u0631\u0641\u062a\u06cc\u062f";
    },
    youBannedUser$1(user) {
      return "\u0634\u0645\u0627 " + user + " \u0631\u0627 \u0645\u062d\u0631\u0648\u0645 \u06a9\u0631\u062f\u06cc\u062f";
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "\u0634\u0645\u0627 \u062f\u0639\u0648\u062a " + user + " \u0631\u0627 \u067e\u0633\u200c\u06af\u0631\u0641\u062a\u06cc\u062f";
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 \u0634\u0645\u0627 \u062a\u0648\u0633\u0637 " + user + " \u062f\u0639\u0648\u062a \u0634\u062f\u0647\u200c\u0627\u06cc\u062f";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 \u0634\u0645\u0627 " + user + " \u0631\u0627 \u062f\u0639\u0648\u062a \u06a9\u0631\u062f\u06cc\u062f";
    },
    youKicked$1(user) {
      return "\ud83d\udc5e \u0634\u0645\u0627 " + user + " \u0631\u0627 \u0628\u06cc\u0631\u0648\u0646 \u06a9\u0631\u062f\u06cc\u062f";
    },
    youUnbannedUser$1(user) {
      return "\u0634\u0645\u0627 \u0645\u062d\u0631\u0648\u0645\u06cc\u062a " + user + " \u0631\u0627 \u0628\u0631\u062f\u0627\u0634\u062a\u06cc\u062f";
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " has knocked";
    },
    get$usersMustKnock() {
      return "Users must knock";
    },
    get$noOneCanJoin() {
      return "No one can join";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " would like to join the chat.";
    },
    get$knock() {
      return "Knock";
    },
    get$users() {
      return "\u06a9\u0627\u0631\u0628\u0631\u0647\u0627";
    },
    countFiles$1(count) {
      return "" + count + " \u0641\u0627\u06cc\u0644";
    },
    get$user() {
      return "\u06a9\u0627\u0631\u0628\u0631";
    },
    get$custom() {
      return "\u0633\u0641\u0627\u0631\u0634\u06cc";
    },
    get$noKeyForThisMessage() {
      return "\u0627\u06af\u0631 \u067e\u06cc\u0627\u0645 \u0642\u0628\u0644 \u0627\u0632 \u0648\u0631\u0648\u062f \u0628\u0647 \u062d\u0633\u0627\u0628\u062a\u0627\u0646 \u062f\u0631 \u0627\u06cc\u0646 \u062f\u0633\u062a\u06af\u0627\u0647 \u0627\u0631\u0633\u0627\u0644 \u0634\u062f\u0647 \u0628\u0627\u0634\u062f\u060c \u0645\u0645\u06a9\u0646 \u0627\u0633\u062a \u0627\u06cc\u0646 \u0627\u062a\u0641\u0627\u0642 \u0628\u06cc\u0641\u062a\u062f.\n\n\u0647\u0645\u0686\u0646\u06cc\u0646 \u0645\u0645\u06a9\u0646 \u0627\u0633\u062a \u0641\u0631\u0633\u062a\u0646\u062f\u0647\u060c \u062f\u0633\u062a\u06af\u0627\u0647 \u0634\u0645\u0627 \u0631\u0627 \u0645\u0633\u062f\u0648\u062f \u06a9\u0631\u062f\u0647 \u0628\u0627\u0634\u062f \u06cc\u0627 \u0645\u0634\u06a9\u0644\u06cc \u062f\u0631 \u0627\u062a\u0635\u0627\u0644 \u0627\u06cc\u0646\u062a\u0631\u0646\u062a \u0631\u062e \u062f\u0627\u062f\u0647 \u0628\u0627\u0634\u062f.\n\n\u0622\u06cc\u0627 \u0645\u06cc \u062a\u0648\u0627\u0646\u06cc\u062f \u067e\u06cc\u0627\u0645 \u0631\u0627 \u062f\u0631 \u0646\u0634\u0633\u062a \u062f\u06cc\u06af\u0631\u06cc \u0628\u062e\u0648\u0627\u0646\u06cc\u062f\u061f \u0628\u0646\u0627\u0628\u0631\u0627\u06cc\u0646 \u0645\u06cc \u062a\u0648\u0627\u0646\u06cc\u062f \u067e\u06cc\u0627\u0645 \u0631\u0627 \u0627\u0632 \u0622\u0646 \u0645\u0646\u062a\u0642\u0644 \u06a9\u0646\u06cc\u062f! \u0628\u0647 \u062a\u0646\u0638\u06cc\u0645\u0627\u062a > \u062f\u0633\u062a\u06af\u0627\u0647\u200c\u0647\u0627 \u0628\u0631\u0648\u06cc\u062f \u0648 \u0645\u0637\u0645\u0626\u0646 \u0634\u0648\u06cc\u062f \u06a9\u0647 \u062f\u0633\u062a\u06af\u0627\u0647 \u0647\u0627\u06cc \u0634\u0645\u0627 \u06cc\u06a9\u062f\u06cc\u06af\u0631 \u0631\u0627 \u062a\u0627\u06cc\u06cc\u062f \u06a9\u0631\u062f\u0647\u200c\u0627\u0646\u062f. \u0647\u0646\u06af\u0627\u0645\u06cc \u06a9\u0647 \u062f\u0641\u0639\u0647 \u0628\u0639\u062f \u0627\u062a\u0627\u0642 \u0631\u0627 \u0628\u0627\u0632 \u0645\u06cc\u200c\u06a9\u0646\u06cc\u062f \u0648 \u0647\u0631 \u062f\u0648 \u062c\u0644\u0633\u0647 \u062f\u0631 \u067e\u06cc\u0634\u200c\u0632\u0645\u06cc\u0646\u0647 \u0647\u0633\u062a\u0646\u062f\u060c \u06a9\u0644\u06cc\u062f\u0647\u0627 \u0628\u0647 \u0637\u0648\u0631 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0645\u0646\u062a\u0642\u0644 \u0645\u06cc\u200c\u0634\u0648\u0646\u062f.\n\n\u0622\u06cc\u0627 \u0646\u0645\u06cc\u200c\u062e\u0648\u0627\u0647\u06cc\u062f \u0647\u0646\u06af\u0627\u0645 \u062e\u0631\u0648\u062c \u0627\u0632 \u0633\u06cc\u0633\u062a\u0645 \u06cc\u0627 \u062a\u0639\u0648\u06cc\u0636 \u062f\u0633\u062a\u06af\u0627\u0647\u060c \u06a9\u0644\u06cc\u062f\u0647\u0627 \u0631\u0627 \u06af\u0645 \u06a9\u0646\u06cc\u062f\u061f \u0645\u0637\u0645\u0626\u0646 \u0634\u0648\u06cc\u062f \u06a9\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646 \u06af\u067e \u0631\u0627 \u062f\u0631 \u062a\u0646\u0638\u06cc\u0645\u0627\u062a \u0641\u0639\u0627\u0644 \u06a9\u0631\u062f\u0647\u200c\u0627\u06cc\u062f.";
    },
    get$newSpace() {
      return "\u0641\u0636\u0627\u06cc \u062c\u062f\u06cc\u062f";
    },
    get$doNotShowAgain() {
      return "\u062f\u0648\u0628\u0627\u0631\u0647 \u0646\u0634\u0627\u0646 \u0646\u062f\u0647";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "\u06af\u067e \u062e\u0627\u0644\u06cc (" + oldDisplayName + " \u0628\u0648\u062f)";
    },
    get$reopenChat() {
      return "\u06af\u067e \u0631\u0627 \u062f\u0648\u0628\u0627\u0631\u0647 \u0628\u0627\u0632 \u06a9\u0646\u06cc\u062f";
    },
    get$noOtherDevicesFound() {
      return "\u062f\u0633\u062a\u06af\u0627\u0647 \u062f\u06cc\u06af\u0631\u06cc \u067e\u06cc\u062f\u0627 \u0646\u0634\u062f";
    },
    fileIsTooBigForServer$1(max) {
      return "\u0633\u0631\u0648\u0631 \u06af\u0632\u0627\u0631\u0634 \u0645\u06cc\u200c\u062f\u0647\u062f \u06a9\u0647 \u0641\u0627\u06cc\u0644 \u0628\u0631\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u0628\u0633\u06cc\u0627\u0631 \u0628\u0632\u0631\u06af \u0627\u0633\u062a.";
    },
    get$jumpToLastReadMessage() {
      return "\u067e\u0631\u0634 \u0628\u0647 \u0622\u062e\u0631\u06cc\u0646 \u067e\u06cc\u0627\u0645 \u062e\u0648\u0627\u0646\u062f\u0647 \u0634\u062f\u0647";
    },
    get$readUpToHere() {
      return "\u062a\u0627 \u0627\u06cc\u0646\u062c\u0627 \u062e\u0648\u0627\u0646\u062f\u0647 \u0634\u062f\u0647";
    },
    get$jump() {
      return "\u067e\u0631\u0634";
    },
    get$openLinkInBrowser() {
      return "\u0628\u0627\u0632\u06a9\u0631\u062f\u0646 \u067e\u06cc\u0648\u0646\u062f \u062f\u0631 \u0645\u0631\u0648\u0631\u06af\u0631";
    },
    get$profileNotFound() {
      return "The user could not be found on the server. Maybe there is a connection problem or the user doesn't exist.";
    },
    get$setColorTheme() {
      return "Set color theme:";
    },
    get$invite() {
      return "Invite";
    },
    get$invalidInput() {
      return "Invalid input!";
    },
    wrongPinEntered$1(seconds) {
      return "Wrong pin entered! Try again in " + seconds + " seconds...";
    },
    get$pleaseEnterANumber() {
      return "Please enter a number greater than 0";
    },
    get$roomUpgradeDescription() {
      return "The chat will then be recreated with the new room version. All participants will be notified that they need to switch to the new chat. You can find out more about room versions at https://spec.matrix.org/latest/rooms/";
    },
    get$removeDevicesDescription() {
      return "You will be logged out of this device and will no longer be able to receive messages.";
    },
    get$banUserDescription() {
      return "The user will be banned from the chat and will not be able to enter the chat again until they are unbanned.";
    },
    get$unbanUserDescription() {
      return "The user will be able to enter the chat again if they try.";
    },
    get$kickUserDescription() {
      return "The user is kicked out of the chat but not banned. In public chats, the user can rejoin at any time.";
    },
    get$makeAdminDescription() {
      return "Once you make this user admin, you may not be able to undo this as they will then have the same permissions as you.";
    },
    get$yourGlobalUserIdIs() {
      return "Your global user-ID is: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Unfortunately no user could be found with "' + query + '". Please check whether you made a typo.';
    },
    get$knocking() {
      return "Knocking";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "Chat can be discovered via the search on " + server;
    },
    get$searchChatsRooms() {
      return "Search for #chats, @users...";
    },
    get$nothingFound() {
      return "Nothing found...";
    },
    get$wrongRecoveryKey() {
      return "Sorry... this does not seem to be the correct recovery key.";
    },
    get$startConversation() {
      return "Start conversation";
    },
    get$commandHint_sendraw() {
      return "Send raw json";
    },
    get$searchForUsers() {
      return "Search for @users...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Please enter your current password";
    },
    get$newPassword() {
      return "New password";
    },
    get$pleaseChooseAStrongPassword() {
      return "Please choose a strong password";
    },
    get$passwordsDoNotMatch() {
      return "Passwords do not match";
    },
    get$passwordIsWrong() {
      return "Your entered password is wrong";
    },
    get$publicChatAddresses() {
      return "Public chat addresses";
    },
    get$createNewAddress() {
      return "Create new address";
    },
    get$joinSpace() {
      return "Join space";
    },
    get$publicSpaces() {
      return "Public spaces";
    },
    get$decline() {
      return "Decline";
    },
    get$thisDevice() {
      return "This device:";
    },
    get$initAppError() {
      return "An error occured while init the app";
    },
    get$userRole() {
      return "User role";
    },
    searchIn$1(chat) {
      return 'Search in chat "' + chat + '"...';
    },
    get$searchMore() {
      return "Search more...";
    },
    get$gallery() {
      return "Gallery";
    },
    get$files(_) {
      return "Files";
    },
    sessionLostBody$2(url, error) {
      return "Your session is lost. Please report this error to the developers at " + url + ". The error message is: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "The app now tries to restore your session from the backup. Please report this error to the developers at " + url + ". The error message is: " + error;
    },
    get$sendReadReceipts() {
      return "Send read receipts";
    },
    get$sendTypingNotificationsDescription() {
      return "Other participants in a chat can see when you are typing a new message.";
    },
    get$sendReadReceiptsDescription() {
      return "Other participants in a chat can see when you have read a message.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verify other device";
    },
    get$verifyOtherDeviceDescription() {
      return "When you verify another device, those devices can exchange keys, increasing your overall security. \ud83d\udcaa When you start a verification, a popup will appear in the app on both devices. There you will then see a series of emojis or numbers that you have to compare with each other. It's best to have both devices handy before you start the verification. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " accepted key verification";
    },
    canceledKeyVerification$1(sender) {
      return sender + " canceled key verification";
    },
    completedKeyVerification$1(sender) {
      return sender + " completed key verification";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " is ready for key verification";
    },
    requestedKeyVerification$1(sender) {
      return sender + " requested key verification";
    },
    startedKeyVerification$1(sender) {
      return sender + " started key verification";
    },
    get$stickers() {
      return "Stickers";
    },
    get$discover() {
      return "Discover";
    },
    get$commandHint_ignore() {
      return "Ignore the given matrix ID";
    },
    get$commandHint_unignore() {
      return "Unignore the given matrix ID";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Right now there are " + count + " users blocked.";
    },
    get$restricted() {
      return "Restricted";
    },
    get$knockRestricted() {
      return "Knock restricted";
    },
    goToSpace$1(space) {
      return "Go to space: " + space;
    },
    get$markAsUnread() {
      return "Mark as unread";
    },
    userLevel$1(level) {
      return "" + level + " - User";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Admin";
    },
    get$changeGeneralChatSettings() {
      return "Change general chat settings";
    },
    get$inviteOtherUsers() {
      return "Invite other users to this chat";
    },
    get$changeTheChatPermissions() {
      return "Change the chat permissions";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Change the visibility of the chat history";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Change the main public chat address";
    },
    get$sendRoomNotifications() {
      return "Send a @room notifications";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Change the description of the chat";
    },
    get$chatPermissionsDescription() {
      return "Define which power level is necessary for certain actions in this chat. The power levels 0, 50 and 100 are usually representing users, moderators and admins, but any gradation is possible.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Update " + version + " installed!";
    },
    get$sendCanceled() {
      return "Sending canceled";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Doesn't seem to be a compatible homeserver. Wrong URL?";
    },
    get$calculatingFileSize() {
      return "Calculating file size...";
    },
    get$prepareSendingAttachment() {
      return "Prepare sending attachment...";
    },
    get$sendingAttachment() {
      return "Sending attachment...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Sending attachment " + index + " of " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Server limit reached! Waiting " + seconds + " seconds...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Note: When you connect all your devices to the chat backup, they are automatically verified.";
    },
    get$continueText() {
      return "Continue";
    },
    get$blur(_) {
      return "Blur:";
    },
    get$opacity(_) {
      return "Opacity:";
    },
    get$setWallpaper() {
      return "Set wallpaper";
    },
    get$noContactInformationProvided() {
      return "Server does not provide any valid contact information";
    },
    get$contactServerAdmin() {
      return "Contact server admin";
    },
    get$contactServerSecurity() {
      return "Contact server security";
    },
    get$supportPage() {
      return "Support page";
    },
    get$serverInformation() {
      return "Server information:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Bold text";
    },
    get$italicText() {
      return "Italic text";
    },
    get$strikeThrough() {
      return "Strikethrough";
    },
    get$pleaseFillOut() {
      return "Please fill out";
    },
    get$invalidUrl() {
      return "Invalid url";
    },
    get$addLink() {
      return "Add link";
    },
    get$unableToJoinChat() {
      return "Unable to join chat. Maybe the other party has already closed the conversation.";
    },
    get$previous() {
      return "Previous";
    },
    get$otherPartyNotLoggedIn() {
      return "The other party is currently not logged in and therefore cannot receive messages!";
    },
    get$open(_) {
      return "Open";
    },
    get$waitingForServer() {
      return "Waiting for server...";
    },
    get$newChatRequest() {
      return "\ud83d\udce9 New chat request";
    },
    get$contentNotificationSettings() {
      return "Content notification settings";
    },
    get$generalNotificationSettings() {
      return "General notification settings";
    },
    get$roomNotificationSettings() {
      return "Room notification settings";
    },
    get$userSpecificNotificationSettings() {
      return "User specific notification settings";
    },
    get$otherNotificationSettings() {
      return "Other notification settings";
    },
    get$notificationRuleContainsUserName() {
      return "Contains User Name";
    },
    get$notificationRuleContainsUserNameDescription() {
      return "Notifies the user when a message contains their username.";
    },
    get$notificationRuleMaster() {
      return "Mute all notifications";
    },
    get$notificationRuleMasterDescription() {
      return "Overrides all other rules and disables all notifications.";
    },
    get$notificationRuleSuppressNotices() {
      return "Suppress Automated Messages";
    },
    get$notificationRuleSuppressNoticesDescription() {
      return "Suppresses notifications from automated clients like bots.";
    },
    get$notificationRuleInviteForMe() {
      return "Invite for Me";
    },
    get$notificationRuleInviteForMeDescription() {
      return "Notifies the user when they are invited to a room.";
    },
    get$notificationRuleMemberEvent() {
      return "Member Event";
    },
    get$notificationRuleMemberEventDescription() {
      return "Suppresses notifications for membership events.";
    },
    get$notificationRuleIsUserMention() {
      return "User Mention";
    },
    get$notificationRuleIsUserMentionDescription() {
      return "Notifies the user when they are directly mentioned in a message.";
    },
    get$notificationRuleContainsDisplayName() {
      return "Contains Display Name";
    },
    get$notificationRuleContainsDisplayNameDescription() {
      return "Notifies the user when a message contains their display name.";
    },
    get$notificationRuleIsRoomMention() {
      return "Room Mention";
    },
    get$notificationRuleIsRoomMentionDescription() {
      return "Notifies the user when there is a room mention.";
    },
    get$notificationRuleRoomnotif() {
      return "Room Notification";
    },
    get$notificationRuleRoomnotifDescription() {
      return "Notifies the user when a message contains '@room'.";
    },
    get$notificationRuleTombstone() {
      return "Tombstone";
    },
    get$notificationRuleTombstoneDescription() {
      return "Notifies the user about room deactivation messages.";
    },
    get$notificationRuleReaction() {
      return "Reaction";
    },
    get$notificationRuleReactionDescription() {
      return "Suppresses notifications for reactions.";
    },
    get$notificationRuleRoomServerAcl() {
      return "Room Server ACL";
    },
    get$notificationRuleRoomServerAclDescription() {
      return "Suppresses notifications for room server access control lists (ACL).";
    },
    get$notificationRuleSuppressEdits() {
      return "Suppress Edits";
    },
    get$notificationRuleSuppressEditsDescription() {
      return "Suppresses notifications for edited messages.";
    },
    get$notificationRuleCall() {
      return "Call";
    },
    get$notificationRuleCallDescription() {
      return "Notifies the user about calls.";
    },
    get$notificationRuleEncryptedRoomOneToOne() {
      return "Encrypted Room One-to-One";
    },
    get$notificationRuleEncryptedRoomOneToOneDescription() {
      return "Notifies the user about messages in encrypted one-to-one rooms.";
    },
    get$notificationRuleRoomOneToOne() {
      return "Room One-to-One";
    },
    get$notificationRuleRoomOneToOneDescription() {
      return "Notifies the user about messages in one-to-one rooms.";
    },
    get$notificationRuleMessage() {
      return "Message";
    },
    get$notificationRuleMessageDescription() {
      return "Notifies the user about general messages.";
    },
    get$notificationRuleEncrypted() {
      return "Encrypted";
    },
    get$notificationRuleEncryptedDescription() {
      return "Notifies the user about messages in encrypted rooms.";
    },
    get$notificationRuleJitsi() {
      return "Jitsi";
    },
    get$notificationRuleJitsiDescription() {
      return "Notifies the user about Jitsi widget events.";
    },
    get$notificationRuleServerAcl() {
      return "Suppress Server ACL Events";
    },
    get$notificationRuleServerAclDescription() {
      return "Suppresses notifications for Server ACL events.";
    },
    unknownPushRule$1(rule) {
      return "Unknown push rule '" + rule + "'";
    },
    get$deletePushRuleCanNotBeUndone() {
      return "If you delete this notification setting, this can not be undone.";
    },
    get$more() {
      return "More";
    },
    get$shareKeysWith() {
      return "Share keys with...";
    },
    get$shareKeysWithDescription() {
      return "Which devices should be trusted so that they can read along your messages in encrypted chats?";
    },
    get$allDevices() {
      return "All devices";
    },
    get$crossVerifiedDevicesIfEnabled() {
      return "Cross verified devices if enabled";
    },
    get$crossVerifiedDevices() {
      return "Cross verified devices";
    },
    get$verifiedDevicesOnly() {
      return "Verified devices only";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    writeAMessageLangCodes$2(l1, l2) {
      return "Type in " + l1 + " or " + l2 + "...";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$interactiveTranslatorRequired() {
      return "Required";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$classRoster() {
      return "Participants";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocab";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$listen() {
      return "Listen";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$translations() {
      return "translations";
    },
    get$messageAudio() {
      return "message audio";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run Pangea writing assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run Pangea Chat grammar and translation writing assistance before sending my message.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of members.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of members allowed in a chat.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyVERBFORMaux() {
      return "Auxiliary";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyUNKNOWN() {
      return "Unknown";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyASPECTimp() {
      return "Imperfective Aspect";
    },
    get$grammarCopyCASEvoc() {
      return "Vocative";
    },
    get$grammarCopyCASEcom() {
      return "Comitative";
    },
    get$grammarCopyCASEpar() {
      return "Partitive";
    },
    get$grammarCopyCASEadv() {
      return "Adverbial";
    },
    get$grammarCopyCASEref() {
      return "Referential";
    },
    get$grammarCopyCASErel() {
      return "Relative";
    },
    get$grammarCopyCASEsub() {
      return "Subessive";
    },
    get$grammarCopyCASEsup() {
      return "Superessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyCONJTYPEsub() {
      return "Subordinating";
    },
    get$grammarCopyCONJTYPEcmp() {
      return "Comparative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyMOODint() {
      return "Interrogative Mood";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOLARITYpos() {
      return "Positive Polarity";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$grammarCopyVERBFORMsup() {
      return "SuApine";
    },
    get$grammarCopyVERBFORMadn() {
      return "Adnominal";
    },
    get$grammarCopyVERBFORMlng() {
      return "Long";
    },
    get$grammarCopyVERBTYPEcaus() {
      return "Causative Verb";
    },
    get$grammarCopyVOICEcau() {
      return "Causative";
    },
    get$grammarCopyVOICEdir() {
      return "Direct";
    },
    get$grammarCopyVOICEinv() {
      return "Inverse";
    },
    get$grammarCopyVOICErcp() {
      return "Reciprocal";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete one of the activities (emoji, meaning, listening OR grammar) to unlock the translation!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language.";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseAgreeToTOS() {
      return "Please agree to the Terms and Conditions";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "\ud83d\udd75\ufe0f Click any word for details. \ud83e\uddd0";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$writingExercisesTooltip() {
      return "Writing activities";
    },
    get$listeningExercisesTooltip() {
      return "Listening activities";
    },
    get$readingExercisesTooltip() {
      return "Reading activities";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$downloadSpaceAnalytics() {
      return "Download space analytics";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    get$chooseLemmaMeaningInstructionsBody() {
      return "Match the meanings to the words in the message!";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$notInClass() {
      return "Not in a class!";
    },
    get$noClassCode() {
      return "No class code!";
    },
    get$chooseCorrectLabel() {
      return "Choose the correct label.";
    },
    levelPopupTitle$1(level) {
      return "Congratulations on reaching\nLevel " + level;
    },
    get$activityPlannerTitle() {
      return "Activity Planner";
    },
    get$topicLabel() {
      return "Topic";
    },
    get$topicPlaceholder() {
      return "Choose a topic...";
    },
    get$modeLabel() {
      return "Mode";
    },
    get$modePlaceholder() {
      return "Choose a mode...";
    },
    get$learningObjectiveLabel() {
      return "Learning Objective";
    },
    get$learningObjectivePlaceholder() {
      return "Choose a learning objective...";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR level";
    },
    get$generateActivitiesButton() {
      return "Generate Activities";
    },
    get$launchActivityButton() {
      return "Launch Activity";
    },
    get$nan() {
      return "Not applicable";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$myBookmarkedActivities() {
      return "My Bookmarked Activities";
    },
    get$noBookmarkedActivities() {
      return "No bookmarked activities";
    },
    get$activityTitle() {
      return "Activity Title";
    },
    get$addVocabulary() {
      return "Add vocabulary";
    },
    get$instructions() {
      return "Instructions";
    },
    get$numberOfLearners() {
      return "Number of learners";
    },
    get$mustBeInteger() {
      return "Must be an integer e.g. 1, 2, 3, ...";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "By leaving the space, you will leave all of the chats within it. Other users will see that you have left the space.";
    },
    get$constructUseCorMmDesc() {
      return "Correct message meaning";
    },
    get$constructUseIncMmDesc() {
      return "Incorrect message meaning";
    },
    get$constructUseIgnMmDesc() {
      return "Ignored message meaning";
    },
    get$meaning() {
      return "Meaning";
    },
    chatWith$1(displayname) {
      return "Group with " + displayname;
    },
    get$clickOnEmailLink() {
      return "Please click on the link in the email and then proceed. In rare cases, the email can be sent to spam or take up to 5 minutes to arrive.";
    },
    get$whoIsAllowedToJoinThisChat() {
      return "Who is allowed to join this chat";
    },
    get$dontForgetPassword() {
      return "Don't forget your password!";
    },
    get$enableAutocorrectToolName() {
      return "Enable device autocorrect";
    },
    get$enableAutocorrectDescription() {
      return "If your device supports the language your learning, you can enable device autocorrect to fix common errors as you type.";
    },
    get$ttsDisbledTitle() {
      return "Text-to-speech disabled";
    },
    get$ttsDisabledBody() {
      return "You can enable text-to-speech in your learning settings";
    },
    get$noSpaceDescriptionYet() {
      return "No space description created yet.";
    },
    get$tooLargeToSend() {
      return "This message is too large to send";
    },
    get$exitWithoutSaving() {
      return "Are you sure you want to leave without saving?";
    },
    get$enableAutocorrectWarning() {
      return "Warning! Requires adding your target language keyboard";
    },
    get$displayName(_) {
      return "Display name";
    },
    get$leaveRoomDescription() {
      return "You're about to leave this chat. Other users will see that you have left the chat.";
    },
    get$confirmUserId() {
      return "Please confirm your Pangea Chat username in order to delete your account.";
    },
    paidSubscriptionStarts$1(startDate) {
      return "Starting " + startDate;
    },
    get$cancelInSubscriptionSettings() {
      return "\u2022 Cancel at any time in subscription settings";
    },
    get$autocorrectNotAvailable() {
      return "Unfortunately your platform is not currently supported for this feature. Stay tuned for further development!";
    },
    get$pleaseUpdateApp() {
      return "Please update the app to continue.";
    },
    get$chooseEmojiInstructionsBody() {
      return "Match emojis with the words they best represent. Don't worry! No points off for disagreeing. \ud83d\ude05";
    },
    pickAnEmojiFor$1(lemma) {
      return "Pick an emoji for $" + lemma;
    },
    get$analyticsVocabListBody() {
      return "This is all your vocabulary! As you earn XP for each word, they'll go from seedling to full bloom. Click on any word to see more details.";
    },
    get$morphAnalyticsListBody() {
      return "These are all the grammar concepts in the language you're learning! You'll unlock them as you encounter them while chatting. Click for details.";
    },
    get$knockSpaceSuccess() {
      return "You have requested to join this space! An admin will respond to your request when they receive it \ud83d\ude00";
    },
    get$joinByCode() {
      return "Join by code";
    },
    get$chooseWordAudioInstructionsBody() {
      return "Listen to the full message then match the word audios to the right blanks!";
    },
    get$chooseMorphsInstructionsBody() {
      return "Click the puzzle pieces for grammar questions!";
    },
    get$inviteAndLaunch() {
      return "Launch and invite";
    },
    get$createOwnChat() {
      return "Create your own chat";
    },
    get$pleaseEnterInt() {
      return "Please enter a number";
    },
    get$home() {
      return "Home";
    },
    get$join(_) {
      return "Join";
    },
    get$readingAssistanceOverviewBody() {
      return "Click the buttons below for mini-games on matching emojis, audios, word meanings, and grammar concepts. Or click on any word for details.";
    },
    get$levelSummaryTrigger() {
      return "View summary";
    },
    levelSummaryPopupTitle$1(level) {
      return "Level " + level + " Summary";
    },
    get$referFriends() {
      return "Refer friends";
    },
    get$referFriendDialogTitle() {
      return "Invite a friend to your conversation";
    },
    get$referFriendDialogDesc() {
      return "Do you have a friend who is excited to learn a new language with you? Then copy and send this invitation link to join and start chatting with you today.";
    },
    get$youUnlocked() {
      return "You've unlocked";
    },
    get$resetInstructionTooltipsTitle() {
      return "Reset instruction tooltips";
    },
    get$resetInstructionTooltipsDesc() {
      return "Click to show instruction tooltips like for a brand new user.";
    },
    get$selectForGrammar() {
      return "Select a grammar icon for activities and details.";
    },
    get$newChatActivityTitle() {
      return "Add a fun activity?";
    },
    get$newChatActivityDesc() {
      return "Make every group chat an adventure with Activity Planner! Set captivating topics and objectives for the group, and bring conversations to life with stunning images. Spark imaginative discussions and keep the fun flowing effortlessly!";
    },
    get$randomize() {
      return "Randomize";
    },
    get$clear(_) {
      return "Clear";
    },
    get$makeYourOwnActivity() {
      return "Make your own activity";
    },
    get$featuredActivities() {
      return "Featured";
    },
    get$yourBookmarks() {
      return "Bookmarked";
    },
    get$goToChat() {
      return "Go to chat";
    },
    get$save(_) {
      return "Save";
    },
    get$selectActivity() {
      return "Select activity";
    },
    get$wordFocusListeningMultipleChoice() {
      return "Which audio matches the word?";
    },
    get$createActivity() {
      return "Create activity";
    },
    get$startChat() {
      return "Start a chat";
    },
    get$translationProblem() {
      return "Translation problem";
    },
    get$perfectTranslation() {
      return "Perfect translation!";
    },
    get$greatJobTranslation() {
      return "Great job with this translation!";
    },
    get$goodJobTranslation() {
      return "Good work on this translation.";
    },
    get$makingProgress() {
      return "You're making progress!";
    },
    get$keepPracticing() {
      return "Keep practicing!";
    },
    get$niceJob() {
      return "Nice job!";
    },
    get$publicSpacesTitle() {
      return "Learning communities";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(A.L10nFa, C.L10n);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nFa":{"L10n":[]}}'));
  var string$ = {
    ______: "\n\u0648\u0644\u06cc \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647 \u0641\u0642\u0637 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u062f \u0627\u06cc\u0646\u200c\u0647\u0627 \u0631\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u06a9\u0646\u062f:\n"
  };
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_210", e: "endPart", h: h});
})($__dart_deferred_initializers__, "LWqaujRi5FjVfPGTwSw/lRY1+Vc=");
;
//# sourceMappingURL=main.dart.js_210.part.js.map
