// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.6.1.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_267", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    L10nRo$() {
      return new B.L10nRo(A.canonicalizedLocale("ro"));
    },
    L10nRo: function L10nRo(t0) {
      this.localeName = t0;
    }
  };
  A = holdersList[0];
  C = holdersList[51];
  B = hunkHelpers.updateHolder(holdersList[40], B);
  B.L10nRo.prototype = {
    get$alwaysUse24HourFormat() {
      return "false";
    },
    get$repeatPassword() {
      return "Repeta\u021bi parola";
    },
    get$notAnImage() {
      return "Not an image file.";
    },
    get$remove(_) {
      return "Elimina\u021bi";
    },
    get$importNow() {
      return "Import now";
    },
    get$importEmojis() {
      return "Import Emojis";
    },
    get$importFromZipFile() {
      return "Import from .zip file";
    },
    get$exportEmotePack() {
      return "Export Emote pack as .zip";
    },
    get$replace(_) {
      return "Replace";
    },
    aboutHomeserver$1(homeserver) {
      return "About " + homeserver;
    },
    get$accept(_) {
      return "Accept";
    },
    acceptedTheInvitation$1(username) {
      return username + " a aceptat invita\u021bi";
    },
    get$account() {
      return "Cont";
    },
    activatedEndToEndEncryption$1(username) {
      return username + " a activat criptarea end-to-end";
    },
    get$addEmail() {
      return "Ad\u0103uga\u021bi email";
    },
    get$confirmMatrixId() {
      return "V\u0103 rug\u0103m s\u0103 confirma\u021bi Matrix ID-ul vostru s\u0103 \u0219terge\u021bi contul vostru.";
    },
    supposedMxid$1(mxid) {
      return "ID-ul ar trebuii s\u0103 fie " + mxid;
    },
    get$addToSpace() {
      return "Ad\u0103uga\u021bi la spa\u021biu";
    },
    get$admin() {
      return "Administrator";
    },
    get$alias() {
      return "porecl\u0103";
    },
    get$all() {
      return "Toate";
    },
    get$commandHint_googly() {
      return "Trimite\u021bi c\xe2\u021biva ochi googly";
    },
    get$commandHint_cuddle() {
      return "Trimite\u021bi o \xeembr\u0103\u021bi\u0219are";
    },
    get$commandHint_hug() {
      return "Trimite\u021bi o \xeembr\u0103\u021bi\u0219are";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " v-a trimis ochi googly";
    },
    cuddleContent$1(senderName) {
      return senderName + " v\u0103 \xeembr\u0103\u021bi\u0219eaz\u0103";
    },
    hugContent$1(senderName) {
      return senderName + " v\u0103 \xeembr\u0103\u021bi\u0219eaz\u0103";
    },
    answeredTheCall$1(senderName) {
      return senderName + " a acceptat apelul";
    },
    get$anyoneCanJoin() {
      return "Oricine se poate al\u0103tura";
    },
    get$archive() {
      return "Arhiv\u0103";
    },
    get$areGuestsAllowedToJoin() {
      return 'Vizitatorii "guest" se pot al\u0103tura';
    },
    get$areYouSure() {
      return "E\u0219ti sigur?";
    },
    get$areYouSureYouWantToLogout() {
      return "Sunte\u021bi sigur c\u0103 dori\u021bi s\u0103 v\u0103 deconecta\u021bi?";
    },
    get$askSSSSSign() {
      return "Pentru a putea conecta cealalt\u0103 persoan\u0103, te rog introdu parola sau cheia ta de recuperare.";
    },
    askVerificationRequest$1(username) {
      return "Accep\u021bi cererea de verificare de la " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "Homeserver-ul suport\u0103 urm\u0103toarele feluri de login:\n" + serverVersions + "\nDar aceast\u0103 aplica\u021bie suport\u0103 numai:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "Send typing notifications";
    },
    get$swipeRightToLeftToReply() {
      return "Swipe right to left to reply";
    },
    get$sendOnEnter() {
      return "Trimite cu tasta enter";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "Homeserver-ul suport\u0103 versiunele de Spec urm\u0103toare:\n" + serverVersions + "\nDar aceast\u0103 aplica\u021bie suport\u0103 numai " + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return A.S(chats) + " chats and " + A.S(participants) + " participants";
    },
    get$noMoreChatsFound() {
      return "No more chats found...";
    },
    get$noChatsFoundHere() {
      return "No chats found here yet. Start a new chat with someone by using the button below. \u2935\ufe0f";
    },
    get$unread() {
      return "Unread";
    },
    get$space() {
      return "Space";
    },
    get$spaces() {
      return "Spaces";
    },
    get$banFromChat() {
      return "Interzis din conversa\u021bie";
    },
    get$banned() {
      return "Interzis";
    },
    bannedUser$2(username, targetName) {
      return username + " a interzis pe " + targetName;
    },
    get$blockDevice() {
      return "Blocheaz\u0103 dispozitiv";
    },
    get$blocked() {
      return "Blocat";
    },
    get$botMessages() {
      return "Mesaje Bot";
    },
    get$cancel(_) {
      return "Anuleaz\u0103";
    },
    cantOpenUri$1(uri) {
      return "Nu se poate deschide URI-ul " + uri;
    },
    get$changeDeviceName() {
      return "Schimb\u0103 numele dispozitiv";
    },
    changedTheChatAvatar$1(username) {
      return username + " a schimbat poza conversa\u021bi";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " a schimbat descrierea grupului \xeen '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " a schimbat porecla \xeen '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " a schimbat permisiunile chatului";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " s-a schimbat displayname la: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " a schimbat regulile pentru acesul musafirilor";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " a schimbat regulile pentru acesul musafirilor la: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " a schimbat vizibilitatea istoriei chatului";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " a schimbat vizibilitatea istoriei chatului la: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " a schimbat regulile de al\u0103turare";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " a schimbat regulile de al\u0103turare la: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " s-a schimbat avatarul";
    },
    changedTheRoomAliases$1(username) {
      return username + " a schimbat pseudonimele camerei";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " a schimbat linkul de invita\u021bie";
    },
    get$changePassword() {
      return "Schimba\u021bi parola";
    },
    get$changeTheme() {
      return "Schimba\u021bi tema aplica\u021biei";
    },
    get$changeTheNameOfTheGroup() {
      return "Schimba\u021bi numele grupului";
    },
    get$changeYourAvatar() {
      return "Schimba\u021bi avatarul vostru";
    },
    get$channelCorruptedDecryptError() {
      return "Criptarea a fost corupat\u0103";
    },
    get$chat() {
      return "Chat";
    },
    get$chatDetails() {
      return "Detalii de chat";
    },
    get$chats() {
      return "Chaturi";
    },
    get$chooseAStrongPassword() {
      return "Alege\u021bi o parol\u0103 robust\u0103";
    },
    get$clearArchive() {
      return "\u0218terge\u021bi arhiva";
    },
    get$close(_) {
      return "\xcenchide\u021bi";
    },
    get$commandHint_markasdm() {
      return "Marca\u021bi ca camer\u0103 de mesaje directe";
    },
    get$commandHint_markasgroup() {
      return "Marca\u021bi ca grup";
    },
    get$commandHint_ban() {
      return "Interzice\u021bi acesul utilizatorului ales din aceast\u0103 camer\u0103";
    },
    get$commandHint_clearcache() {
      return "\u0218terge\u021bi cache";
    },
    get$commandHint_create() {
      return "Crea\u021bi un grup de chat gol\nFolosi\u021bi --no-encryption s\u0103 dezactiva\u021bi criptare";
    },
    get$commandHint_discardsession() {
      return "Renun\u021ba\u021bi sesiunea";
    },
    get$commandHint_dm() {
      return "Porni\u021bi un chat direct\nFolosi\u021bi --no-encryption s\u0103 dezactiva\u021bi criptare";
    },
    get$commandHint_html() {
      return "Trimite\u021bi text format ca HTML";
    },
    get$commandHint_invite() {
      return "Invita\u021bi utilizatorul ales la aceast\u0103 camer\u0103";
    },
    get$commandHint_join() {
      return "Al\u0103tura\u021bi-v\u0103 la camera ales\u0103";
    },
    get$commandHint_kick() {
      return "Da\u021bi afar\u0103 pe utilizatorul ales din aceast\u0103 camer\u0103";
    },
    get$commandHint_leave() {
      return "Renun\u021ba\u021bi la aceast\u0103 camer\u0103";
    },
    get$commandHint_me() {
      return "Descrie\u021bi-v\u0103";
    },
    get$commandHint_myroomavatar() {
      return "Alege\u021bi un avatar pentru aceast\u0103 camer\u0103 (folo\u0219e\u0219te mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Alege\u021bi un displayname pentru aceast\u0103 camer\u0103";
    },
    get$commandHint_op() {
      return "Stabili\u021bi nivelul de putere a utilizatorul ales (implicit: 50)";
    },
    get$commandHint_plain() {
      return "Trimite\u021bi text simplu/neformatat";
    },
    get$commandHint_react() {
      return "Trimite\u021bi r\u0103spuns ca reac\u021bie";
    },
    get$commandHint_send() {
      return "Trimite\u021bi text";
    },
    get$commandHint_unban() {
      return "Dezinterzice\u021bi utilizatorul ales din aceast\u0103 camer\u0103";
    },
    get$commandInvalid() {
      return "Comand\u0103 nevalibil\u0103";
    },
    commandMissing$1(command) {
      return command + " nu este o comand\u0103.";
    },
    get$compareEmojiMatch() {
      return "V\u0103 rug\u0103m s\u0103 compara\u021bi emoji-urile";
    },
    get$compareNumbersMatch() {
      return "V\u0103 rug\u0103m s\u0103 compara\u021bi numerele";
    },
    get$configureChat() {
      return "Configura\u021bi chat";
    },
    get$confirm(_) {
      return "Confirma\u021bi";
    },
    get$containsDisplayName() {
      return "Con\u021bine displayname";
    },
    get$containsUserName() {
      return "Con\u021bine nume de utilizator";
    },
    get$contentHasBeenReported() {
      return "Con\u021binutul a fost reportat la administratori serverului";
    },
    get$copiedToClipboard() {
      return "Copiat \xeen clipboard";
    },
    get$copy(_) {
      return "Copia\u021bi";
    },
    couldNotDecryptMessage$1(error) {
      return "Dezcriptarea mesajului a e\u0219uat: " + error;
    },
    countParticipants$1(count) {
      return A.S(count) + " participan\u021bi";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac" + username + " a creat chatul";
    },
    get$createGroup() {
      return "Create group";
    },
    get$currentlyActive() {
      return "Activ acum";
    },
    get$darkTheme() {
      return "\xcentunecat";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Aceast\u0103 ac\u021biune va dezactiva contul vostru. Nu poate fi anulat! Sunte\u021bi sigur?";
    },
    get$defaultPermissionLevel() {
      return "Nivel de permisiuni implicit\u0103";
    },
    get$$delete(_) {
      return "\u0218terge\u021bi";
    },
    get$deleteAccount() {
      return "\u0218terge\u021bi contul";
    },
    get$deleteMessage() {
      return "\u0218terge\u021bi mesajul";
    },
    get$devices() {
      return "Dispozitive";
    },
    get$directChats() {
      return "Chaturi directe";
    },
    get$allRooms() {
      return "Toate chaturi de grup";
    },
    get$displaynameHasBeenChanged() {
      return "Displayname a fost schimbat";
    },
    get$downloadFile() {
      return "Desc\u0103rca\u021bi fi\u0219ierul";
    },
    get$edit() {
      return "Edita\u021bi";
    },
    get$editBlockedServers() {
      return "Edita\u021bi servere blocate";
    },
    get$chatPermissions() {
      return "Chat permissions";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    get$editDisplayname() {
      return "Schimba\u021bi displayname";
    },
    get$editRoomAliases() {
      return "Schimba\u021bi pseudonimele camerei";
    },
    get$editRoomAvatar() {
      return "Schimba\u021bi avatarul din camer\u0103";
    },
    get$emoteExists() {
      return "Emote deja exist\u0103!";
    },
    get$emoteInvalid() {
      return "Shortcode de emote nevalibil!";
    },
    get$emoteKeyboardNoRecents() {
      return "Recently-used emotes will appear here...";
    },
    get$emotePacks() {
      return "Pachete de emoturi din camer\u0103";
    },
    get$globalChatId() {
      return "Global chat ID";
    },
    get$accessAndVisibility() {
      return "Access and visibility";
    },
    get$customEmojisAndStickers() {
      return "Custom emojis and stickers";
    },
    get$emoteShortcode() {
      return "Shortcode de emote";
    },
    get$emoteWarnNeedToPick() {
      return "Trebuie s\u0103 alege\u021bi shortcode pentru emote \u0219i o imagine!";
    },
    get$emptyChat() {
      return "Chat gol";
    },
    get$enableEmotesGlobally() {
      return "Activa\u021bi pachet de emote global";
    },
    get$enableEncryption() {
      return "Activa\u021bi criptare";
    },
    get$encrypted() {
      return "Criptat";
    },
    get$encryptionNotEnabled() {
      return "Criptare nu e activat\u0103";
    },
    endedTheCall$1(senderName) {
      return senderName + " a terminat apelul";
    },
    get$enterAnEmailAddress() {
      return "Introduce\u021bi o adres\u0103 email";
    },
    errorObtainingLocation$1(error) {
      return "Ob\u021binerea loca\u021biei a e\u0219uat: " + error;
    },
    get$extremeOffensive() {
      return "De foarte mare ofens\u0103";
    },
    get$fontSize(_) {
      return "M\u0103rimea fontului";
    },
    get$forward(_) {
      return "\xcenainte";
    },
    get$fromJoining() {
      return "De la al\u0103turare";
    },
    get$fromTheInvitation() {
      return "De la invita\u021bia";
    },
    get$goToTheNewRoom() {
      return "Merge\u021bi la camera nou\u0103";
    },
    get$group() {
      return "Grup";
    },
    get$chatDescription() {
      return "Chat description";
    },
    get$groups() {
      return "Grupuri";
    },
    groupWith$1(displayname) {
      return "Grup cu " + displayname;
    },
    get$guestsAreForbidden() {
      return "Musafiri sunt interzi\u0219i";
    },
    get$guestsCanJoin() {
      return "Musafiri pot s\u0103 se al\u0103ture";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " a retras invita\u021bia pentru " + targetName;
    },
    get$help() {
      return "Ajutor";
    },
    get$hideRedactedMessages() {
      return "Hide redacted messages";
    },
    get$hideRedactedMessagesBody() {
      return "If someone redacts a message, this message won't be visible in the chat anymore.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Hide invalid or unknown message formats";
    },
    get$howOffensiveIsThisContent() {
      return "C\xe2t de ofensiv este acest con\u021binut?";
    },
    get$block() {
      return "block";
    },
    get$blockedUsers() {
      return "Blocked users";
    },
    get$blockListDescription() {
      return "You can block users who are disturbing you. You won't be able to receive any messages or room invites from the users on your personal block list.";
    },
    get$blockUsername() {
      return "Ignore username";
    },
    get$iHaveClickedOnLink() {
      return "Am f\u0103cut click pe link";
    },
    get$incorrectPassphraseOrKey() {
      return "Parol\u0103 sau cheie de recuperare incorect\u0103";
    },
    get$inoffensive() {
      return "Inofensiv";
    },
    get$inviteContact() {
      return "Invita\u021bi contact";
    },
    get$noChatDescriptionYet() {
      return "No chat description created yet.";
    },
    get$tryAgain() {
      return "Try again";
    },
    get$invited() {
      return "Invitat";
    },
    get$redactMessageDescription() {
      return "The message will be redacted for all participants in this conversation. This cannot be undone.";
    },
    get$optionalRedactReason() {
      return "(Optional) Reason for redacting this message...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9" + username + " a invitat " + targetName;
    },
    get$invitedUsersOnly() {
      return "Numai utilizatori invita\u021bi";
    },
    get$inviteForMe() {
      return "Invita\u021bi pentru mine";
    },
    inviteText$2(username, link) {
      return username + " v-a invitat la FluffyChat.\n1. Instala\u021bi FluffyChat: https://fluffychat.im\n2. \xcenregistra\u021bi-v\u0103 sau conecta\u021bi-v\u0103\n3. Deschide\u021bi invita\u021bia: " + link;
    },
    get$isTyping() {
      return "tasteaz\u0103\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b" + username + " a intrat \xeen chat";
    },
    get$joinRoom() {
      return "Al\u0103tura\u021bi la camer\u0103";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e" + username + " a dat afar\u0103 pe " + targetName;
    },
    get$kickFromChat() {
      return "Da\u021bi afar\u0103 din chat";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Ultima dat\u0103 activ: " + localizedTimeShort;
    },
    get$leave() {
      return "Renun\u021ba\u021bi";
    },
    get$leftTheChat() {
      return "A plecat din chat";
    },
    get$lightTheme() {
      return "Luminat";
    },
    loadCountMoreParticipants$1(count) {
      return "\xcenc\u0103rca\u021bi \xeenc\u0103 mai " + count + " participan\u021bi";
    },
    get$dehydrate() {
      return "Exporta\u021bi sesiunea \u0219i \u0219terge\u021bi dispozitivul";
    },
    get$dehydrateWarning() {
      return "Aceast\u0103 actiune nu poate fi anulat\u0103. Asigura\u021bi-v\u0103 c\u0103 p\u0103stra\u021bi fi\u0219ierul backup.";
    },
    get$dehydrateTor() {
      return "Utilizatori de TOR: Exporta\u021bi sesiunea";
    },
    get$dehydrateTorLong() {
      return "Pentru utilizatori de TOR, este recomandat s\u0103 exporta\u021bi sesiunea \xeenainte de a \xeenchide\u021bi fereastra.";
    },
    get$loadingPleaseWait() {
      return "\xcenc\u0103rc\xe2nd... V\u0103 rug\u0103m s\u0103 a\u0219tepta\u021bi.";
    },
    get$loadMore() {
      return "\xcencarc\u0103 mai multe\u2026";
    },
    get$locationDisabledNotice() {
      return "Servicile de loca\u021bie sunt dezactivate. V\u0103 rug\u0103m s\u0103 le activa\u021bi s\u0103 \xeemp\u0103r\u021bi\u021bi loca\u021bia voastr\u0103.";
    },
    get$locationPermissionDeniedNotice() {
      return "Permisiunea loca\u021biei blocat\u0103. V\u0103 rug\u0103m s\u0103 o dezbloca\u021bi s\u0103 \xeemp\u0103r\u021bi\u021bi loca\u021bia voastr\u0103.";
    },
    get$logout() {
      return "Deconecta\u021bi-v\u0103";
    },
    get$memberChanges() {
      return "Schimb\u0103ri de membri";
    },
    get$mention() {
      return "Men\u021biona\u021bi";
    },
    get$messages() {
      return "Mesaje";
    },
    get$messagesStyle() {
      return "Messages:";
    },
    get$moderator() {
      return "Moderator";
    },
    get$newChat() {
      return "Chat nou";
    },
    get$newVerificationRequest() {
      return "Cerere de verificare nou\u0103!";
    },
    get$next(_) {
      return "Urm\u0103tor";
    },
    get$no() {
      return "Nu";
    },
    get$noConnectionToTheServer() {
      return "F\u0103r\u0103 conexiune la server";
    },
    get$noEmotesFound() {
      return "Nu s-a g\u0103sit nici un emote. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Share invite link";
    },
    get$noPasswordRecoveryDescription() {
      return "Nu a\u021bi ad\u0103ugat \xeenc\u0103 nici un mod de recuperare pentru parola voastr\u0103.";
    },
    get$noPermission() {
      return "F\u0103r\u0103 permisie";
    },
    get$noRoomsFound() {
      return "Nici o camer\u0103 nu s-a g\u0103sit\u2026";
    },
    get$notifications() {
      return "Notific\u0103ri";
    },
    get$notificationsEnabledForThisAccount() {
      return "Notific\u0103ri activate pentru acest cont";
    },
    get$obtainingLocation() {
      return "Ob\u021bin\xe2nd loca\u021bie\u2026";
    },
    get$offensive() {
      return "Ofensiv";
    },
    get$ok() {
      return "Ok";
    },
    get$oopsSomethingWentWrong() {
      return "Ups, ceva a e\u0219uat\u2026";
    },
    get$oneClientLoggedOut() {
      return "Unul dintre clien\u021bilor vo\u0219tri a fost deconectat";
    },
    get$addAccount() {
      return "Ad\u0103uga\u021bi cont";
    },
    get$enableMultiAccounts() {
      return "(BETA) Activa\u021bi multiple conturi pe acest dispozitiv";
    },
    get$openInMaps() {
      return "Deschide\u021bi pe hart\u0103";
    },
    get$link() {
      return "Link";
    },
    get$serverRequiresEmail() {
      return "Acest server trebuie s\u0103 valideze emailul vostru pentru \xeenregistrare.";
    },
    get$or() {
      return "Sau";
    },
    get$participant() {
      return "Participant";
    },
    get$passphraseOrKey() {
      return "fraz\u0103 de acces sau cheie de recuperare";
    },
    get$password(_) {
      return "Parol\u0103";
    },
    get$passwordHasBeenChanged() {
      return "Parola a fost schimbat\u0103";
    },
    get$overview() {
      return "Overview";
    },
    get$notifyMeFor() {
      return "Notify me for";
    },
    get$passwordRecoverySettings() {
      return "Password recovery settings";
    },
    get$passwordRecovery() {
      return "Recuperare parolei";
    },
    get$pickImage() {
      return "Alege\u021bi o imagine";
    },
    get$pin() {
      return "Fixa\u021bi";
    },
    get$pleaseChoose() {
      return "V\u0103 rug\u0103m s\u0103 alege\u021bi";
    },
    get$pleaseClickOnLink() {
      return "V\u0103 rug\u0103m s\u0103 deschide\u021bi linkul din email \u0219i apoi s\u0103 proceda\u021bi.";
    },
    get$pleaseEnterYourPassword() {
      return "V\u0103 rug\u0103m s\u0103 introduce\u021bi parola voastr\u0103";
    },
    get$pleaseEnterYourPin() {
      return "V\u0103 rug\u0103m s\u0103 introduce\u021bi pinul vostru";
    },
    get$pleaseEnterYourUsername() {
      return "V\u0103 rug\u0103m s\u0103 introduce\u021bi username-ul vostru";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "V\u0103 rug\u0103m s\u0103 urma\u021bi instruc\u021biunele pe website \u0219i apoi s\u0103 ap\u0103sa\u021bi pe urm\u0103tor.";
    },
    get$privacy() {
      return "Confiden\u021bialitate";
    },
    get$reason(_) {
      return "Motiv";
    },
    redactedBy$1(username) {
      return "Redacted by " + username;
    },
    get$directChat() {
      return "Direct chat";
    },
    redactedByBecause$2(username, reason) {
      return "Redacted by " + username + ' because: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " a redactat un eveniment";
    },
    get$redactMessage() {
      return "Redacta\u021bi mesaj";
    },
    get$reject() {
      return "Respinge\u021bi";
    },
    rejectedTheInvitation$1(username) {
      return username + " a respins invita\u021bia";
    },
    get$removeAllOtherDevices() {
      return "Elimina\u021bi toate celelalte dispozitive";
    },
    get$unbanFromChat() {
      return "Revoca interzicerea din chat";
    },
    get$removeYourAvatar() {
      return "\u0218terge\u021bi avatarul";
    },
    get$replaceRoomWithNewerVersion() {
      return "\xcenlocui\u021bi camera cu versiune mai nou\u0103";
    },
    get$reply(_) {
      return "R\u0103spunde\u021bi";
    },
    get$reportMessage() {
      return "Raporta\u021bi mesajul";
    },
    get$roomHasBeenUpgraded() {
      return "Camera a fost actualizat\u0103";
    },
    get$roomVersion() {
      return "Versiunea camerei";
    },
    get$search(_) {
      return "C\u0103uta\u021bi";
    },
    get$security() {
      return "Securitate";
    },
    get$send(_) {
      return "Trimite\u021bi";
    },
    get$sendAMessage() {
      return "Trimite\u021bi un mesaj";
    },
    get$sendAsText() {
      return "Trimite\u021bi ca text";
    },
    get$sendAudio() {
      return "Trimite\u021bi audio";
    },
    get$sendFile() {
      return "Trimite\u021bi fi\u0219ier";
    },
    get$sendImage() {
      return "Trimite\u021bi imagine";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "Trimite\u021bi mesaje";
    },
    get$sendVideo() {
      return "Trimite\u021bi video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1" + username + " a trimis un fi\u0219ier";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4" + username + " a trimis audio";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " a trimis o poz\u0103";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " a trimis un sticker";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5" + username + " a trimis un video";
    },
    sentCallInformations$1(senderName) {
      return senderName + " a trimis informa\u021bie de apel";
    },
    get$separateChatTypes() {
      return "Afi\u0219a\u021bi chaturi directe \u0219i grupuri separat";
    },
    get$setAsCanonicalAlias() {
      return "Stabili\u021bi ca pseudonimul primar";
    },
    get$setChatDescription() {
      return "Set chat description";
    },
    get$setPermissionsLevel() {
      return "Stabili\u021bi nivelul de permisii";
    },
    get$settings() {
      return "Configur\u0103ri";
    },
    get$share(_) {
      return "Partaja\u021bi";
    },
    sharedTheLocation$1(username) {
      return username + " sa partajat loca\u021bia";
    },
    get$shareLocation() {
      return "Partaja\u021bi loca\u021bia";
    },
    get$presencesToggle() {
      return "Show status messages from other users";
    },
    get$skip(_) {
      return "S\u0103ri\u021bi peste";
    },
    get$sourceCode() {
      return "Codul surs";
    },
    get$spaceName() {
      return "Numele spa\u021biului";
    },
    startedACall$1(senderName) {
      return senderName + " a \xeenceput un apel";
    },
    get$status(_) {
      return "Status";
    },
    get$submit(_) {
      return "Trimite\u021bi";
    },
    get$synchronizingPleaseWait() {
      return "Sincronizeaz\u0103... V\u0103 rug\u0103m s\u0103 a\u0219tepta\u021bi.";
    },
    synchronizingPleaseWaitCounter$1(percentage) {
      return " Synchronizing\u2026 (" + percentage + "%)";
    },
    get$systemTheme() {
      return "Sistem";
    },
    get$theyDontMatch() {
      return "Nu sunt asem\u0103n\u0103tori";
    },
    get$theyMatch() {
      return "Sunt asem\u0103n\u0103tori";
    },
    get$tooManyRequestsWarning() {
      return "Prea multe cereri. V\u0103 rug\u0103m s\u0103 \xeencerca\u021bi din nou mai t\u0103rziu!";
    },
    get$tryToSendAgain() {
      return "\xcencerca\u021bi s\u0103 trimite\u021bi din nou";
    },
    get$unavailable() {
      return "Nedisponibil";
    },
    unbannedUser$2(username, targetName) {
      return username + " a ridicat interzicerea lui " + targetName;
    },
    get$unblockDevice() {
      return "Debloca dispozitiv";
    },
    get$unknownDevice() {
      return "Dispozitiv necunoscut";
    },
    get$unknownEncryptionAlgorithm() {
      return "Algoritm de criptare necunoscut";
    },
    unknownEvent$1(type) {
      return "Evenimet necunoscut '" + type + "'";
    },
    get$unpin() {
      return "Anuleaz\u0103 fixarea";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " \u0219i " + count + " al\u021bi tasteaz\u0103\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " \u0219i " + username2 + " tasteaz\u0103\u2026";
    },
    userIsTyping$1(username) {
      return username + " tasteaz\u0103\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa" + username + " a plecat din chat";
    },
    get$username(_) {
      return "Nume de utilizator";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " a trimis un eveniment " + type;
    },
    get$unverified() {
      return "Neverificat";
    },
    get$verified() {
      return "Verificat";
    },
    get$verifyStart() {
      return "\xcencepe\u021bi verificare";
    },
    get$verifySuccess() {
      return "A reu\u0219it verificarea!";
    },
    get$verifyTitle() {
      return "Verific\xe2nd cel\u0103lalt cont";
    },
    get$visibilityOfTheChatHistory() {
      return "Vizibilitatea istoria chatului";
    },
    get$visibleForAllParticipants() {
      return "Vizibil pentru to\u021bi participan\u021bi";
    },
    get$visibleForEveryone() {
      return "Vizibil pentru to\u021bi";
    },
    get$voiceMessage() {
      return "Mesaj vocal";
    },
    get$waitingPartnerAcceptRequest() {
      return "A\u0219tept\xe2nd pe partenerul s\u0103 accepte cererea\u2026";
    },
    get$waitingPartnerEmoji() {
      return "A\u0219tept\xe2nd pe partenerul s\u0103 accepte emoji-ul\u2026";
    },
    get$waitingPartnerNumbers() {
      return "A\u0219tept\xe2nd pe partenerul s\u0103 accepte numerele\u2026";
    },
    get$warning() {
      return "Avertizment!";
    },
    get$weSentYouAnEmail() {
      return "V-am trimis un email";
    },
    get$whoCanPerformWhichAction() {
      return "Cine poate face care ac\u021biune";
    },
    get$whoIsAllowedToJoinThisGroup() {
      return "Cine se poate al\u0103tura la acest grup";
    },
    get$whyDoYouWantToReportThis() {
      return "De ce dori\u021bi s\u0103 reporta\u021bi acest con\u021binut?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Cu acestea adrese pute\u021bi s\u0103 v\u0103 recupera\u021bi parola.";
    },
    get$writeAMessage() {
      return "Scrie\u021bi un mesaj\u2026";
    },
    writeAMessageFlag$2(l1flag, l2flag) {
      return "Write a message in " + l1flag + " or " + l2flag;
    },
    get$yes() {
      return "Da";
    },
    get$you() {
      return "Voi";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Nu mai participa\u021bi \xeen acest chat";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "A\u021bi fost interzis din acest chat";
    },
    get$yourPublicKey() {
      return "Cheia voastr\u0103 public\u0103";
    },
    get$messageInfo() {
      return "Info mesajului";
    },
    get$time(_) {
      return "Timp";
    },
    get$sender() {
      return "Trimi\u021b\u0103tor";
    },
    get$openGallery() {
      return "Deschide\u021bi galeria";
    },
    get$removeFromSpace() {
      return "Elimina\u021bi din spa\u021biu";
    },
    videoWithSize$1(size) {
      return "Video (" + size + ")";
    },
    get$markAsRead() {
      return "Marca\u021bi ca citit";
    },
    reactedWith$2(sender, reaction) {
      return sender + " a reac\u021bionat cu " + reaction;
    },
    get$pinMessage() {
      return "Fixa\u021bi \xeen camer\u0103";
    },
    get$confirmEventUnpin() {
      return "Sunte\u021bi sigur c\u0103 dori\u021bi s\u0103 anula\u021bi permanent fixarea evenimentului?";
    },
    get$emojis() {
      return "Emoji-uri";
    },
    get$youRejectedTheInvitation() {
      return "A\u021bi respins invita\u021bia";
    },
    get$youJoinedTheChat() {
      return "Va-\u021bi al\u0103turat la chat";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4dA\u021bi acceptat invita\u021bia";
    },
    youBannedUser$1(user) {
      return "A\u021bi interzis pe " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "A\u021bi retras invita\u021bia pentru " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9A\u021bi fost invitat de " + user;
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9A\u021bi invitat pe " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5eA\u021bi dat afar\u0103 pe " + user;
    },
    youUnbannedUser$1(user) {
      return "A\u021bi ridicat interzicerea lui " + user;
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " has knocked";
    },
    get$usersMustKnock() {
      return "Users must knock";
    },
    get$noOneCanJoin() {
      return "No one can join";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " would like to join the chat.";
    },
    get$knock() {
      return "Knock";
    },
    get$users() {
      return "Utilizatori";
    },
    countFiles$1(count) {
      return count + " fi\u0219iere";
    },
    get$user() {
      return "Utilizator";
    },
    get$custom() {
      return "Personalizat";
    },
    get$noKeyForThisMessage() {
      return "Aceast\u0103 chestie poate s\u0103 se \xeent\xe2mple c\xe2nd mesajul a fost trimis \xeenainte s\u0103 v\u0103 conecta\u021bi contul cu acest dispozitiv.\n\nO alt\u0103 explica\u021bie ar fi dac\u0103 trimi\u021b\u0103torul a blocat dispozitivul vostru sau ceva s-a \xeent\xe2mplat cu conexiunea la internet\n\nPute\u021bi s\u0103 citi\u021bi mesajul \xeen o alt\u0103 se\u0219iune? Atunci pute\u021bi s\u0103 transfera\u021bi mesajul de acolo! Merge\u021bi la Configur\u0103ri > Dispozitive \u0219i verifica\u021bi c\u0103 dispozitivele s-au verificat. C\xe2nd deschide\u021bi camera \xeen viitor \u0219i ambele se\u0219iune sunt \xeen foreground, cheile va fi transmise automat. \n\nDori\u021bi s\u0103 \xee\u021bi p\u0103stra\u021bi cheile c\xe2nd deconecta\u021bi sau schimba\u021bi dispozitive? Fi\u021bi aten\u021bi s\u0103 activa\u021bi backup de chat \xeen configur\u0103ri.";
    },
    get$newSpace() {
      return "Spa\u021biu nou";
    },
    get$doNotShowAgain() {
      return "Nu se mai apar\u0103 din nou";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Chat gol (a fost " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Deschide din nou chatul";
    },
    get$noBackupWarning() {
      return "Avertisment! F\u0103r\u0103 s\u0103 activa\u021bi backup de chat, ve\u021bi pierde accesul la mesajele voastre criptate. E foarte recomandat s\u0103 activa\u021bi backup de chat \xeenainte s\u0103 v\u0103 deconecta\u021bi.";
    },
    get$noOtherDevicesFound() {
      return "Nu s-a g\u0103sit alte dispozitive";
    },
    fileIsTooBigForServer$1(max) {
      return "Serverul reporteaz\u0103 c\u0103 fi\u0219ierul este prea mare s\u0103 fie trimis.";
    },
    get$jumpToLastReadMessage() {
      return "S\u0103ri\u021bi la ultimul citit mesaj";
    },
    get$readUpToHere() {
      return "Citit p\xe2n\u0103 aici";
    },
    get$jump() {
      return "S\u0103ri\u021bi";
    },
    get$openLinkInBrowser() {
      return "Deschide\u021bi linkul \xeen browser";
    },
    get$profileNotFound() {
      return "The user could not be found on the server. Maybe there is a connection problem or the user doesn't exist.";
    },
    get$setColorTheme() {
      return "Set color theme:";
    },
    get$invite() {
      return "Invite";
    },
    get$invitePrivateChat() {
      return "\ud83d\udce8 Invite private chat";
    },
    get$invalidInput() {
      return "Invalid input!";
    },
    wrongPinEntered$1(seconds) {
      return "Wrong pin entered! Try again in " + seconds + " seconds...";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$interactiveTranslatorRequired() {
      return "Required";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By turning on, you enable other users to find your profile in the global search bar and send requests to chat. At this point, you can choose to accept or deny the request.";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 16 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$toggleToolSettingsDescription() {
      return "Here you can toggle your individual language tool settings.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocabulary";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$abDisplayName() {
      return "Abkhaz";
    },
    get$aaDisplayName() {
      return "Afar";
    },
    get$afDisplayName() {
      return "Afrikaans";
    },
    get$akDisplayName() {
      return "Akan";
    },
    get$sqDisplayName() {
      return "Albanian";
    },
    get$amDisplayName() {
      return "Amharic";
    },
    get$arDisplayName() {
      return "Arabic";
    },
    get$anDisplayName() {
      return "Aragonese";
    },
    get$hyDisplayName() {
      return "Armenian";
    },
    get$asDisplayName() {
      return "Assamese";
    },
    get$avDisplayName() {
      return "Avaric";
    },
    get$aeDisplayName() {
      return "Avestan";
    },
    get$ayDisplayName() {
      return "Aymara";
    },
    get$azDisplayName() {
      return "Azerbaijani";
    },
    get$bmDisplayName() {
      return "Bambara";
    },
    get$baDisplayName() {
      return "Bashkir";
    },
    get$euDisplayName() {
      return "Basque";
    },
    get$beDisplayName() {
      return "Belarusian";
    },
    get$bnDisplayName() {
      return "Bengali";
    },
    get$bhDisplayName() {
      return "Bihari";
    },
    get$biDisplayName() {
      return "Bislama";
    },
    get$bsDisplayName() {
      return "Bosnian";
    },
    get$brDisplayName() {
      return "Breton";
    },
    get$bgDisplayName() {
      return "Bulgarian";
    },
    get$myDisplayName() {
      return "Burmese";
    },
    get$caDisplayName() {
      return "Catalan, Valencian";
    },
    get$chDisplayName() {
      return "Chamorro";
    },
    get$ceDisplayName() {
      return "Chechen";
    },
    get$nyDisplayName() {
      return "Chichewa, Chewa, Nyanja";
    },
    get$zhDisplayName() {
      return "Chinese";
    },
    get$cvDisplayName() {
      return "Chuvash";
    },
    get$kwDisplayName() {
      return "Cornish";
    },
    get$coDisplayName() {
      return "Corsican";
    },
    get$crDisplayName() {
      return "Cree";
    },
    get$hrDisplayName() {
      return "Croatian";
    },
    get$csDisplayName() {
      return "Czech";
    },
    get$daDisplayName() {
      return "Danish";
    },
    get$dvDisplayName() {
      return "Divehi; Dhivehi; Maldivian;";
    },
    get$nlDisplayName() {
      return "Dutch";
    },
    get$enDisplayName() {
      return "English";
    },
    get$eoDisplayName() {
      return "Esperanto";
    },
    get$etDisplayName() {
      return "Estonian";
    },
    get$eeDisplayName() {
      return "Ewe";
    },
    get$foDisplayName() {
      return "Faroese";
    },
    get$fjDisplayName() {
      return "Fijian";
    },
    get$fiDisplayName() {
      return "Finnish";
    },
    get$frDisplayName() {
      return "French";
    },
    get$ffDisplayName() {
      return "Fula; Fulah; Pulaar; Pular";
    },
    get$glDisplayName() {
      return "Galician";
    },
    get$kaDisplayName() {
      return "Georgian";
    },
    get$deDisplayName() {
      return "German";
    },
    get$elDisplayName() {
      return "Greek, Modern";
    },
    get$gnDisplayName() {
      return "Guaran\xed";
    },
    get$guDisplayName() {
      return "Gujarati";
    },
    get$htDisplayName() {
      return "Haitian, Haitian Creole";
    },
    get$haDisplayName() {
      return "Hausa";
    },
    get$heDisplayName() {
      return "Hebrew (modern)";
    },
    get$hzDisplayName() {
      return "Herero";
    },
    get$hiDisplayName() {
      return "Hindi";
    },
    get$hoDisplayName() {
      return "Hiri Motu";
    },
    get$huDisplayName() {
      return "Hungarian";
    },
    get$iaDisplayName() {
      return "Interlingua";
    },
    get$idDisplayName() {
      return "Indonesian";
    },
    get$ieDisplayName() {
      return "Interlingue";
    },
    get$gaDisplayName() {
      return "Irish";
    },
    get$igDisplayName() {
      return "Igbo";
    },
    get$ikDisplayName() {
      return "Inupiaq";
    },
    get$ioDisplayName() {
      return "Ido";
    },
    get$isDisplayName() {
      return "Icelandic";
    },
    get$itDisplayName() {
      return "Italian";
    },
    get$iuDisplayName() {
      return "Inuktitut";
    },
    get$jaDisplayName() {
      return "Japanese";
    },
    get$jvDisplayName() {
      return "Javanese";
    },
    get$klDisplayName() {
      return "Kalaallisut, Greenlandic";
    },
    get$knDisplayName() {
      return "Kannada";
    },
    get$krDisplayName() {
      return "Kanuri";
    },
    get$ksDisplayName() {
      return "Kashmiri";
    },
    get$kkDisplayName() {
      return "Kazakh";
    },
    get$kmDisplayName() {
      return "Khmer";
    },
    get$kiDisplayName() {
      return "Kikuyu, Gikuyu";
    },
    get$rwDisplayName() {
      return "Kinyarwanda";
    },
    get$kyDisplayName() {
      return "Kirghiz, Kyrgyz";
    },
    get$kvDisplayName() {
      return "Komi";
    },
    get$kgDisplayName() {
      return "Kongo";
    },
    get$koDisplayName() {
      return "Korean";
    },
    get$kuDisplayName() {
      return "Kurdish";
    },
    get$kjDisplayName() {
      return "Kwanyama, Kuanyama";
    },
    get$laDisplayName() {
      return "Latin";
    },
    get$lbDisplayName() {
      return "Luxembourgish, Letzeburgesch";
    },
    get$lgDisplayName() {
      return "Luganda";
    },
    get$liDisplayName() {
      return "Limburgish, Limburgan, Limburger";
    },
    get$lnDisplayName() {
      return "Lingala";
    },
    get$loDisplayName() {
      return "Lao";
    },
    get$ltDisplayName() {
      return "Lithuanian";
    },
    get$luDisplayName() {
      return "Luba-Katanga";
    },
    get$lvDisplayName() {
      return "Latvian";
    },
    get$gvDisplayName() {
      return "Manx";
    },
    get$mkDisplayName() {
      return "Macedonian";
    },
    get$mgDisplayName() {
      return "Malagasy";
    },
    get$msDisplayName() {
      return "Malay";
    },
    get$mlDisplayName() {
      return "Malayalam";
    },
    get$mtDisplayName() {
      return "Maltese";
    },
    get$miDisplayName() {
      return "M\u0101ori";
    },
    get$mrDisplayName() {
      return "Marathi (Mar\u0101\u1e6dh\u012b)";
    },
    get$mhDisplayName() {
      return "Marshallese";
    },
    get$mnDisplayName() {
      return "Mongolian";
    },
    get$naDisplayName() {
      return "Nauru";
    },
    get$nvDisplayName() {
      return "Navajo, Navaho";
    },
    get$nbDisplayName() {
      return "Norwegian Bokm\xe5l";
    },
    get$ndDisplayName() {
      return "North Ndebele";
    },
    get$neDisplayName() {
      return "Nepali";
    },
    get$ngDisplayName() {
      return "Ndonga";
    },
    get$nnDisplayName() {
      return "Norwegian Nynorsk";
    },
    get$noDisplayName() {
      return "Norwegian";
    },
    get$iiDisplayName() {
      return "Nuosu";
    },
    get$nrDisplayName() {
      return "South Ndebele";
    },
    get$ocDisplayName() {
      return "Occitan";
    },
    get$ojDisplayName() {
      return "Ojibwe, Ojibwa";
    },
    get$cuDisplayName() {
      return "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic";
    },
    get$omDisplayName() {
      return "Oromo";
    },
    get$orDisplayName() {
      return "Oriya";
    },
    get$osDisplayName() {
      return "Ossetian, Ossetic";
    },
    get$paDisplayName() {
      return "Panjabi, Punjabi";
    },
    get$piDisplayName() {
      return "P\u0101li";
    },
    get$faDisplayName() {
      return "Persian";
    },
    get$plDisplayName() {
      return "Polish";
    },
    get$psDisplayName() {
      return "Pashto, Pushto";
    },
    get$ptDisplayName() {
      return "Portuguese";
    },
    get$quDisplayName() {
      return "Quechua";
    },
    get$rmDisplayName() {
      return "Romansh";
    },
    get$rnDisplayName() {
      return "Kirundi";
    },
    get$roDisplayName() {
      return "Romanian, Moldavian, Moldovan";
    },
    get$ruDisplayName() {
      return "Russian";
    },
    get$saDisplayName() {
      return "Sanskrit (Sa\u1e41sk\u1e5bta)";
    },
    get$scDisplayName() {
      return "Sardinian";
    },
    get$sdDisplayName() {
      return "Sindhi";
    },
    get$seDisplayName() {
      return "Northern Sami";
    },
    get$smDisplayName() {
      return "Samoan";
    },
    get$sgDisplayName() {
      return "Sango";
    },
    get$srDisplayName() {
      return "Serbian";
    },
    get$gdDisplayName() {
      return "Scottish Gaelic, Gaelic";
    },
    get$snDisplayName() {
      return "Shona";
    },
    get$siDisplayName() {
      return "Sinhala, Sinhalese";
    },
    get$skDisplayName() {
      return "Slovak";
    },
    get$slDisplayName() {
      return "Slovene";
    },
    get$soDisplayName() {
      return "Somali";
    },
    get$stDisplayName() {
      return "Southern Sotho";
    },
    get$esDisplayName() {
      return "Spanish";
    },
    get$suDisplayName() {
      return "Sundanese";
    },
    get$swDisplayName() {
      return "Swahili";
    },
    get$ssDisplayName() {
      return "Swati";
    },
    get$svDisplayName() {
      return "Swedish";
    },
    get$taDisplayName() {
      return "Tamil";
    },
    get$teDisplayName() {
      return "Telugu";
    },
    get$tgDisplayName() {
      return "Tajik";
    },
    get$thDisplayName() {
      return "Thai";
    },
    get$tiDisplayName() {
      return "Tigrinya";
    },
    get$boDisplayName() {
      return "Tibetan Standard, Tibetan, Central";
    },
    get$tkDisplayName() {
      return "Turkmen";
    },
    get$tlDisplayName() {
      return "Tagalog";
    },
    get$tnDisplayName() {
      return "Tswana";
    },
    get$toDisplayName() {
      return "Tonga (Tonga Islands)";
    },
    get$trDisplayName() {
      return "Turkish";
    },
    get$tsDisplayName() {
      return "Tsonga";
    },
    get$ttDisplayName() {
      return "Tatar";
    },
    get$twDisplayName() {
      return "Twi";
    },
    get$tyDisplayName() {
      return "Tahitian";
    },
    get$ugDisplayName() {
      return "Uighur, Uyghur";
    },
    get$ukDisplayName() {
      return "Ukrainian";
    },
    get$urDisplayName() {
      return "Urdu";
    },
    get$uzDisplayName() {
      return "Uzbek";
    },
    get$veDisplayName() {
      return "Venda";
    },
    get$viDisplayName() {
      return "Vietnamese";
    },
    get$voDisplayName() {
      return "Volap\xfck";
    },
    get$waDisplayName() {
      return "Walloon";
    },
    get$cyDisplayName() {
      return "Welsh";
    },
    get$woDisplayName() {
      return "Wolof";
    },
    get$fyDisplayName() {
      return "Western Frisian";
    },
    get$xhDisplayName() {
      return "Xhosa";
    },
    get$yiDisplayName() {
      return "Yiddish";
    },
    get$yoDisplayName() {
      return "Yoruba";
    },
    get$zaDisplayName() {
      return "Zhuang, Chuang";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$zuDisplayName() {
      return "Zulu";
    },
    get$hawDisplayName() {
      return "Hawaiian";
    },
    get$hmnDisplayName() {
      return "Hmong";
    },
    get$multiDisplayName() {
      return "Multi";
    },
    get$cebDisplayName() {
      return "Cebuano";
    },
    get$dzDisplayName() {
      return "Dzongkha";
    },
    get$iwDisplayName() {
      return "Hebrew";
    },
    get$jwDisplayName() {
      return "Javanese";
    },
    get$moDisplayName() {
      return "Moldavian";
    },
    get$shDisplayName() {
      return "Serbo-Croatian";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$declinedInvitation() {
      return "Declined invitation";
    },
    get$acceptedInvitation() {
      return "Accepted invitation";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    get$pleaseEnterANumber() {
      return "Please enter a number greater than 0";
    },
    get$archiveRoomDescription() {
      return "The chat will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$roomUpgradeDescription() {
      return "The chat will then be recreated with the new room version. All participants will be notified that they need to switch to the new chat. You can find out more about room versions at https://spec.matrix.org/latest/rooms/";
    },
    get$removeDevicesDescription() {
      return "You will be logged out of this device and will no longer be able to receive messages.";
    },
    get$banUserDescription() {
      return "The user will be banned from the chat and will not be able to enter the chat again until they are unbanned.";
    },
    get$unbanUserDescription() {
      return "The user will be able to enter the chat again if they try.";
    },
    get$kickUserDescription() {
      return "The user is kicked out of the chat but not banned. In public chats, the user can rejoin at any time.";
    },
    get$makeAdminDescription() {
      return "Once you make this user admin, you may not be able to undo this as they will then have the same permissions as you.";
    },
    get$yourGlobalUserIdIs() {
      return "Your global user-ID is: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Unfortunately no user could be found with "' + query + '". Please check whether you made a typo.';
    },
    get$knocking() {
      return "Knocking";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "Chat can be discovered via the search on " + server;
    },
    get$searchChatsRooms() {
      return "Search for #chats, @users...";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$nothingFound() {
      return "Nothing found...";
    },
    get$wrongRecoveryKey() {
      return "Sorry... this does not seem to be the correct recovery key.";
    },
    get$startConversation() {
      return "Start conversation";
    },
    get$commandHint_sendraw() {
      return "Send raw json";
    },
    get$searchForUsers() {
      return "Search for @users...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Please enter your current password";
    },
    get$newPassword() {
      return "New password";
    },
    get$pleaseChooseAStrongPassword() {
      return "Please choose a strong password";
    },
    get$passwordsDoNotMatch() {
      return "Passwords do not match";
    },
    get$passwordIsWrong() {
      return "Your entered password is wrong";
    },
    get$publicChatAddresses() {
      return "Public chat addresses";
    },
    get$createNewAddress() {
      return "Create new address";
    },
    get$joinSpace() {
      return "Join space";
    },
    get$publicSpaces() {
      return "Public spaces";
    },
    get$decline() {
      return "Decline";
    },
    get$thisDevice() {
      return "This device:";
    },
    get$initAppError() {
      return "An error occured while init the app";
    },
    get$userRole() {
      return "User role";
    },
    searchIn$1(chat) {
      return 'Search in chat "' + chat + '"...';
    },
    get$searchMore() {
      return "Search more...";
    },
    get$gallery() {
      return "Gallery";
    },
    get$files(_) {
      return "Files";
    },
    sessionLostBody$2(url, error) {
      return "Your session is lost. Please report this error to the developers at " + url + ". The error message is: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "The app now tries to restore your session from the backup. Please report this error to the developers at " + url + ". The error message is: " + error;
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$sendReadReceipts() {
      return "Send read receipts";
    },
    get$sendTypingNotificationsDescription() {
      return "Other participants in a chat can see when you are typing a new message.";
    },
    get$sendReadReceiptsDescription() {
      return "Other participants in a chat can see when you have read a message.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verify other device";
    },
    get$verifyOtherDeviceDescription() {
      return "When you verify another device, those devices can exchange keys, increasing your overall security. \ud83d\udcaa When you start a verification, a popup will appear in the app on both devices. There you will then see a series of emojis or numbers that you have to compare with each other. It's best to have both devices handy before you start the verification. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " accepted key verification";
    },
    canceledKeyVerification$1(sender) {
      return sender + " canceled key verification";
    },
    completedKeyVerification$1(sender) {
      return sender + " completed key verification";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " is ready for key verification";
    },
    requestedKeyVerification$1(sender) {
      return sender + " requested key verification";
    },
    startedKeyVerification$1(sender) {
      return sender + " started key verification";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$stickers() {
      return "Stickers";
    },
    get$discover() {
      return "Discover";
    },
    get$commandHint_ignore() {
      return "Ignore the given matrix ID";
    },
    get$commandHint_unignore() {
      return "Unignore the given matrix ID";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run language assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run language assistance after typing messages";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$spaceCapacity() {
      return "Space capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$spaceCapacityHasBeenChanged() {
      return "Space capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of non-admins.";
    },
    get$spaceCapacitySetTooLow() {
      return "Space capacity cannot be set below the current number of non-admins.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of non-admins allowed in a chat.";
    },
    get$spaceCapacityExplanation() {
      return "Space capacity limits the number of non-admins allowed in a space.";
    },
    get$chatExceedsCapacity() {
      return "This chat exceeds its capacity.";
    },
    get$spaceExceedsCapacity() {
      return "This space exceeds its capacity.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Right now there are " + count + " users blocked.";
    },
    get$restricted() {
      return "Restricted";
    },
    get$knockRestricted() {
      return "Knock restricted";
    },
    get$createNewSpace() {
      return "Spa\u021biu nou";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "For voice messages, you can see a transcript as well as the speaker's Words Per Minute score.";
    },
    get$previous() {
      return "Previous";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$continueText() {
      return "Continue";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$sendCanceled() {
      return "Sending canceled";
    },
    goToSpace$1(space) {
      return "Go to space: " + space;
    },
    get$markAsUnread() {
      return "Mark as unread";
    },
    userLevel$1(level) {
      return "" + level + " - User";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Admin";
    },
    get$changeGeneralChatSettings() {
      return "Change general chat settings";
    },
    get$inviteOtherUsers() {
      return "Invite other users to this chat";
    },
    get$changeTheChatPermissions() {
      return "Change the chat permissions";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Change the visibility of the chat history";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Change the main public chat address";
    },
    get$sendRoomNotifications() {
      return "Send a @room notifications";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Change the description of the chat";
    },
    get$chatPermissionsDescription() {
      return "Define which power level is necessary for certain actions in this chat. The power levels 0, 50 and 100 are usually representing users, moderators and admins, but any gradation is possible.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Update " + version + " installed!";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Doesn't seem to be a compatible homeserver. Wrong URL?";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyNOUNTYPEcomm() {
      return "Common Noun";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$unlockedLanguageTools() {
      return "You\u2019ve unlocked the language tools for this message. Try them out by clicking below!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$calculatingFileSize() {
      return "Calculating file size...";
    },
    get$prepareSendingAttachment() {
      return "Prepare sending attachment...";
    },
    get$sendingAttachment() {
      return "Sending attachment...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Sending attachment " + index + " of " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Server limit reached! Waiting " + seconds + " seconds...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Note: When you connect all your devices to the chat backup, they are automatically verified.";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$blur(_) {
      return "Blur:";
    },
    get$opacity(_) {
      return "Opacity:";
    },
    get$setWallpaper() {
      return "Set wallpaper";
    },
    get$noContactInformationProvided() {
      return "Server does not provide any valid contact information";
    },
    get$contactServerAdmin() {
      return "Contact server admin";
    },
    get$contactServerSecurity() {
      return "Contact server security";
    },
    get$supportPage() {
      return "Support page";
    },
    get$serverInformation() {
      return "Server information:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Bold text";
    },
    get$italicText() {
      return "Italic text";
    },
    get$strikeThrough() {
      return "Strikethrough";
    },
    get$pleaseFillOut() {
      return "Please fill out";
    },
    get$invalidUrl() {
      return "Invalid url";
    },
    get$addLink() {
      return "Add link";
    },
    get$unableToJoinChat() {
      return "Unable to join chat. Maybe the other party has already closed the conversation.";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$mandatoryUpdateRequired() {
      return "Mandatory Update Required";
    },
    get$updateAvailable() {
      return "Update Available";
    },
    get$mandatoryUpdateRequiredDesc() {
      return "A new version of the app is required to continue. Please update now to proceed.";
    },
    get$updateAvailableDesc() {
      return "A new version of the app is available. Update now for the latest features and improvements!";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language";
    },
    get$couldNotFindTTS() {
      return "We couldn't find a text-to-speech engine for your current target language. ";
    },
    get$ttsInstructionsHyperlink() {
      return "Click here to view instructions for downloading a new voice on your device.";
    },
    get$currentVersion() {
      return "Current Version";
    },
    get$latestVersion() {
      return "Latest Version";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseAgreeToTOS() {
      return "Please agree to the Terms and Conditions";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    get$clickWordsInstructions() {
      return "Click on a word or the buttons below to learn more";
    },
    get$meaningSectionHeader() {
      return "Meaning:";
    },
    get$formSectionHeader() {
      return "Forms used in chats:";
    },
    get$noEmojiSelectedTooltip() {
      return "No emoji selected";
    },
    get$writingExercisesTooltip() {
      return "Writing activities";
    },
    get$listeningExercisesTooltip() {
      return "Listening activities";
    },
    get$readingExercisesTooltip() {
      return "Reading activities";
    },
    get$meaningNotFound() {
      return "Meaning could not be found.";
    },
    get$formsNotFound() {
      return "Forms could not be found.";
    },
    get$chooseBaseForm() {
      return "Choose the base form";
    },
    get$notTheCodeError() {
      return "Sorry, that's not the code!";
    },
    get$totalXP() {
      return "Total XP";
    },
    get$numLemmas() {
      return "Total number of lemmas";
    },
    get$numLemmasUsedCorrectly() {
      return "Number of lemmas used correctly at least once";
    },
    get$numLemmasUsedIncorrectly() {
      return "Number of lemmas used correctly 0 times";
    },
    get$numLemmasSmallXP() {
      return "Number of lemmas with 0 - 30 XP";
    },
    get$numLemmasMediumXP() {
      return "Number of lemmas with 31 - 200 XP";
    },
    get$numLemmasLargeXP() {
      return "Number of lemmas with > 200 XP";
    },
    get$numGrammarConcepts() {
      return "Number of grammar concepts";
    },
    get$listGrammarConcepts() {
      return "Grammar concepts";
    },
    get$listGrammarConceptsUsedCorrectly() {
      return "Grammar concepts used correctly in original messages at least 80% of the time";
    },
    get$listGrammarConceptsUsedIncorrectly() {
      return "Grammar concepts used correctly in original messages less than 80% of the time";
    },
    get$listGrammarConceptsUseCorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions at least 80% of the time";
    },
    get$listGrammarConceptsUseIncorrectlySystemGenerated() {
      return "Grammar concepts chosen correctly from system-generated suggestions less than 80% of the time";
    },
    get$listGrammarConceptsSmallXP() {
      return "Grammar concepts with 0-50 xp";
    },
    get$listGrammarConceptsMediumXP() {
      return "Grammar concepts with 51-200 xp";
    },
    get$listGrammarConceptsLargeXP() {
      return "Grammar concepts 201-500 xp";
    },
    get$listGrammarConceptsHugeXP() {
      return "Grammar concepts >500 xp";
    },
    get$numMessagesSent() {
      return "Number of messages sent";
    },
    get$numWordsTyped() {
      return "Number of words typed in original messages";
    },
    get$numCorrectChoices() {
      return "Number of correct words chosen from system-generated suggestions";
    },
    get$numIncorrectChoices() {
      return "Number of incorrect words chosen from system-generated suggestions";
    },
    get$downloadSpaceAnalytics() {
      return "Download space analytics";
    },
    get$commaSeparatedFile() {
      return "CSV";
    },
    get$excelFile() {
      return "Excel";
    },
    get$fileType() {
      return "File type";
    },
    get$download(_) {
      return "Download";
    },
    get$analyticsNotAvailable() {
      return "User analytics not available";
    },
    get$downloading() {
      return "Downloading...";
    },
    get$failedFetchUserAnalytics() {
      return "Failed to download user analytics";
    },
    get$downloadComplete() {
      return "Download complete!";
    },
    whatIsTheMorphTag$2(morphologicalFeature, wordForm) {
      return "What is the " + morphologicalFeature + " of '" + wordForm + "'?";
    },
    get$dataAvailable() {
      return "Data availability";
    },
    get$available(_) {
      return "Available";
    },
    get$pangeaBotIsFallible() {
      return "Pangea Bot makes mistakes too!";
    },
    whatIsMeaning$2(lemma, partOfSpeech) {
      return "What does '" + lemma + "' mean?";
    },
    pickAnEmoji$2(lemma, partOfSpeech) {
      return "What's your favorite emoji for '" + lemma + "'?";
    },
    get$lemmaMeaningInstructionsBody() {
      return "Above is the meaning of the lemma. Double-click to edit.";
    },
    get$doubleClickToEdit() {
      return "Double-click to edit.";
    },
    get$notInClass() {
      return "Not in a class!";
    },
    get$noClassCode() {
      return "No class code!";
    },
    get$otherPartyNotLoggedIn() {
      return "The other party is currently not logged in and therefore cannot receive messages!";
    },
    get$chooseCorrectLabel() {
      return "Choose the correct label.";
    },
    levelPopupTitle$1(level) {
      return "Congratulations on reaching\nLevel " + level;
    },
    get$activityPlannerTitle() {
      return "Activity Planner";
    },
    get$topicLabel() {
      return "Topic";
    },
    get$topicPlaceholder() {
      return "Choose a topic...";
    },
    get$modeLabel() {
      return "Mode";
    },
    get$modePlaceholder() {
      return "Choose a mode...";
    },
    get$learningObjectiveLabel() {
      return "Learning Objective";
    },
    get$learningObjectivePlaceholder() {
      return "Choose a learning objective...";
    },
    get$mediaLabel() {
      return "Media learners should share";
    },
    get$languageOfInstructionsLabel() {
      return "Language of activity instructions";
    },
    get$targetLanguageLabel() {
      return "Target language";
    },
    get$cefrLevelLabel() {
      return "CEFR Level";
    },
    get$generateActivitiesButton() {
      return "Generate Activities";
    },
    get$launchActivityButton() {
      return "Launch Activity";
    },
    get$image(_) {
      return "Image";
    },
    get$video(_) {
      return "Video";
    },
    get$nan() {
      return "Not applicable";
    },
    get$activityPlannerOverviewInstructionsBody() {
      return "Choose a topic, mode, learning objective and generate an activity for the chat!";
    },
    get$completeActivitiesToUnlock() {
      return "Complete the highlighted word activities to unlock";
    },
    get$myBookmarkedActivities() {
      return "My Bookmarked Activities";
    },
    get$noBookmarkedActivities() {
      return "No bookmarked activities";
    },
    get$activityTitle() {
      return "Activity Title";
    },
    get$addVocabulary() {
      return "Add Vocabulary";
    },
    get$instructions() {
      return "Instructions";
    },
    get$numberOfLearners() {
      return "Number of learners";
    },
    get$mustBeInteger() {
      return "Must be an integer e.g. 1, 2, 3, ...";
    },
    noLemmasFound$1(xp) {
      return "There are no vocabulary with more than " + xp + " XP. Keep practicing!";
    },
    get$constructUsePvmDesc() {
      return "Produced in voice message";
    },
    get$leaveSpaceDescription() {
      return "The space will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$open(_) {
      return "Open";
    },
    get$waitingForServer() {
      return "Waiting for server...";
    },
    get$whatIsLemma() {
      return "What is the lemma?";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.L10nRo, C.L10n);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nRo":{"L10n":[]}}'));
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_267", e: "endPart", h: h});
})($__dart_deferred_initializers__, "iAJuR38MTHSEQlQXx5A67aX0eBI=");
;
//# sourceMappingURL=main.dart.js_267.part.js.map
