// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.4.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_228", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    L10nFi$() {
      return new B.L10nFi(A.canonicalizedLocale("fi"));
    },
    L10nFi: function L10nFi(t0) {
      this.localeName = t0;
    }
  };
  A = holdersList[0];
  C = holdersList[51];
  B = hunkHelpers.updateHolder(holdersList[19], B);
  B.L10nFi.prototype = {
    get$alwaysUse24HourFormat() {
      return "false";
    },
    get$repeatPassword() {
      return "Salasana uudelleen";
    },
    get$notAnImage() {
      return "T\xe4m\xe4 ei ole kuvatiedosto.";
    },
    get$remove(_) {
      return "Poista";
    },
    get$importNow() {
      return "Tuo nyt";
    },
    get$importEmojis() {
      return "Tuo emojit";
    },
    get$importFromZipFile() {
      return "Tuo .zip -tiedostosta";
    },
    get$exportEmotePack() {
      return "Vie emotepaketti .zip-tiedostona";
    },
    get$replace(_) {
      return "Korvaa";
    },
    aboutHomeserver$1(homeserver) {
      return "About " + homeserver;
    },
    get$accept(_) {
      return "Hyv\xe4ksy";
    },
    acceptedTheInvitation$1(username) {
      return username + " hyv\xe4ksyi kutsun";
    },
    get$account() {
      return "Tili";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " otti k\xe4ytt\xf6\xf6n p\xe4\xe4st\xe4-p\xe4\xe4h\xe4n salauksen";
    },
    get$addEmail() {
      return "Lis\xe4\xe4 s\xe4hk\xf6postiosoite";
    },
    get$confirmMatrixId() {
      return "Kirjoita Matrix IDsi uudelleen poistaaksesi tunnuksesi.";
    },
    supposedMxid$1(mxid) {
      return "T\xe4m\xe4n pit\xe4isi olla " + mxid;
    },
    get$addToSpace() {
      return "Lis\xe4\xe4 tilaan";
    },
    get$admin() {
      return "Yll\xe4pit\xe4j\xe4";
    },
    get$alias() {
      return "alias";
    },
    get$all() {
      return "Kaikki";
    },
    get$commandHint_googly() {
      return "L\xe4het\xe4 askartelusilmi\xe4";
    },
    get$commandHint_cuddle() {
      return "L\xe4het\xe4 kokovartaluhalaus";
    },
    get$commandHint_hug() {
      return "L\xe4het\xe4 halaus";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " l\xe4hett\xe4\xe4 askartelusilmi\xe4";
    },
    cuddleContent$1(senderName) {
      return senderName + " kokovartalohalaa sinua";
    },
    hugContent$1(senderName) {
      return senderName + " halaa sinua";
    },
    answeredTheCall$1(senderName) {
      return senderName + " vastasi puheluun";
    },
    get$anyoneCanJoin() {
      return "Kuka tahansa voi liitty\xe4";
    },
    get$archive() {
      return "Arkisto";
    },
    get$areGuestsAllowedToJoin() {
      return "Sallitaanko vieraiden liittyminen";
    },
    get$areYouSure() {
      return "Oletko varma?";
    },
    get$areYouSureYouWantToLogout() {
      return "Haluatko varmasti kirjautua ulos?";
    },
    get$askSSSSSign() {
      return "Voidaksesi allekirjoittaa toisen henkil\xf6n, sy\xf6t\xe4 turvavaraston salalause tai palautusavain.";
    },
    askVerificationRequest$1(username) {
      return "Hyv\xe4ksyt\xe4\xe4nk\xf6 t\xe4m\xe4 varmennuspyynt\xf6 k\xe4ytt\xe4j\xe4lt\xe4 " + username + "?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "T\xe4m\xe4 kotipalvelin tukee sis\xe4\xe4nkirjautumistapoja: \n" + serverVersions + ",\nmutta t\xe4m\xe4 sovellus tukee vain -tapoja: \n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "L\xe4het\xe4 kirjoitusilmoituksia";
    },
    get$swipeRightToLeftToReply() {
      return "Vastaa pyyhk\xe4isem\xe4ll\xe4 oikealta vasemmalle";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "Kotipalvelin tukee Matrix Spec versio(it)a:\n" + serverVersions + ", mutta t\xe4m\xe4 sovellus tukee vain versio(it)a " + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return A.S(chats) + " chats and " + A.S(participants) + " participants";
    },
    get$noMoreChatsFound() {
      return "Lis\xe4\xe4 keskusteluja ei l\xf6ytynyt...";
    },
    get$noChatsFoundHere() {
      return "No chats found here yet. Start a new chat with someone by using the button below. \u2935\ufe0f";
    },
    get$unread() {
      return "Lukemattomat";
    },
    get$space() {
      return "Space";
    },
    get$spaces() {
      return "Spaces";
    },
    get$banFromChat() {
      return "Anna porttikielto keskusteluun";
    },
    get$banned() {
      return "Porttikiellossa";
    },
    bannedUser$2(username, targetName) {
      return username + " antoi porttikiellon k\xe4ytt\xe4j\xe4lle " + targetName;
    },
    get$blockDevice() {
      return "Est\xe4 laite";
    },
    get$blocked() {
      return "Estetty";
    },
    get$botMessages() {
      return "Bottien l\xe4hett\xe4m\xe4t viestit";
    },
    get$cancel(_) {
      return "Peruuta";
    },
    cantOpenUri$1(uri) {
      return "URI-osoitetta " + uri + " ei voida avata";
    },
    get$changeDeviceName() {
      return "Vaihda laitteen nime\xe4";
    },
    changedTheChatAvatar$1(username) {
      return username + " muutti keskustelun kuvaa";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " asetti keskustelun kuvaukseksi: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " asetti keskustelun nimeksi: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " muutti keskustelun oikeuksia";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " asetti n\xe4ytt\xf6nimekseen: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " muutti vierasp\xe4\xe4syn s\xe4\xe4nt\xf6j\xe4";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " asetti vierasp\xe4\xe4syn s\xe4\xe4nn\xf6(i)ksi: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " muutti historian n\xe4kyvyytt\xe4";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " asetti historian n\xe4kymiss\xe4\xe4nn\xf6ksi: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " muutti liittymiss\xe4\xe4nt\xf6j\xe4";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " asetti liittymiss\xe4\xe4nn\xf6iksi: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " vaihtoi profiilikuvaansa";
    },
    changedTheRoomAliases$1(username) {
      return username + " muutti huoneen aliaksia";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " muutti kutsulinkki\xe4";
    },
    get$changePassword() {
      return "Vaihda salasana";
    },
    get$changeTheme() {
      return "Vaihda tyyli\xe4si";
    },
    get$changeTheNameOfTheGroup() {
      return "Vaihda ryhm\xe4n nime\xe4";
    },
    get$changeYourAvatar() {
      return "Vaihda profiilikuvasi";
    },
    get$channelCorruptedDecryptError() {
      return "Salaus on korruptoitunut";
    },
    get$chat() {
      return "Keskustelu";
    },
    get$chatDetails() {
      return "Keskustelun tiedot";
    },
    get$chats() {
      return "Keskustelut";
    },
    get$chooseAStrongPassword() {
      return "Valitse vahva salasana";
    },
    get$clearArchive() {
      return "Tyhjenn\xe4 arkisto";
    },
    get$close(_) {
      return "Sulje";
    },
    get$commandHint_markasdm() {
      return "Merkitse yksityiskeskusteluksi sy\xf6tetyn Matrix IDn kanssa";
    },
    get$commandHint_markasgroup() {
      return "Merkitse ryhm\xe4ksi";
    },
    get$commandHint_ban() {
      return "Anna sy\xf6tetylle k\xe4ytt\xe4j\xe4lle porttikielto t\xe4h\xe4n huoneeseen";
    },
    get$commandHint_clearcache() {
      return "Tyhjenn\xe4 v\xe4limuisti";
    },
    get$commandHint_create() {
      return "Luo tyhj\xe4 ryhm\xe4keskustelu\nK\xe4yt\xe4 parametria --no-encryption poistaaksesi salauksen k\xe4yt\xf6st\xe4";
    },
    get$commandHint_discardsession() {
      return "Hylk\xe4\xe4 istunto";
    },
    get$commandHint_dm() {
      return "Aloita yksityiskeskustelu\nK\xe4yt\xe4 parametria --no-encryption poistaaksesi salauksen k\xe4yt\xf6st\xe4";
    },
    get$commandHint_html() {
      return "L\xe4het\xe4 HTML-muotoiltua teksti\xe4";
    },
    get$commandHint_invite() {
      return "Kutsu sy\xf6tetty k\xe4ytt\xe4j\xe4 t\xe4h\xe4n huoneeseen";
    },
    get$commandHint_join() {
      return "Liity sy\xf6tettyyn huoneeseen";
    },
    get$commandHint_kick() {
      return "Poista sy\xf6tetty k\xe4ytt\xe4j\xe4 huoneesta";
    },
    get$commandHint_leave() {
      return "Poistu t\xe4st\xe4 huoneesta";
    },
    get$commandHint_me() {
      return "Kuvaile itse\xe4si";
    },
    get$commandHint_myroomavatar() {
      return "Aseta profiilikuvasi t\xe4h\xe4n huoneeseen (sy\xf6tt\xe4m\xe4ll\xe4 mxc-uri)";
    },
    get$commandHint_myroomnick() {
      return "Aseta n\xe4ytt\xf6nimesi vain t\xe4ss\xe4 huoneessa";
    },
    get$commandHint_op() {
      return "Aseta k\xe4ytt\xe4j\xe4n voimataso (oletus: 50)";
    },
    get$commandHint_plain() {
      return "L\xe4het\xe4 muotoilematonta teksti\xe4";
    },
    get$commandHint_react() {
      return "L\xe4het\xe4 vastaus reaktiona";
    },
    get$commandHint_send() {
      return "L\xe4het\xe4 teksti\xe4";
    },
    get$commandHint_unban() {
      return "Poista sy\xf6tetyn k\xe4ytt\xe4j\xe4n porttikielto t\xe4st\xe4 huoneesta";
    },
    get$commandInvalid() {
      return "Ep\xe4kelvollinen komento";
    },
    commandMissing$1(command) {
      return command + " ei ole komento.";
    },
    get$compareEmojiMatch() {
      return "Vertaa hymi\xf6it\xe4";
    },
    get$compareNumbersMatch() {
      return "Vertaa numeroita";
    },
    get$configureChat() {
      return "M\xe4\xe4rit\xe4 keskustelu";
    },
    get$confirm(_) {
      return "Vahvista";
    },
    get$containsDisplayName() {
      return "Sis\xe4lt\xe4\xe4 n\xe4ytt\xf6nimen";
    },
    get$containsUserName() {
      return "Sis\xe4lt\xe4\xe4 k\xe4ytt\xe4j\xe4tunnuksen";
    },
    get$contentHasBeenReported() {
      return "Sis\xe4lt\xf6 on ilmoitettu palvelimen yll\xe4pit\xe4jille";
    },
    get$copiedToClipboard() {
      return "Kopioitu leikep\xf6yd\xe4lle";
    },
    get$copy(_) {
      return "Kopioi";
    },
    couldNotDecryptMessage$1(error) {
      return "Viestin salausta ei voitu purkaa: " + error;
    },
    countParticipants$1(count) {
      return A.S(count) + " osallistujaa";
    },
    createdTheChat$1(username) {
      return username + " loi keskustelun";
    },
    get$currentlyActive() {
      return "Aktiivinen nyt";
    },
    get$darkTheme() {
      return "Tumma";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "T\xe4m\xe4 poistaa tunnuksesi k\xe4yt\xf6st\xe4. T\xe4t\xe4 ei voi kumota! Oletko varma?";
    },
    get$defaultPermissionLevel() {
      return "Uusien k\xe4ytt\xe4jien oikeuksien oletustaso";
    },
    get$$delete(_) {
      return "Poista";
    },
    get$deleteAccount() {
      return "Poista tunnus";
    },
    get$deleteMessage() {
      return "Poista viesti";
    },
    get$devices() {
      return "Laitteet";
    },
    get$directChats() {
      return "Suorat keskustelut";
    },
    get$allRooms() {
      return "Kaikki ryhm\xe4keskustelut";
    },
    get$displaynameHasBeenChanged() {
      return "N\xe4ytt\xf6nimi on vaihdettu";
    },
    get$downloadFile() {
      return "Lataa tiedosto";
    },
    get$edit() {
      return "Muokkaa";
    },
    get$editBlockedServers() {
      return "Muokkaa estettyj\xe4 palvelimia";
    },
    get$chatPermissions() {
      return "Keskustelun oikeudet";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    get$editDisplayname() {
      return "Muokkaa n\xe4ytt\xf6nime\xe4";
    },
    get$editRoomAliases() {
      return "Muokkaa huoneen aliaksia";
    },
    get$editRoomAvatar() {
      return "Muokkaa huoneen profiilikuvaa";
    },
    get$emoteExists() {
      return "Emote on jo olemassa!";
    },
    get$emoteInvalid() {
      return "Ep\xe4kelpo emote-lyhytkoodi";
    },
    get$emoteKeyboardNoRecents() {
      return "Viimeaikoina k\xe4ytetyt emotet tulevat n\xe4kym\xe4\xe4n t\xe4\xe4ll\xe4...";
    },
    get$emotePacks() {
      return "Huoneen emote-paketit";
    },
    get$globalChatId() {
      return "Global chat ID";
    },
    get$accessAndVisibility() {
      return "P\xe4\xe4sy ja n\xe4kyvyys";
    },
    get$customEmojisAndStickers() {
      return "Custom emojis and stickers";
    },
    get$emoteShortcode() {
      return "Emote-lyhytkoodi";
    },
    get$emoteWarnNeedToPick() {
      return "Emote-lyhytkoodi ja kuva on valittava!";
    },
    get$emptyChat() {
      return "Tyhj\xe4 keskustelu";
    },
    get$enableEmotesGlobally() {
      return "Ota emote-paketti k\xe4ytt\xf6\xf6n kaikkialla";
    },
    get$enableEncryption() {
      return "Ota salaus k\xe4ytt\xf6\xf6n";
    },
    get$encrypted() {
      return "Salattu";
    },
    get$encryptionNotEnabled() {
      return "Salaus ei ole k\xe4yt\xf6ss\xe4";
    },
    endedTheCall$1(senderName) {
      return senderName + " p\xe4\xe4tti puhelun";
    },
    get$enterAnEmailAddress() {
      return "Sy\xf6t\xe4 s\xe4hk\xf6posti-osoite";
    },
    errorObtainingLocation$1(error) {
      return "Virhe paikannuksessa: " + error;
    },
    get$extremeOffensive() {
      return "Eritt\xe4in loukkaavaa";
    },
    get$fontSize(_) {
      return "Fonttikoko";
    },
    get$forward(_) {
      return "Edelleenl\xe4het\xe4";
    },
    get$fromJoining() {
      return "Alkaen liittymisest\xe4";
    },
    get$fromTheInvitation() {
      return "Alkaen kutsumisesta";
    },
    get$goToTheNewRoom() {
      return "Mene uuteen huoneeseen";
    },
    get$group() {
      return "Ryhm\xe4";
    },
    get$chatDescription() {
      return "Keskustelun kuvaus";
    },
    get$groups() {
      return "Ryhm\xe4t";
    },
    groupWith$1(displayname) {
      return "Ryhm\xe4 seuralaisina " + displayname;
    },
    get$guestsAreForbidden() {
      return "Vieraat on kielletty";
    },
    get$guestsCanJoin() {
      return "Vieraat voivat liitty\xe4";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " on perunnut k\xe4ytt\xe4j\xe4n " + targetName + " kutsun";
    },
    get$help() {
      return "Apua";
    },
    get$hideRedactedMessages() {
      return "Hide redacted messages";
    },
    get$hideRedactedMessagesBody() {
      return "If someone redacts a message, this message won't be visible in the chat anymore.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "Hide invalid or unknown message formats";
    },
    get$howOffensiveIsThisContent() {
      return "Kuinka loukkaavaa t\xe4m\xe4 sis\xe4lt\xf6 on?";
    },
    get$block() {
      return "block";
    },
    get$blockedUsers() {
      return "Blocked users";
    },
    get$blockListDescription() {
      return "You can block users who are disturbing you. You won't be able to receive any messages or room invites from the users on your personal block list.";
    },
    get$blockUsername() {
      return "Ignore username";
    },
    get$iHaveClickedOnLink() {
      return "Olen klikannut linkki\xe4";
    },
    get$incorrectPassphraseOrKey() {
      return "Virheellinen salasana tai palautusavain";
    },
    get$inoffensive() {
      return "Loukkaamatonta";
    },
    get$inviteContact() {
      return "Kutsu yhteystieto";
    },
    get$noChatDescriptionYet() {
      return "Keskustelun kuvausta ei ole viel\xe4 luotu.";
    },
    get$tryAgain() {
      return "Yrit\xe4 uudelleen";
    },
    get$invited() {
      return "Kutsuttu";
    },
    get$redactMessageDescription() {
      return "Viesti poistetaan kaikilta keskustelun osallistujilta. T\xe4t\xe4 ei voida kumota.";
    },
    get$optionalRedactReason() {
      return "(Vapaaehtoinen) Syy t\xe4m\xe4n viestin poistamiselle...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " kutsui k\xe4ytt\xe4j\xe4n " + targetName;
    },
    get$invitedUsersOnly() {
      return "Vain kutsutut k\xe4ytt\xe4j\xe4t";
    },
    get$inviteForMe() {
      return "Kutsu minua varten";
    },
    inviteText$2(username, link) {
      return username + " kutsui sinut FluffyChattiin.\n1. Viereaile sivulla: https://fluffychat.im ja asenna sovellus\n2. Rekister\xf6idy tai kirjaudu sis\xe4\xe4n\n3. Avaa kutsulinkki:\n" + link;
    },
    get$isTyping() {
      return "kirjoittaa\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " liittyi keskusteluun";
    },
    get$joinRoom() {
      return "Liity huoneeseen";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " potki k\xe4ytt\xe4j\xe4n " + targetName;
    },
    get$kickFromChat() {
      return "Potki keskustelusta";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Aktiivinen viimeksi: " + localizedTimeShort;
    },
    get$leave() {
      return "Poistu";
    },
    get$leftTheChat() {
      return "Poistui keskustelusta";
    },
    get$lightTheme() {
      return "Vaalea";
    },
    loadCountMoreParticipants$1(count) {
      return "Lataa viel\xe4 " + count + " osallistujaa";
    },
    get$dehydrate() {
      return "Vie istunto ja tyhjenn\xe4 laite";
    },
    get$dehydrateWarning() {
      return "T\xe4t\xe4 toimenpidett\xe4 ei voi kumota.\nVarmista varmuuskopiotiedoston turvallinen tallennus.";
    },
    get$dehydrateTor() {
      return "TOR-k\xe4ytt\xe4j\xe4t: vie istunto";
    },
    get$dehydrateTorLong() {
      return "Tor-k\xe4ytt\xe4jille suositellaan istunnon vienti\xe4 ennen ikkunan sulkemista.";
    },
    get$loadingPleaseWait() {
      return "Ladataan... Hetkinen.";
    },
    get$loadMore() {
      return "Lataa lis\xe4\xe4\u2026";
    },
    get$locationDisabledNotice() {
      return "Sijaintipalvelut ovat poissa k\xe4yt\xf6st\xe4. Otathan ne k\xe4ytt\xf6\xf6n jakaaksesi sijaintisi.";
    },
    get$locationPermissionDeniedNotice() {
      return "SIjaintioikeus on estetty. My\xf6nn\xe4th\xe4n sen jakaaksesi sijaintisi.";
    },
    get$login() {
      return "Kirjaudu sis\xe4\xe4n";
    },
    get$logout() {
      return "Kirjaudu ulos";
    },
    get$memberChanges() {
      return "J\xe4senmuutoksia";
    },
    get$mention() {
      return "Mainitse";
    },
    get$messages() {
      return "Viestit";
    },
    get$messagesStyle() {
      return "Viestit:";
    },
    get$moderator() {
      return "Valvoja";
    },
    get$newChat() {
      return "Uusi keskustelu";
    },
    get$newVerificationRequest() {
      return "Uusi varmennuspyynt\xf6!";
    },
    get$next(_) {
      return "Seuraava";
    },
    get$no() {
      return "Ei";
    },
    get$noConnectionToTheServer() {
      return "Ei yhteytt\xe4 palvelimeen";
    },
    get$noEmotesFound() {
      return "Emoteja ei l\xf6ytynyt. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Jaa kutsulinkki";
    },
    get$noPasswordRecoveryDescription() {
      return "Et ole viel\xe4 lis\xe4nnyt tapaa salasanasi palauttamiseksi.";
    },
    get$noPermission() {
      return "Ei lupaa";
    },
    get$noRoomsFound() {
      return "Huoneita ei l\xf6ytynyt\u2026";
    },
    get$notifications() {
      return "Ilmoitukset";
    },
    get$notificationsEnabledForThisAccount() {
      return "T\xe4m\xe4n tunnuksen ilmoitukset ovat k\xe4yt\xf6ss\xe4";
    },
    get$obtainingLocation() {
      return "Paikannetaan sijantia\u2026";
    },
    get$offensive() {
      return "Loukkaava";
    },
    get$ok() {
      return "ok";
    },
    get$oopsSomethingWentWrong() {
      return "Hups, jotakin meni pieleen\u2026";
    },
    get$oneClientLoggedOut() {
      return "Yksi tunnuksistasi on kirjattu ulos";
    },
    get$addAccount() {
      return "Lis\xe4\xe4 tili";
    },
    get$enableMultiAccounts() {
      return "(BETA) Ota k\xe4ytt\xf6\xf6n tuki usealle tilille t\xe4ll\xe4 laitteella";
    },
    get$openInMaps() {
      return "Avaa kartoissa";
    },
    get$link() {
      return "Linkki";
    },
    get$serverRequiresEmail() {
      return "T\xe4m\xe4n palvelimen t\xe4ytyy tarkistaa s\xe4hk\xf6posti-osoitteesi rekister\xf6itymist\xe4 varten.";
    },
    get$or() {
      return "Tai";
    },
    get$participant() {
      return "Osallistuja";
    },
    get$passphraseOrKey() {
      return "salalause tai palautusavain";
    },
    get$password(_) {
      return "Salasana";
    },
    get$passwordForgotten() {
      return "Salasana unohtunut";
    },
    get$passwordHasBeenChanged() {
      return "Salasana on vaihdettu";
    },
    get$overview() {
      return "Overview";
    },
    get$notifyMeFor() {
      return "Notify me for";
    },
    get$passwordRecoverySettings() {
      return "Password recovery settings";
    },
    get$passwordRecovery() {
      return "Salasanan palautus";
    },
    get$pickImage() {
      return "Valitse kuva";
    },
    get$pin() {
      return "Kiinnit\xe4";
    },
    get$pleaseChoose() {
      return "Valitse";
    },
    get$pleaseClickOnLink() {
      return "Klikkaa linkki\xe4 s\xe4hk\xf6postissa ja sitten jatka.";
    },
    get$pleaseEnterYourPassword() {
      return "Sy\xf6t\xe4 salasanasi";
    },
    get$pleaseEnterYourPin() {
      return "Sy\xf6t\xe4 PIN-koodisi";
    },
    get$pleaseEnterYourUsername() {
      return "Sy\xf6t\xe4 k\xe4ytt\xe4j\xe4tunnuksesi";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "Seuraa ohjeita verkkosivulla ja paina seuraava.";
    },
    get$privacy() {
      return "Yksityisyys";
    },
    get$reason(_) {
      return "Syy";
    },
    redactedBy$1(username) {
      return "Poistanut " + username;
    },
    get$directChat() {
      return "Yksityiskeskustelu";
    },
    redactedByBecause$2(username, reason) {
      return "Poistanut " + username + ' syyst\xe4: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " poisti tapahtuman";
    },
    get$redactMessage() {
      return "Poista viesti";
    },
    get$reject() {
      return "Hylk\xe4\xe4";
    },
    rejectedTheInvitation$1(username) {
      return username + " hylk\xe4si kutsun";
    },
    get$removeAllOtherDevices() {
      return "Poista kaikki muut laitteet";
    },
    get$unbanFromChat() {
      return "Poista porttikielto keskusteluun";
    },
    get$removeYourAvatar() {
      return "Poista profiilikuvasi";
    },
    get$replaceRoomWithNewerVersion() {
      return "Korvaa huone uudemmalla versiolla";
    },
    get$reply(_) {
      return "Vastaa";
    },
    get$reportMessage() {
      return "Ilmoita viesti";
    },
    get$roomHasBeenUpgraded() {
      return "Huone on p\xe4ivitetty";
    },
    get$roomVersion() {
      return "Huoneen versio";
    },
    get$search(_) {
      return "Hae";
    },
    get$security() {
      return "Turvallisuus";
    },
    get$send(_) {
      return "L\xe4het\xe4";
    },
    get$sendAsText() {
      return "L\xe4het\xe4 tekstin\xe4";
    },
    get$sendAudio() {
      return "L\xe4het\xe4 \xe4\xe4niviesti";
    },
    get$sendFile() {
      return "L\xe4het\xe4 tiedosto";
    },
    get$sendImage() {
      return "L\xe4het\xe4 kuva";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "L\xe4het\xe4 viestej\xe4";
    },
    get$sendVideo() {
      return "L\xe4het\xe4 video";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " l\xe4hetti tiedoston";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " l\xe4hetti \xe4\xe4niviestin";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " l\xe4hetti kuvan";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " l\xe4hetti tarran";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " l\xe4hetti videon";
    },
    sentCallInformations$1(senderName) {
      return senderName + " l\xe4hetti puhelutiedot";
    },
    get$separateChatTypes() {
      return "Erota yksityiskeskustelut ryhmist\xe4";
    },
    get$setAsCanonicalAlias() {
      return "Aseta p\xe4\xe4alias";
    },
    get$setChatDescription() {
      return "Asetti keskustelun kuvauksen";
    },
    get$setPermissionsLevel() {
      return "Aseta oikeustasot";
    },
    get$settings() {
      return "Asetukset";
    },
    get$share(_) {
      return "Jaa";
    },
    sharedTheLocation$1(username) {
      return username + " jakoi sijaintinsa";
    },
    get$shareLocation() {
      return "Jaa sijainti";
    },
    get$showPassword() {
      return "N\xe4yt\xe4 salasana";
    },
    get$presencesToggle() {
      return "Show status messages from other users";
    },
    get$skip(_) {
      return "Ohita";
    },
    get$sourceCode() {
      return "L\xe4hdekoodi";
    },
    get$spaceName() {
      return "Tilan nimi";
    },
    startedACall$1(senderName) {
      return senderName + " aloitti puhelun";
    },
    get$status(_) {
      return "Tila";
    },
    get$submit(_) {
      return "L\xe4het\xe4";
    },
    get$synchronizingPleaseWait() {
      return "Synkronoidaan... Hetkinen.";
    },
    get$systemTheme() {
      return "J\xe4rjestelm\xe4";
    },
    get$theyDontMatch() {
      return "Ne eiv\xe4t t\xe4sm\xe4\xe4";
    },
    get$theyMatch() {
      return "Ne t\xe4sm\xe4\xe4v\xe4t";
    },
    get$tooManyRequestsWarning() {
      return "Liikaa pyynt\xf6j\xe4. Yrit\xe4 my\xf6hemmin uudelleen!";
    },
    get$tryToSendAgain() {
      return "Yrit\xe4 uudelleenl\xe4hett\xe4mist\xe4";
    },
    unbannedUser$2(username, targetName) {
      return username + " poisti k\xe4ytt\xe4j\xe4n " + targetName + " porttikiellon";
    },
    get$unblockDevice() {
      return "Poista laitteen esto";
    },
    get$unknownDevice() {
      return "Tuntematon laite";
    },
    get$unknownEncryptionAlgorithm() {
      return "Tuntematon salausalgoritmi";
    },
    unknownEvent$1(type) {
      return "Tuntematon tapahtuma '" + type + "'";
    },
    get$unpin() {
      return "Poista kiinnitys";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " ja " + count + " muuta kirjoittavat\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " ja " + username2 + " kirjoittavat\u2026";
    },
    userIsTyping$1(username) {
      return username + " kirjoittaa\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " poistui keskustelusta";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " l\xe4hetti " + type + "-tapahtuman";
    },
    get$unverified() {
      return "Varmistamaton";
    },
    get$verified() {
      return "Varmistettu";
    },
    get$verifyStart() {
      return "Aloita varmennus";
    },
    get$verifySuccess() {
      return "Varmensit onnistuneesti!";
    },
    get$verifyTitle() {
      return "Varmistetaan toista tunnusta";
    },
    get$visibilityOfTheChatHistory() {
      return "Keskusteluhistorian n\xe4kyvyys";
    },
    get$visibleForAllParticipants() {
      return "N\xe4kyy kaikille osallistujille";
    },
    get$visibleForEveryone() {
      return "N\xe4kyy kaikille";
    },
    get$voiceMessage() {
      return "\xc4\xe4niviesti";
    },
    get$waitingPartnerAcceptRequest() {
      return "Odotetaan kumppanin varmistavan pyynn\xf6n\u2026";
    },
    get$waitingPartnerEmoji() {
      return "Odotetaan kumppanin hyv\xe4ksyv\xe4n emojit\u2026";
    },
    get$waitingPartnerNumbers() {
      return "Odotetaan kumppanin hyv\xe4ksyv\xe4n numerot\u2026";
    },
    get$warning() {
      return "Varoitus!";
    },
    get$weSentYouAnEmail() {
      return "L\xe4hetimme sinulle s\xe4hk\xf6postia";
    },
    get$whoCanPerformWhichAction() {
      return "Kuka voi suorittaa mink\xe4 toimenpiteen";
    },
    get$whoIsAllowedToJoinThisGroup() {
      return "Kenen on sallittua liitty\xe4 ryhm\xe4\xe4n";
    },
    get$whyDoYouWantToReportThis() {
      return "Miksi haluat ilmoittaa t\xe4m\xe4n?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "N\xe4ill\xe4 osoitteilla voit palauttaa salasanasi.";
    },
    get$writeAMessage() {
      return "Kirjoita viesti\u2026";
    },
    writeAMessageFlag$2(l1flag, l2flag) {
      return "Write a message in " + l1flag + " or " + l2flag;
    },
    get$yes() {
      return "Kyll\xe4";
    },
    get$you() {
      return "Sin\xe4";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Et en\xe4\xe4 osallistu t\xe4h\xe4n keskusteluun";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Sinulle on annettu porttikielto t\xe4h\xe4n keskusteluun";
    },
    get$yourPublicKey() {
      return "Julkinen avaimesi";
    },
    get$messageInfo() {
      return "Viestin tiedot";
    },
    get$time(_) {
      return "Aika";
    },
    get$sender() {
      return "L\xe4hett\xe4j\xe4";
    },
    get$openGallery() {
      return "Avaa galleria";
    },
    get$removeFromSpace() {
      return "Poista tilasta";
    },
    videoWithSize$1(size) {
      return "Video (" + size + ")";
    },
    get$markAsRead() {
      return "Merkitse luetuksi";
    },
    get$reportUser() {
      return "Ilmianna k\xe4ytt\xe4j\xe4";
    },
    reactedWith$2(sender, reaction) {
      return sender + " reagoi " + reaction;
    },
    get$pinMessage() {
      return "Kiinnit\xe4 huoneeseen";
    },
    get$confirmEventUnpin() {
      return "Haluatko varmasti irrottaa tapahtuman pysyv\xe4sti?";
    },
    get$emojis() {
      return "Hymi\xf6t";
    },
    get$emailOrUsername() {
      return "S\xe4hk\xf6posti-osoite tai k\xe4ytt\xe4j\xe4tunnus";
    },
    get$indexedDbErrorTitle() {
      return "Yksityisen selauksen ongelmat";
    },
    get$indexedDbErrorLong() {
      return "Viestivarasto ei ole k\xe4yt\xf6ss\xe4 yksityisselauksessa oletuksena.\nK\xe4yth\xe4n osoitteessa\n - about:config\n - Aseta dom.indexedDB.privateBrowsing.enabled arvoon true\nMuuten FluffyChatin k\xe4ytt\xe4minen ei ole mahdollista.";
    },
    get$youRejectedTheInvitation() {
      return "Kielt\xe4ydyit kutsusta";
    },
    get$youJoinedTheChat() {
      return "Liityit keskusteluun";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Hyv\xe4ksyit kutsun";
    },
    youBannedUser$1(user) {
      return "Annoit porttikiellon k\xe4ytt\xe4j\xe4lle " + user;
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Olet perunut kutsun k\xe4ytt\xe4j\xe4lle " + user;
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 " + user + " kutsui sinut";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Kutsuit k\xe4ytt\xe4j\xe4n " + user;
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Potkit k\xe4ytt\xe4j\xe4n " + user + " keskustelusta";
    },
    youUnbannedUser$1(user) {
      return "Poistit k\xe4ytt\xe4j\xe4n " + user + " porttikiellon";
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " on koputtanut";
    },
    get$usersMustKnock() {
      return "Users must knock";
    },
    get$noOneCanJoin() {
      return "No one can join";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " would like to join the chat.";
    },
    get$knock() {
      return "Knock";
    },
    get$users() {
      return "K\xe4ytt\xe4j\xe4t";
    },
    countFiles$1(count) {
      return count + " tiedostoa";
    },
    get$user() {
      return "K\xe4ytt\xe4j\xe4";
    },
    get$custom() {
      return "Mukautettu";
    },
    get$noKeyForThisMessage() {
      return "T\xe4m\xe4 voi tapahtua mik\xe4li viesti l\xe4hetettiin ennen sis\xe4\xe4nkirjautumistasi t\xe4lle laitteelle.\n\nOn my\xf6s mahdollista, ett\xe4 l\xe4hett\xe4j\xe4 on est\xe4nyt t\xe4m\xe4n laitteen tai jokin meni pieleen verkkoyhteyden kanssa.\n\nPystytk\xf6 lukemaan viestin toisella istunnolla? Siin\xe4 tapauksessa voit siirt\xe4\xe4 viestin silt\xe4! Mene Asetukset > Laitteet ja varmista, ett\xe4 laitteesi ovat varmistaneet toisensa. Seuraavankerran avatessasi huoneen ja molempien istuntojen ollessa etualalla, avaimet siirret\xe4\xe4n automaattisesti.\n\nHaluatko varmistaa ettet menet\xe4 avaimia uloskirjautuessa tai laitteita vaihtaessa? Varmista avainvarmuuskopion k\xe4yt\xf6ss\xe4olo asetuksista.";
    },
    get$newSpace() {
      return "Uusi tila";
    },
    get$doNotShowAgain() {
      return "\xc4l\xe4 n\xe4yt\xe4 uudelleen";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "Tyhj\xe4 keskustelu (oli " + oldDisplayName + ")";
    },
    get$newSpaceDescription() {
      return "Tilat mahdollistavat keskusteluidesi ker\xe4\xe4misen ja yksityisten tai julkisten yhteis\xf6jen rakentamisen.";
    },
    get$reopenChat() {
      return "Avaa keskustelu uudelleen";
    },
    get$noBackupWarning() {
      return "Varoitus! Ilman avainvarmuuskopion k\xe4ytt\xf6\xf6nottoa menet\xe4t p\xe4\xe4syn salattuihin viesteihisi. Suosittelemme ehdottomasti avainvarmuuskopion k\xe4ytt\xf6\xf6nottoa ennen uloskirjautumista.";
    },
    get$noOtherDevicesFound() {
      return "Muita laitteita ei l\xf6ytynyt";
    },
    fileIsTooBigForServer$1(max) {
      return "Ei voi l\xe4hett\xe4\xe4! Palvelin tukee liitetiedostoja vain enint\xe4\xe4n " + max + ".";
    },
    get$jumpToLastReadMessage() {
      return "Hypp\xe4\xe4 viimeiseen luettuun viestiin";
    },
    get$readUpToHere() {
      return "Luettu t\xe4h\xe4n asti";
    },
    get$jump() {
      return "Hypp\xe4\xe4";
    },
    get$openLinkInBrowser() {
      return "Avaa linkki selaimessa";
    },
    get$profileNotFound() {
      return "K\xe4ytt\xe4j\xe4\xe4 ei l\xf6ydy palvelimelta. T\xe4m\xe4 voi olla yhteysongelma tai k\xe4ytt\xe4j\xe4 ei ole olemassa.";
    },
    get$setColorTheme() {
      return "Aseta v\xe4riteema:";
    },
    get$invite() {
      return "Kutsu";
    },
    get$invitePrivateChat() {
      return "Kutsu yksityiskeskusteluun";
    },
    get$invalidInput() {
      return "Virheellinen sy\xf6te!";
    },
    wrongPinEntered$1(seconds) {
      return "V\xe4\xe4r\xe4 pin-koodi! Yrit\xe4 uudelleen " + seconds + " sekuntin kuluttua...";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$yourBirthdayPlease() {
      return "Pangea Chat serves schools and other learning communities, ages 13 and up, around the world.\n\nIn order to protect our young learners, we ask our users to verify their age before connecting to our community.\n\nBefore you can search Pangea Chat for classes, rooms, and new friends, you must verify you are 18 or older.";
    },
    get$invalidDob() {
      return "Invalid Date of Birth";
    },
    get$getStarted() {
      return "Get Started";
    },
    get$mustBe13() {
      return "User should be 13 years old";
    },
    get$yourBirthdayPleaseShort() {
      return "Please selected your age group";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$myLanguages() {
      return "My base and target languages";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$sourceLanguage() {
      return "Base language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$loginOrSignup() {
      return "Sign in with";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$andCertifyIAmAtLeast13YearsOfAge() {
      return " and certify I am at least 13 years of age.";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$toggleToolSettingsDescription() {
      return "Here you can toggle your individual language tool settings.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$inviteStudentByUserNameDesc() {
      return "If your student already has an account, you can search for them.";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocabulary";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$abDisplayName() {
      return "Abkhaz";
    },
    get$aaDisplayName() {
      return "Afar";
    },
    get$afDisplayName() {
      return "Afrikaans";
    },
    get$akDisplayName() {
      return "Akan";
    },
    get$sqDisplayName() {
      return "Albanian";
    },
    get$amDisplayName() {
      return "Amharic";
    },
    get$arDisplayName() {
      return "Arabic";
    },
    get$anDisplayName() {
      return "Aragonese";
    },
    get$hyDisplayName() {
      return "Armenian";
    },
    get$asDisplayName() {
      return "Assamese";
    },
    get$avDisplayName() {
      return "Avaric";
    },
    get$aeDisplayName() {
      return "Avestan";
    },
    get$ayDisplayName() {
      return "Aymara";
    },
    get$azDisplayName() {
      return "Azerbaijani";
    },
    get$bmDisplayName() {
      return "Bambara";
    },
    get$baDisplayName() {
      return "Bashkir";
    },
    get$euDisplayName() {
      return "Basque";
    },
    get$beDisplayName() {
      return "Belarusian";
    },
    get$bnDisplayName() {
      return "Bengali";
    },
    get$bhDisplayName() {
      return "Bihari";
    },
    get$biDisplayName() {
      return "Bislama";
    },
    get$bsDisplayName() {
      return "Bosnian";
    },
    get$brDisplayName() {
      return "Breton";
    },
    get$bgDisplayName() {
      return "Bulgarian";
    },
    get$myDisplayName() {
      return "Burmese";
    },
    get$caDisplayName() {
      return "Catalan, Valencian";
    },
    get$chDisplayName() {
      return "Chamorro";
    },
    get$ceDisplayName() {
      return "Chechen";
    },
    get$nyDisplayName() {
      return "Chichewa, Chewa, Nyanja";
    },
    get$zhDisplayName() {
      return "Chinese";
    },
    get$cvDisplayName() {
      return "Chuvash";
    },
    get$kwDisplayName() {
      return "Cornish";
    },
    get$coDisplayName() {
      return "Corsican";
    },
    get$crDisplayName() {
      return "Cree";
    },
    get$hrDisplayName() {
      return "Croatian";
    },
    get$csDisplayName() {
      return "Czech";
    },
    get$daDisplayName() {
      return "Danish";
    },
    get$dvDisplayName() {
      return "Divehi; Dhivehi; Maldivian;";
    },
    get$nlDisplayName() {
      return "Dutch";
    },
    get$enDisplayName() {
      return "English";
    },
    get$eoDisplayName() {
      return "Esperanto";
    },
    get$etDisplayName() {
      return "Estonian";
    },
    get$eeDisplayName() {
      return "Ewe";
    },
    get$foDisplayName() {
      return "Faroese";
    },
    get$fjDisplayName() {
      return "Fijian";
    },
    get$fiDisplayName() {
      return "Finnish";
    },
    get$frDisplayName() {
      return "French";
    },
    get$ffDisplayName() {
      return "Fula; Fulah; Pulaar; Pular";
    },
    get$glDisplayName() {
      return "Galician";
    },
    get$kaDisplayName() {
      return "Georgian";
    },
    get$deDisplayName() {
      return "German";
    },
    get$elDisplayName() {
      return "Greek, Modern";
    },
    get$gnDisplayName() {
      return "Guaran\xed";
    },
    get$guDisplayName() {
      return "Gujarati";
    },
    get$htDisplayName() {
      return "Haitian, Haitian Creole";
    },
    get$haDisplayName() {
      return "Hausa";
    },
    get$heDisplayName() {
      return "Hebrew (modern)";
    },
    get$hzDisplayName() {
      return "Herero";
    },
    get$hiDisplayName() {
      return "Hindi";
    },
    get$hoDisplayName() {
      return "Hiri Motu";
    },
    get$huDisplayName() {
      return "Hungarian";
    },
    get$iaDisplayName() {
      return "Interlingua";
    },
    get$idDisplayName() {
      return "Indonesian";
    },
    get$ieDisplayName() {
      return "Interlingue";
    },
    get$gaDisplayName() {
      return "Irish";
    },
    get$igDisplayName() {
      return "Igbo";
    },
    get$ikDisplayName() {
      return "Inupiaq";
    },
    get$ioDisplayName() {
      return "Ido";
    },
    get$isDisplayName() {
      return "Icelandic";
    },
    get$itDisplayName() {
      return "Italian";
    },
    get$iuDisplayName() {
      return "Inuktitut";
    },
    get$jaDisplayName() {
      return "Japanese";
    },
    get$jvDisplayName() {
      return "Javanese";
    },
    get$klDisplayName() {
      return "Kalaallisut, Greenlandic";
    },
    get$knDisplayName() {
      return "Kannada";
    },
    get$krDisplayName() {
      return "Kanuri";
    },
    get$ksDisplayName() {
      return "Kashmiri";
    },
    get$kkDisplayName() {
      return "Kazakh";
    },
    get$kmDisplayName() {
      return "Khmer";
    },
    get$kiDisplayName() {
      return "Kikuyu, Gikuyu";
    },
    get$rwDisplayName() {
      return "Kinyarwanda";
    },
    get$kyDisplayName() {
      return "Kirghiz, Kyrgyz";
    },
    get$kvDisplayName() {
      return "Komi";
    },
    get$kgDisplayName() {
      return "Kongo";
    },
    get$koDisplayName() {
      return "Korean";
    },
    get$kuDisplayName() {
      return "Kurdish";
    },
    get$kjDisplayName() {
      return "Kwanyama, Kuanyama";
    },
    get$laDisplayName() {
      return "Latin";
    },
    get$lbDisplayName() {
      return "Luxembourgish, Letzeburgesch";
    },
    get$lgDisplayName() {
      return "Luganda";
    },
    get$liDisplayName() {
      return "Limburgish, Limburgan, Limburger";
    },
    get$lnDisplayName() {
      return "Lingala";
    },
    get$loDisplayName() {
      return "Lao";
    },
    get$ltDisplayName() {
      return "Lithuanian";
    },
    get$luDisplayName() {
      return "Luba-Katanga";
    },
    get$lvDisplayName() {
      return "Latvian";
    },
    get$gvDisplayName() {
      return "Manx";
    },
    get$mkDisplayName() {
      return "Macedonian";
    },
    get$mgDisplayName() {
      return "Malagasy";
    },
    get$msDisplayName() {
      return "Malay";
    },
    get$mlDisplayName() {
      return "Malayalam";
    },
    get$mtDisplayName() {
      return "Maltese";
    },
    get$miDisplayName() {
      return "M\u0101ori";
    },
    get$mrDisplayName() {
      return "Marathi (Mar\u0101\u1e6dh\u012b)";
    },
    get$mhDisplayName() {
      return "Marshallese";
    },
    get$mnDisplayName() {
      return "Mongolian";
    },
    get$naDisplayName() {
      return "Nauru";
    },
    get$nvDisplayName() {
      return "Navajo, Navaho";
    },
    get$nbDisplayName() {
      return "Norwegian Bokm\xe5l";
    },
    get$ndDisplayName() {
      return "North Ndebele";
    },
    get$neDisplayName() {
      return "Nepali";
    },
    get$ngDisplayName() {
      return "Ndonga";
    },
    get$nnDisplayName() {
      return "Norwegian Nynorsk";
    },
    get$noDisplayName() {
      return "Norwegian";
    },
    get$iiDisplayName() {
      return "Nuosu";
    },
    get$nrDisplayName() {
      return "South Ndebele";
    },
    get$ocDisplayName() {
      return "Occitan";
    },
    get$ojDisplayName() {
      return "Ojibwe, Ojibwa";
    },
    get$cuDisplayName() {
      return "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic";
    },
    get$omDisplayName() {
      return "Oromo";
    },
    get$orDisplayName() {
      return "Oriya";
    },
    get$osDisplayName() {
      return "Ossetian, Ossetic";
    },
    get$paDisplayName() {
      return "Panjabi, Punjabi";
    },
    get$piDisplayName() {
      return "P\u0101li";
    },
    get$faDisplayName() {
      return "Persian";
    },
    get$plDisplayName() {
      return "Polish";
    },
    get$psDisplayName() {
      return "Pashto, Pushto";
    },
    get$ptDisplayName() {
      return "Portuguese";
    },
    get$quDisplayName() {
      return "Quechua";
    },
    get$rmDisplayName() {
      return "Romansh";
    },
    get$rnDisplayName() {
      return "Kirundi";
    },
    get$roDisplayName() {
      return "Romanian, Moldavian, Moldovan";
    },
    get$ruDisplayName() {
      return "Russian";
    },
    get$saDisplayName() {
      return "Sanskrit (Sa\u1e41sk\u1e5bta)";
    },
    get$scDisplayName() {
      return "Sardinian";
    },
    get$sdDisplayName() {
      return "Sindhi";
    },
    get$seDisplayName() {
      return "Northern Sami";
    },
    get$smDisplayName() {
      return "Samoan";
    },
    get$sgDisplayName() {
      return "Sango";
    },
    get$srDisplayName() {
      return "Serbian";
    },
    get$gdDisplayName() {
      return "Scottish Gaelic, Gaelic";
    },
    get$snDisplayName() {
      return "Shona";
    },
    get$siDisplayName() {
      return "Sinhala, Sinhalese";
    },
    get$skDisplayName() {
      return "Slovak";
    },
    get$slDisplayName() {
      return "Slovene";
    },
    get$soDisplayName() {
      return "Somali";
    },
    get$stDisplayName() {
      return "Southern Sotho";
    },
    get$esDisplayName() {
      return "Spanish";
    },
    get$suDisplayName() {
      return "Sundanese";
    },
    get$swDisplayName() {
      return "Swahili";
    },
    get$ssDisplayName() {
      return "Swati";
    },
    get$svDisplayName() {
      return "Swedish";
    },
    get$taDisplayName() {
      return "Tamil";
    },
    get$teDisplayName() {
      return "Telugu";
    },
    get$tgDisplayName() {
      return "Tajik";
    },
    get$thDisplayName() {
      return "Thai";
    },
    get$tiDisplayName() {
      return "Tigrinya";
    },
    get$boDisplayName() {
      return "Tibetan Standard, Tibetan, Central";
    },
    get$tkDisplayName() {
      return "Turkmen";
    },
    get$tlDisplayName() {
      return "Tagalog";
    },
    get$tnDisplayName() {
      return "Tswana";
    },
    get$toDisplayName() {
      return "Tonga (Tonga Islands)";
    },
    get$trDisplayName() {
      return "Turkish";
    },
    get$tsDisplayName() {
      return "Tsonga";
    },
    get$ttDisplayName() {
      return "Tatar";
    },
    get$twDisplayName() {
      return "Twi";
    },
    get$tyDisplayName() {
      return "Tahitian";
    },
    get$ugDisplayName() {
      return "Uighur, Uyghur";
    },
    get$ukDisplayName() {
      return "Ukrainian";
    },
    get$urDisplayName() {
      return "Urdu";
    },
    get$uzDisplayName() {
      return "Uzbek";
    },
    get$veDisplayName() {
      return "Venda";
    },
    get$viDisplayName() {
      return "Vietnamese";
    },
    get$voDisplayName() {
      return "Volap\xfck";
    },
    get$waDisplayName() {
      return "Walloon";
    },
    get$cyDisplayName() {
      return "Welsh";
    },
    get$woDisplayName() {
      return "Wolof";
    },
    get$fyDisplayName() {
      return "Western Frisian";
    },
    get$xhDisplayName() {
      return "Xhosa";
    },
    get$yiDisplayName() {
      return "Yiddish";
    },
    get$yoDisplayName() {
      return "Yoruba";
    },
    get$zaDisplayName() {
      return "Zhuang, Chuang";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$zuDisplayName() {
      return "Zulu";
    },
    get$hawDisplayName() {
      return "Hawaiian";
    },
    get$hmnDisplayName() {
      return "Hmong";
    },
    get$multiDisplayName() {
      return "Multi";
    },
    get$cebDisplayName() {
      return "Cebuano";
    },
    get$dzDisplayName() {
      return "Dzongkha";
    },
    get$iwDisplayName() {
      return "Hebrew";
    },
    get$jwDisplayName() {
      return "Javanese";
    },
    get$moDisplayName() {
      return "Moldavian";
    },
    get$shDisplayName() {
      return "Serbo-Croatian";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$declinedInvitation() {
      return "Declined invitation";
    },
    get$acceptedInvitation() {
      return "Accepted invitation";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    get$pleaseEnterANumber() {
      return "Sy\xf6t\xe4 suurempi luku kuin 0";
    },
    get$archiveRoomDescription() {
      return "Keskustelu siirret\xe4\xe4n arkistoon. Muut k\xe4ytt\xe4j\xe4t n\xe4kev\xe4t sinun poistuneen keskustelusta.";
    },
    get$roomUpgradeDescription() {
      return "Keskustelu luodaan uudelleen uudella huoneversiolla. Kaikille osallistujille ilmoitetaan, ett\xe4 heid\xe4n tulee siirty\xe4 uuteen keskusteluun. Voit lukea lis\xe4\xe4 huoneversioista osoitteesta https://spec.matrix.org/latest/rooms/";
    },
    get$removeDevicesDescription() {
      return "You will be logged out of this device and will no longer be able to receive messages.";
    },
    get$banUserDescription() {
      return "The user will be banned from the chat and will not be able to enter the chat again until they are unbanned.";
    },
    get$unbanUserDescription() {
      return "The user will be able to enter the chat again if they try.";
    },
    get$kickUserDescription() {
      return "The user is kicked out of the chat but not banned. In public chats, the user can rejoin at any time.";
    },
    get$makeAdminDescription() {
      return "Once you make this user admin, you may not be able to undo this as they will then have the same permissions as you.";
    },
    get$yourGlobalUserIdIs() {
      return "Your global user-ID is: ";
    },
    noUsersFoundWithQuery$1(query) {
      return 'Unfortunately no user could be found with "' + query + '". Please check whether you made a typo.';
    },
    get$knocking() {
      return "Knocking";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "Chat can be discovered via the search on " + server;
    },
    get$searchChatsRooms() {
      return "Search for #chats, @users...";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$nothingFound() {
      return "Nothing found...";
    },
    get$createGroupAndInviteUsers() {
      return "Create a group and invite users";
    },
    get$wrongRecoveryKey() {
      return "Sorry... this does not seem to be the correct recovery key.";
    },
    get$startConversation() {
      return "Start conversation";
    },
    get$commandHint_sendraw() {
      return "Send raw json";
    },
    get$searchForUsers() {
      return "Search for @users...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "Please enter your current password";
    },
    get$newPassword() {
      return "New password";
    },
    get$pleaseChooseAStrongPassword() {
      return "Please choose a strong password";
    },
    get$passwordsDoNotMatch() {
      return "Passwords do not match";
    },
    get$passwordIsWrong() {
      return "Your entered password is wrong";
    },
    get$publicChatAddresses() {
      return "Public chat addresses";
    },
    get$createNewAddress() {
      return "Create new address";
    },
    get$joinSpace() {
      return "Join space";
    },
    get$publicSpaces() {
      return "Public spaces";
    },
    get$decline() {
      return "Decline";
    },
    get$thisDevice() {
      return "This device:";
    },
    get$initAppError() {
      return "An error occured while init the app";
    },
    get$userRole() {
      return "User role";
    },
    searchIn$1(chat) {
      return 'Search in chat "' + chat + '"...';
    },
    get$searchMore() {
      return "Search more...";
    },
    get$gallery() {
      return "Gallery";
    },
    get$files(_) {
      return "Files";
    },
    sessionLostBody$2(url, error) {
      return "Your session is lost. Please report this error to the developers at " + url + ". The error message is: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "The app now tries to restore your session from the backup. Please report this error to the developers at " + url + ". The error message is: " + error;
    },
    forwardMessageTo$1(roomName) {
      return "Forward message to " + roomName + "?";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$noEmailWarning() {
      return "Please enter a valid email address. Otherwise you won't be able to reset your password. If you don't want to, tap again on the button to continue.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$chooseAUsername() {
      return "Choose a username";
    },
    get$define(_) {
      return "Define";
    },
    get$sendReadReceipts() {
      return "Send read receipts";
    },
    get$sendTypingNotificationsDescription() {
      return "Other participants in a chat can see when you are typing a new message.";
    },
    get$sendReadReceiptsDescription() {
      return "Other participants in a chat can see when you have read a message.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 Verify other device";
    },
    get$verifyOtherDeviceDescription() {
      return "When you verify another device, those devices can exchange keys, increasing your overall security. \ud83d\udcaa When you start a verification, a popup will appear in the app on both devices. There you will then see a series of emojis or numbers that you have to compare with each other. It's best to have both devices handy before you start the verification. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " accepted key verification";
    },
    canceledKeyVerification$1(sender) {
      return sender + " canceled key verification";
    },
    completedKeyVerification$1(sender) {
      return sender + " completed key verification";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " is ready for key verification";
    },
    requestedKeyVerification$1(sender) {
      return sender + " requested key verification";
    },
    startedKeyVerification$1(sender) {
      return sender + " started key verification";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$selectToDefine() {
      return "Click any word to see its definition!";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    certifyAge$1(age) {
      return "I certify that I am over " + age + " years of age";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$stickers() {
      return "Stickers";
    },
    get$discover() {
      return "Discover";
    },
    get$commandHint_ignore() {
      return "Ignore the given matrix ID";
    },
    get$commandHint_unignore() {
      return "Unignore the given matrix ID";
    },
    get$accuracy(_) {
      return "Accuracy";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$conversationBotCustomZone_customTriggerReactionEnabledLabel() {
      return "Responds on \u23e9 reaction";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run Language Assistance Automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run language assistance after typing messages";
    },
    get$leaveRoomDescription() {
      return "The chat will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$leaveSpaceDescription() {
      return "All chats within this space will be moved to the archive. Other users will be able to see that you have left the space.";
    },
    get$onlyAdminDescription() {
      return "Since there are no other admins, all other participants will also be removed.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$spaceCapacity() {
      return "Space capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$spaceCapacityHasBeenChanged() {
      return "Space capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of non-admins.";
    },
    get$spaceCapacitySetTooLow() {
      return "Space capacity cannot be set below the current number of non-admins.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of non-admins allowed in a chat.";
    },
    get$spaceCapacityExplanation() {
      return "Space capacity limits the number of non-admins allowed in a space.";
    },
    get$chatExceedsCapacity() {
      return "This chat exceeds its capacity.";
    },
    get$spaceExceedsCapacity() {
      return "This space exceeds its capacity.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Right now there are " + count + " users blocked.";
    },
    get$restricted() {
      return "Restricted";
    },
    get$knockRestricted() {
      return "Knock restricted";
    },
    get$createNewSpace() {
      return "Uusi tila";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "See how well you did by looking at your Accuracy and Words Per Minute scores";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$continueText() {
      return "Continue";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$sendCanceled() {
      return "Sending canceled";
    },
    goToSpace$1(space) {
      return "Go to space: " + space;
    },
    get$markAsUnread() {
      return "Mark as unread";
    },
    userLevel$1(level) {
      return "" + level + " - User";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moderator";
    },
    adminLevel$1(level) {
      return "" + level + " - Admin";
    },
    get$changeGeneralChatSettings() {
      return "Change general chat settings";
    },
    get$inviteOtherUsers() {
      return "Invite other users to this chat";
    },
    get$changeTheChatPermissions() {
      return "Change the chat permissions";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Change the visibility of the chat history";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Change the main public chat address";
    },
    get$sendRoomNotifications() {
      return "Send a @room notifications";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Change the description of the chat";
    },
    get$chatPermissionsDescription() {
      return "Define which power level is necessary for certain actions in this chat. The power levels 0, 50 and 100 are usually representing users, moderators and admins, but any gradation is possible.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 Update " + version + " installed!";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Doesn't seem to be a compatible homeserver. Wrong URL?";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$reportContentIssueTitle() {
      return "Report content issue";
    },
    get$feedback() {
      return "Optional feedback";
    },
    get$reportContentIssueDescription() {
      return "Uh oh! AI can faciliate personalized learning experiences but... also hallucinates. Please provide any feedback you have and we'll try again.";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$messageNotInTargetLang() {
      return "Message not in target language";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$unlockedLanguageTools() {
      return "You\u2019ve unlocked the language tools for this message. Try them out by clicking below!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$calculatingFileSize() {
      return "Calculating file size...";
    },
    get$prepareSendingAttachment() {
      return "Prepare sending attachment...";
    },
    get$sendingAttachment() {
      return "Sending attachment...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Sending attachment " + index + " of " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Server limit reached! Waiting " + seconds + " seconds...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Note: When you connect all your devices to the chat backup, they are automatically verified.";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$blur(_) {
      return "Blur:";
    },
    get$opacity(_) {
      return "Opacity:";
    },
    get$setWallpaper() {
      return "Set wallpaper";
    },
    get$noContactInformationProvided() {
      return "Server does not provide any valid contact information";
    },
    get$serverInformation() {
      return "Server information:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$website() {
      return "Website";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Bold text";
    },
    get$italicText() {
      return "Italic text";
    },
    get$strikeThrough() {
      return "Strikethrough";
    },
    get$pleaseFillOut() {
      return "Please fill out";
    },
    get$invalidUrl() {
      return "Invalid url";
    },
    get$addLink() {
      return "Add link";
    },
    get$unableToJoinChat() {
      return "Unable to join chat. Maybe the other party has already closed the conversation.";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.L10nFi, C.L10n);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nFi":{"L10n":[]}}'));
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_228", e: "endPart", h: h});
})($__dart_deferred_initializers__, "nioJCPSdh0yZaTuQ/8v/zLrTWvU=");
;
//# sourceMappingURL=main.dart.js_228.part.js.map
