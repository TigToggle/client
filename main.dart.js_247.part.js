// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.6.0.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_247", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    L10nHu$() {
      return new B.L10nHu(A.canonicalizedLocale("hu"));
    },
    L10nHu: function L10nHu(t0) {
      this.localeName = t0;
    }
  };
  A = holdersList[0];
  C = holdersList[51];
  B = hunkHelpers.updateHolder(holdersList[27], B);
  B.L10nHu.prototype = {
    get$alwaysUse24HourFormat() {
      return "true";
    },
    get$repeatPassword() {
      return "Jelsz\xf3 megism\xe9tl\xe9se";
    },
    get$notAnImage() {
      return "Nem k\xe9p f\xe1jl.";
    },
    get$remove(_) {
      return "Elt\xe1vol\xedt\xe1s";
    },
    get$importNow() {
      return "Import\xe1l\xe1s most";
    },
    get$importEmojis() {
      return "Emojik import\xe1l\xe1sa";
    },
    get$importFromZipFile() {
      return "Import\xe1l\xe1s zip f\xe1jlb\xf3l";
    },
    get$exportEmotePack() {
      return "Emojik export\xe1l\xe1sa zip-be";
    },
    get$replace(_) {
      return "Kicser\xe9l";
    },
    aboutHomeserver$1(homeserver) {
      return "About " + homeserver;
    },
    get$accept(_) {
      return "Elfogad\xe1s";
    },
    acceptedTheInvitation$1(username) {
      return "\ud83d\udc4d " + username + " elfogadta a megh\xedv\xe1st";
    },
    get$account() {
      return "Fi\xf3k";
    },
    activatedEndToEndEncryption$1(username) {
      return "\ud83d\udd10 " + username + " aktiv\xe1lta a v\xe9gpontok k\xf6z\xf6tti titkos\xedt\xe1st";
    },
    get$addEmail() {
      return "E-mail-c\xedm hozz\xe1ad\xe1sa";
    },
    get$confirmMatrixId() {
      return "A fi\xf3k t\xf6rl\xe9s\xe9hez adja meg a Matrix ID-t.";
    },
    supposedMxid$1(mxid) {
      return mxid + "-nek kell lennie";
    },
    get$addToSpace() {
      return "Hozz\xe1ad\xe1s t\xe9rhez";
    },
    get$admin() {
      return "Admin";
    },
    get$alias() {
      return "\xe1ln\xe9v";
    },
    get$all() {
      return "\xd6sszes";
    },
    get$commandHint_googly() {
      return "G\xfcl\xfcszemek k\xfcld\xe9se";
    },
    get$commandHint_cuddle() {
      return "\xd6sszeb\xfaj\xe1s k\xfcld\xe9se";
    },
    get$commandHint_hug() {
      return "\xd6lel\xe9s k\xfcld\xe9se";
    },
    googlyEyesContent$1(senderName) {
      return senderName + " g\xfcl\xfcszemeket k\xfcld";
    },
    cuddleContent$1(senderName) {
      return senderName + " hozz\xe1d b\xfajik";
    },
    hugContent$1(senderName) {
      return senderName + " meg\xf6lelt";
    },
    answeredTheCall$1(senderName) {
      return senderName + " felvette a h\xedv\xe1st";
    },
    get$anyoneCanJoin() {
      return "B\xe1rki csatlakozhat";
    },
    get$archive() {
      return "Arch\xedvum";
    },
    get$areGuestsAllowedToJoin() {
      return "Csatlakozhatnak-e vend\xe9gek";
    },
    get$areYouSure() {
      return "Biztos benne?";
    },
    get$areYouSureYouWantToLogout() {
      return "Biztosan kijelentkezik?";
    },
    get$askSSSSSign() {
      return "A m\xe1sik f\xe9l igazol\xe1s\xe1hoz meg kell adni a biztons\xe1gos t\xe1rol\xf3 jelmondat\xe1t vagy a vissza\xe1ll\xedt\xe1si kulcsot.";
    },
    askVerificationRequest$1(username) {
      return "Elfogadja " + username + " hiteles\xedt\xe9si k\xe9relm\xe9t?";
    },
    badServerLoginTypesException$3(serverVersions, supportedVersions, suportedVersions) {
      return "A kiszolg\xe1l\xf3 a k\xf6vetkez\u0151 bejelentkez\xe9seket t\xe1mogatja:\n" + serverVersions + "\nDe ez az alkalmaz\xe1st csak ezeket t\xe1mogatja:\n" + supportedVersions;
    },
    get$sendTypingNotifications() {
      return "G\xe9pel\xe9si inf\xf3 megjelen\xedt\xe9se";
    },
    get$swipeRightToLeftToReply() {
      return "H\xfazza balra a v\xe1laszol\xe1shoz";
    },
    badServerVersionsException$4(serverVersions, supportedVersions, serverVerions, suportedVersions) {
      return "A Matrix szerver ezeket a specifik\xe1ci\xf3 verzi\xf3kat t\xe1mogatja:\n" + serverVersions + "\nAzonban ez az app csak ezeket: " + supportedVersions;
    },
    countChatsAndCountParticipants$2(chats, participants) {
      return A.S(chats) + " cseveg\xe9sek \xe9s " + A.S(participants) + " r\xe9sztvev\u0151k";
    },
    get$noMoreChatsFound() {
      return "Nincs t\xf6bb cseveg\xe9s...";
    },
    get$noChatsFoundHere() {
      return "Itt m\xe9g nincs cseveg\xe9s. Kezdjen \xfajat valakivel a lentebbi gombbal. \u2935\ufe0f";
    },
    get$unread() {
      return "Olvasatlan";
    },
    get$space() {
      return "T\xe9r";
    },
    get$spaces() {
      return "Terek";
    },
    get$banFromChat() {
      return "Kitilt\xe1s cseveg\xe9sb\u0151l";
    },
    get$banned() {
      return "Kitiltva";
    },
    bannedUser$2(username, targetName) {
      return username + " kitiltotta: " + targetName;
    },
    get$blockDevice() {
      return "Eszk\xf6z blokkol\xe1sa";
    },
    get$blocked() {
      return "Blokkolva";
    },
    get$botMessages() {
      return "Bot \xfczenetek";
    },
    get$cancel(_) {
      return "M\xe9gse";
    },
    cantOpenUri$1(uri) {
      return "Nem siker\xfclt az URI megnyit\xe1sa: " + uri;
    },
    get$changeDeviceName() {
      return "Eszk\xf6zn\xe9v m\xf3dos\xedt\xe1sa";
    },
    changedTheChatAvatar$1(username) {
      return username + " m\xf3dos\xedtotta a cseveg\xe9si profilk\xe9p\xe9t";
    },
    changedTheChatDescriptionTo$2(username, description) {
      return username + " m\xf3dos\xedtotta a cseveg\xe9s le\xedr\xe1s\xe1t erre: '" + description + "'";
    },
    changedTheChatNameTo$2(username, chatname) {
      return username + " m\xf3dos\xedtotta a cseveg\xe9s nev\xe9t erre: '" + chatname + "'";
    },
    changedTheChatPermissions$1(username) {
      return username + " m\xf3dos\xedtotta a cseveg\xe9si enged\xe9lyeket";
    },
    changedTheDisplaynameTo$2(username, displayname) {
      return username + " m\xf3dos\xedtotta a megjelen\xedtett nev\xe9t erre: '" + displayname + "'";
    },
    changedTheGuestAccessRules$1(username) {
      return username + " m\xf3dos\xedtotta a vend\xe9gek hozz\xe1f\xe9r\xe9si szab\xe1lyokat";
    },
    changedTheGuestAccessRulesTo$2(username, rules) {
      return username + " m\xf3dos\xedtotta a vend\xe9gek hozz\xe1f\xe9r\xe9si szab\xe1lyait erre: " + rules;
    },
    changedTheHistoryVisibility$1(username) {
      return username + " m\xf3dos\xedtotta az el\u0151zm\xe9nyek l\xe1that\xf3s\xe1g\xe1t";
    },
    changedTheHistoryVisibilityTo$2(username, rules) {
      return username + " m\xf3dos\xedtotta az el\u0151zm\xe9nyek l\xe1that\xf3s\xe1g\xe1t erre: " + rules;
    },
    changedTheJoinRules$1(username) {
      return username + " m\xf3dos\xedtott a csatlakoz\xe1si szab\xe1lyokat";
    },
    changedTheJoinRulesTo$2(username, joinRules) {
      return username + " m\xf3dos\xedtotta a csatlakoz\xe1si szab\xe1lyokat erre: " + joinRules;
    },
    changedTheProfileAvatar$1(username) {
      return username + " m\xf3dos\xedtotta a profilk\xe9p\xe9t";
    },
    changedTheRoomAliases$1(username) {
      return username + " m\xf3dos\xedtotta a szoba \xe1lneveit";
    },
    changedTheRoomInvitationLink$1(username) {
      return username + " m\xf3dos\xedtotta a megh\xedv\xf3 hivatkoz\xe1st";
    },
    get$changePassword() {
      return "Jelsz\xf3 m\xf3dos\xedt\xe1sa";
    },
    get$changeTheme() {
      return "St\xedlus m\xf3dos\xedt\xe1sa";
    },
    get$changeTheNameOfTheGroup() {
      return "Csoport nev\xe9nek m\xf3dos\xedt\xe1sa";
    },
    get$changeYourAvatar() {
      return "Profilk\xe9p m\xf3dos\xedt\xe1sa";
    },
    get$channelCorruptedDecryptError() {
      return "A titkos\xedt\xe1s megs\xe9r\xfclt";
    },
    get$chat() {
      return "Cseveg\xe9s";
    },
    get$chatDetails() {
      return "Cseveg\xe9s r\xe9szletei";
    },
    get$chats() {
      return "Cseveg\xe9sek";
    },
    get$chooseAStrongPassword() {
      return "V\xe1lasszon egy er\u0151s jelsz\xf3t";
    },
    get$clearArchive() {
      return "Arch\xedvum t\xf6rl\xe9se";
    },
    get$close(_) {
      return "Bez\xe1r\xe1s";
    },
    get$commandHint_markasdm() {
      return "Szoba megjel\xf6l\xe9se mint k\xf6zvetlen cseveg\u0151 szoba az adott Matrix ID-n\xe9l";
    },
    get$commandHint_markasgroup() {
      return "Csoportnak jel\xf6l\xe9s";
    },
    get$commandHint_ban() {
      return "Felhaszn\xe1l\xf3 kitilt\xe1sa ebb\u0151l a szob\xe1b\xf3l";
    },
    get$commandHint_clearcache() {
      return "Gyors\xedt\xf3t\xe1r t\xf6rl\xe9se";
    },
    get$commandHint_create() {
      return "Egy \xfcres cseveg\u0151 csoport l\xe9trehoz\xe1sa\nA --no-encryption kapcsol\xf3val titkos\xedtatlan szoba hozhat\xf3 l\xe9tre";
    },
    get$commandHint_discardsession() {
      return "Munkamenet elvet\xe9se";
    },
    get$commandHint_dm() {
      return "K\xf6zvetlen cseveg\xe9s ind\xedt\xe1sa\nA --no-encryption kapcsol\xf3val titkos\xedtatlan besz\xe9lget\xe9st hozhat l\xe9tre";
    },
    get$commandHint_html() {
      return "HTML form\xe1zott \xfczenet k\xfcld\xe9se";
    },
    get$commandHint_invite() {
      return "Adott felhaszn\xe1l\xf3 megh\xedv\xe1sa ebbe a szob\xe1ba";
    },
    get$commandHint_join() {
      return "Csatlakoz\xe1s a megadott szob\xe1hoz";
    },
    get$commandHint_kick() {
      return "A megadott felhaszn\xe1l\xf3 kir\xfag\xe1sa a szob\xe1b\xf3l";
    },
    get$commandHint_leave() {
      return "Szoba elhagy\xe1sa";
    },
    get$commandHint_me() {
      return "Jellemezd magad";
    },
    get$commandHint_myroomavatar() {
      return "Az ebben a szob\xe1ban megjelen\xedtett profilk\xe9ped megv\xe1ltoztat\xe1sa (mxc URI haszn\xe1lat\xe1val)";
    },
    get$commandHint_myroomnick() {
      return "Az ebben a szob\xe1ban megjelen\xedtett neved megv\xe1ltoztat\xe1sa";
    },
    get$commandHint_op() {
      return "Az adott felhaszn\xe1l\xf3 hozz\xe1f\xe9r\xe9si szintj\xe9nek megad\xe1sa (alap\xe9rtelmezett: 50)";
    },
    get$commandHint_plain() {
      return "Form\xe1zatlan sz\xf6veg k\xfcld\xe9se";
    },
    get$commandHint_react() {
      return "V\xe1lasz k\xfcld\xe9se reakci\xf3k\xe9nt";
    },
    get$commandHint_send() {
      return "Sz\xf6veg k\xfcld\xe9se";
    },
    get$commandHint_unban() {
      return "Adott felhaszn\xe1l\xf3 kitilt\xe1s\xe1nak felold\xe1sa a szob\xe1hoz";
    },
    get$commandInvalid() {
      return "\xc9rv\xe9nytelen parancs";
    },
    commandMissing$1(command) {
      return command + " nem egy parancs.";
    },
    get$compareEmojiMatch() {
      return "Hasonl\xedtsa \xf6ssze az emojikat";
    },
    get$compareNumbersMatch() {
      return "K\xe9rem hasonl\xedtsa \xf6ssze a sz\xe1mokat";
    },
    get$configureChat() {
      return "Cseveg\xe9s konfigur\xe1l\xe1sa";
    },
    get$confirm(_) {
      return "Meger\u0151s\xedt\xe9s";
    },
    get$containsDisplayName() {
      return "Tartalmazza a megjelen\xedtett nevet";
    },
    get$containsUserName() {
      return "Tartalmazza a felhaszn\xe1l\xf3nevet";
    },
    get$contentHasBeenReported() {
      return "A tartalom jelentve lett a szerver \xfczemeltet\u0151inek";
    },
    get$copiedToClipboard() {
      return "V\xe1g\xf3lapra m\xe1solva";
    },
    get$copy(_) {
      return "M\xe1sol\xe1s";
    },
    couldNotDecryptMessage$1(error) {
      return "Nem siker\xfclt visszafejteni az \xfczenetet: " + error;
    },
    countParticipants$1(count) {
      return A.S(count) + " r\xe9sztvev\u0151";
    },
    createdTheChat$1(username) {
      return "\ud83d\udcac " + username + " cseveg\xe9st hozott l\xe9tre";
    },
    get$currentlyActive() {
      return "Jelenleg akt\xedv";
    },
    get$darkTheme() {
      return "S\xf6t\xe9t";
    },
    dateAndTimeOfDay$2(date, timeOfDay) {
      return date + ", " + timeOfDay;
    },
    get$deactivateAccountWarning() {
      return "Ez deaktiv\xe1lja a felhaszn\xe1l\xf3i fi\xf3kj\xe1t. Ez nem vonhat\xf3 vissza! Biztos benne?";
    },
    get$defaultPermissionLevel() {
      return "Alap\xe9rtelmezett hozz\xe1f\xe9r\xe9si szint \xfaj felhaszn\xe1l\xf3knak";
    },
    get$$delete(_) {
      return "T\xf6rl\xe9s";
    },
    get$deleteAccount() {
      return "Fi\xf3k t\xf6rl\xe9se";
    },
    get$deleteMessage() {
      return "\xdczenet t\xf6rl\xe9se";
    },
    get$devices() {
      return "Eszk\xf6z\xf6k";
    },
    get$directChats() {
      return "K\xf6zvetlen cseveg\xe9sek";
    },
    get$allRooms() {
      return "Minden csoport cseveg\xe9s";
    },
    get$displaynameHasBeenChanged() {
      return "Megjelen\xedt\xe9si n\xe9v megv\xe1ltozott";
    },
    get$downloadFile() {
      return "F\xe1jl let\xf6lt\xe9se";
    },
    get$edit() {
      return "Szerkeszt";
    },
    get$editBlockedServers() {
      return "Blokkolt szerverek szerkeszt\xe9se";
    },
    get$chatPermissions() {
      return "Cseveg\xe9s enged\xe9lyek";
    },
    get$editChatPermissions() {
      return "Edit chat permissions";
    },
    get$editDisplayname() {
      return "Megjelen\xedt\xe9si n\xe9v szerkeszt\xe9se";
    },
    get$editRoomAliases() {
      return "Szoba \xe1lnevek szerkeszt\xe9se";
    },
    get$editRoomAvatar() {
      return "Szoba profilk\xe9p\xe9nek szerkeszt\xe9se";
    },
    get$emoteExists() {
      return "A hangulatjel m\xe1r l\xe9tezik!";
    },
    get$emoteInvalid() {
      return "\xc9rv\xe9nytelen emoji r\xf6vidk\xf3d!";
    },
    get$emoteKeyboardNoRecents() {
      return "Nemr\xe9g haszn\xe1lt emojik fognak itt megjelenni...";
    },
    get$emotePacks() {
      return "Emoji csomagok a szob\xe1hoz";
    },
    get$globalChatId() {
      return "Glob\xe1lis cseveg\u0151 azonos\xedt\xf3";
    },
    get$accessAndVisibility() {
      return "Hozz\xe1f\xe9r\xe9s \xe9s l\xe1that\xf3s\xe1g";
    },
    get$customEmojisAndStickers() {
      return "Egyedi emotikonok \xe9s matric\xe1k";
    },
    get$emoteShortcode() {
      return "Emoji r\xf6vidk\xf3d";
    },
    get$emoteWarnNeedToPick() {
      return "Az emojihoz egy k\xe9pet \xe9s egy r\xf6vidk\xf3dot kell v\xe1lasztani!";
    },
    get$emptyChat() {
      return "\xdcres cseveg\xe9s";
    },
    get$enableEmotesGlobally() {
      return "Emoji csomag enged\xe9lyez\xe9se glob\xe1lisan";
    },
    get$enableEncryption() {
      return "Titkos\xedt\xe1s enged\xe9lyez\xe9se";
    },
    get$encrypted() {
      return "Titkos\xedtott";
    },
    get$encryptionNotEnabled() {
      return "Titkos\xedt\xe1s nincs enged\xe9lyezve";
    },
    endedTheCall$1(senderName) {
      return senderName + " befejezte a h\xedv\xe1st";
    },
    get$enterAnEmailAddress() {
      return "Adjon meg egy email c\xedmet";
    },
    errorObtainingLocation$1(error) {
      return "Hiba a tart\xf3zkod\xe1si hely meghat\xe1roz\xe1sa k\xf6zben: " + error;
    },
    get$extremeOffensive() {
      return "Rendk\xedv\xfcl s\xe9rt\u0151";
    },
    get$fontSize(_) {
      return "Bet\u0171m\xe9ret";
    },
    get$forward(_) {
      return "Tov\xe1bb\xedt\xe1s";
    },
    get$fromJoining() {
      return "Csatlakoz\xe1s \xf3ta";
    },
    get$fromTheInvitation() {
      return "Megh\xedv\xe1s \xf3ta";
    },
    get$goToTheNewRoom() {
      return "\xdaj szoba megnyit\xe1sa";
    },
    get$group() {
      return "Csoport";
    },
    get$chatDescription() {
      return "Cseveg\xe9s le\xedr\xe1s";
    },
    get$groups() {
      return "Csoportok";
    },
    groupWith$1(displayname) {
      return "Csoport " + displayname + "-al";
    },
    get$guestsAreForbidden() {
      return "Nem lehetnek vend\xe9gek";
    },
    get$guestsCanJoin() {
      return "Csatlakozhatnak vend\xe9gek";
    },
    hasWithdrawnTheInvitationFor$2(username, targetName) {
      return username + " visszavonta " + targetName + " megh\xedv\xe1s\xe1t";
    },
    get$help() {
      return "S\xfag\xf3";
    },
    get$hideRedactedMessages() {
      return "Szerkesztett \xfczenetek elrejt\xe9se";
    },
    get$hideRedactedMessagesBody() {
      return "Ha valaki szerkeszti az \xfczenet\xe9t, ez az \xfczenet nem jelenik meg a cseveg\xe9s sor\xe1n.";
    },
    get$hideInvalidOrUnknownMessageFormats() {
      return "\xc9rv\xe9nytelen vagy ismeretlen \xfczenetform\xe1tum elrejt\xe9se";
    },
    get$howOffensiveIsThisContent() {
      return "Mennyire s\xe9rt\u0151 ez a tartalom?";
    },
    get$block() {
      return "Blokkol\xe1s";
    },
    get$blockedUsers() {
      return "Blokkolt felhaszn\xe1l\xf3k";
    },
    get$blockListDescription() {
      return "Az \xd6nt zavar\xf3 felhaszn\xe1l\xf3kat blokkolhatja. A blokkolt list\xe1n tal\xe1lhat\xf3 felhaszn\xe1l\xf3kt\xf3l nem tud fogadni \xfczenetet vagy szoba megh\xedv\xe1st.";
    },
    get$blockUsername() {
      return "Felhaszn\xe1l\xf3n\xe9v mell\u0151z\xe9se";
    },
    get$iHaveClickedOnLink() {
      return "R\xe1kattintottam a linkre";
    },
    get$incorrectPassphraseOrKey() {
      return "Hib\xe1s jelmondat vagy vissza\xe1ll\xedt\xe1si kulcs";
    },
    get$inoffensive() {
      return "Nem s\xe9rt\u0151";
    },
    get$inviteContact() {
      return "Ismer\u0151s megh\xedv\xe1sa";
    },
    get$noChatDescriptionYet() {
      return "M\xe9g nincs cseveg\u0151 szoba le\xedr\xe1s.";
    },
    get$tryAgain() {
      return "Pr\xf3b\xe1lja \xfajra";
    },
    get$invited() {
      return "Megh\xedvott";
    },
    get$redactMessageDescription() {
      return "A t\xe1rsalg\xe1sban \xf6sszes r\xe9sztvev\u0151je sz\xe1m\xe1ra m\xf3dos\xedt\xe1sra ker\xfcl az \xfczenet. Ez nem visszavonhat\xf3.";
    },
    get$optionalRedactReason() {
      return "(Tetsz\u0151leges) A szerkeszt\xe9s oka...";
    },
    invitedUser$2(username, targetName) {
      return "\ud83d\udce9 " + username + " megh\xedvta " + targetName + "-t";
    },
    get$invitedUsersOnly() {
      return "Csak megh\xedvott felhaszn\xe1l\xf3k";
    },
    get$inviteForMe() {
      return "Megh\xedv\xe1s nekem";
    },
    inviteText$2(username, link) {
      return username + " megh\xedvott a FluffyChat-be.\n1. Keresse fel a fluffychat.im oldalt, \xe9s telep\xedtse az alkalmaz\xe1st \n2. Regisztr\xe1ljon vagy jelentkezzen be \n3. Nyissa meg a megh\xedv\xf3 linket: \n " + link;
    },
    get$isTyping() {
      return "g\xe9pel\u2026";
    },
    joinedTheChat$1(username) {
      return "\ud83d\udc4b " + username + " csatlakozott a cseveg\xe9shez";
    },
    get$joinRoom() {
      return "Csatlakoz\xe1s a szob\xe1hoz";
    },
    kicked$2(username, targetName) {
      return "\ud83d\udc5e " + username + " kir\xfagta " + targetName + "-t";
    },
    get$kickFromChat() {
      return "Kir\xfag\xe1s a cseveg\xe9sb\u0151l";
    },
    lastActiveAgo$1(localizedTimeShort) {
      return "Utolj\xe1ra akt\xedv: " + localizedTimeShort;
    },
    get$leave() {
      return "Elhagy\xe1s";
    },
    get$leftTheChat() {
      return "Elhagyta a cseveg\xe9st";
    },
    get$lightTheme() {
      return "Vil\xe1gos";
    },
    loadCountMoreParticipants$1(count) {
      return "Tov\xe1bbi " + count + " r\xe9sztvev\u0151 bet\xf6lt\xe9se";
    },
    get$dehydrate() {
      return "Munkamenet export\xe1l\xe1sa \xe9s az eszk\xf6z t\xf6rl\xe9se";
    },
    get$dehydrateWarning() {
      return "Ez nem visszavonhat\xf3. Bizonyosodjon meg r\xf3la, hogy biztons\xe1gos helyen t\xe1rolja a mentett f\xe1jlt.";
    },
    get$dehydrateTor() {
      return "TOR felhaszn\xe1l\xf3k: munkamenet export\xe1l\xe1sa";
    },
    get$dehydrateTorLong() {
      return "TOR felhaszn\xe1l\xf3knak aj\xe1nlott a munkamenet export\xe1l\xe1sa az ablak bez\xe1r\xe1sa el\u0151tt.";
    },
    get$loadingPleaseWait() {
      return "Bet\xf6lt\xe9s\u2026 K\xe9rem, v\xe1rjon.";
    },
    get$loadMore() {
      return "Tov\xe1bbiak bet\xf6lt\xe9se\u2026";
    },
    get$locationDisabledNotice() {
      return "A helymeghat\xe1roz\xe1s ki van kapcsolva. K\xe9rem, kapcsolja be, hogy meg tudja osztani helyzet\xe9t.";
    },
    get$locationPermissionDeniedNotice() {
      return "A helymeghat\xe1roz\xe1s nem enged\xe9lyezett az alkalmaz\xe1s sz\xe1m\xe1ra. K\xe9rem enged\xe9lyezze, hogy meg tudja osztani helyzet\xe9t.";
    },
    get$logout() {
      return "Kijelentkez\xe9s";
    },
    get$memberChanges() {
      return "Tags\xe1gi v\xe1ltoz\xe1sok";
    },
    get$mention() {
      return "Megeml\xedt\xe9s";
    },
    get$messages() {
      return "\xdczenetek";
    },
    get$messagesStyle() {
      return "\xdczenetek:";
    },
    get$moderator() {
      return "Moder\xe1tor";
    },
    get$newChat() {
      return "\xdaj cseveg\xe9s";
    },
    get$newVerificationRequest() {
      return "\xdaj hiteles\xedt\xe9si k\xe9relem!";
    },
    get$next(_) {
      return "K\xf6vetkez\u0151";
    },
    get$no() {
      return "Nem";
    },
    get$noConnectionToTheServer() {
      return "Nem el\xe9rhet\u0151 a szerver";
    },
    get$noEmotesFound() {
      return "Emojik nem el\xe9rhet\u0151ek. \ud83d\ude15";
    },
    get$shareInviteLink() {
      return "Megh\xedv\xf3 link megoszt\xe1sa";
    },
    get$noPasswordRecoveryDescription() {
      return "M\xe9g nem adott meg semmilyen m\xf3dot a jelszava vissza\xe1ll\xedt\xe1s\xe1ra.";
    },
    get$noPermission() {
      return "Nincs enged\xe9ly";
    },
    get$noRoomsFound() {
      return "Nem tal\xe1lhat\xf3ak szob\xe1k\u2026";
    },
    get$notifications() {
      return "\xc9rtes\xedt\xe9sek";
    },
    get$notificationsEnabledForThisAccount() {
      return "\xc9rtes\xedt\xe9sek bekapcsol\xe1sa ebben a fi\xf3kban";
    },
    get$obtainingLocation() {
      return "Tart\xf3zkod\xe1si hely lek\xe9r\xe9se\u2026";
    },
    get$offensive() {
      return "S\xe9rt\u0151";
    },
    get$ok() {
      return "Rendben";
    },
    get$oopsSomethingWentWrong() {
      return "Hopp\xe1, valami hiba l\xe9pett fel\u2026";
    },
    get$oneClientLoggedOut() {
      return "Az egyik kliense kijelentkezett";
    },
    get$addAccount() {
      return "Fi\xf3k hozz\xe1ad\xe1sa";
    },
    get$enableMultiAccounts() {
      return "(B\xc9TA) T\xf6bb fi\xf3k bekapcsol\xe1sa az eszk\xf6z\xf6n";
    },
    get$openInMaps() {
      return "Megnyit\xe1s t\xe9rk\xe9pen";
    },
    get$link() {
      return "Hivatkoz\xe1s";
    },
    get$serverRequiresEmail() {
      return "Ehhez a szerverhez sz\xfcks\xe9ges az email c\xedm\xe9nek visszaigazol\xe1sa.";
    },
    get$or() {
      return "Vagy";
    },
    get$participant() {
      return "R\xe9sztvev\u0151";
    },
    get$passphraseOrKey() {
      return "jelmondat vagy vissza\xe1ll\xedt\xe1si kulcs";
    },
    get$password(_) {
      return "Jelsz\xf3";
    },
    get$passwordHasBeenChanged() {
      return "A jelsz\xf3 m\xf3dos\xedt\xe1sra ker\xfclt";
    },
    get$overview() {
      return "\xc1ttekint\xe9s";
    },
    get$notifyMeFor() {
      return "\xc9rtes\xedtsen engem";
    },
    get$passwordRecoverySettings() {
      return "Jelsz\xf3-helyre\xe1ll\xedt\xe1si be\xe1ll\xedt\xe1sok";
    },
    get$passwordRecovery() {
      return "Jelsz\xf3 vissza\xe1ll\xedt\xe1s";
    },
    get$pickImage() {
      return "K\xe9p v\xe1laszt\xe1sa";
    },
    get$pin() {
      return "R\xf6gz\xedt\xe9s";
    },
    get$pleaseChoose() {
      return "K\xe9rj\xfck v\xe1lasszon";
    },
    get$pleaseClickOnLink() {
      return "K\xe9rem kattintson a linkre az emailben, \xe9s folytassa a m\u0171veletet.";
    },
    get$pleaseEnterYourPassword() {
      return "K\xe9rem adja meg jelszav\xe1t";
    },
    get$pleaseEnterYourPin() {
      return "\xcdrja be PIN k\xf3dj\xe1t";
    },
    get$pleaseEnterYourUsername() {
      return "Adja meg a felhaszn\xe1l\xf3nev\xe9t";
    },
    get$pleaseFollowInstructionsOnWeb() {
      return "K\xe9rem k\xf6vesse az instrukci\xf3kat az oldalon, \xe9s nyomjon a tov\xe1bb gombra.";
    },
    get$privacy() {
      return "Adatv\xe9delem";
    },
    get$reason(_) {
      return "Indok";
    },
    redactedBy$1(username) {
      return username + " \xe1ltal szerkesztve";
    },
    get$directChat() {
      return "K\xf6zvetlen cseveg\xe9s";
    },
    redactedByBecause$2(username, reason) {
      return username + ' \xe1ltal szerkesztve, mivel: "' + reason + '"';
    },
    redactedAnEvent$1(username) {
      return username + " visszavont egy esem\xe9nyt";
    },
    get$redactMessage() {
      return "\xdczenet visszavon\xe1sa";
    },
    get$reject() {
      return "Elutas\xedt";
    },
    rejectedTheInvitation$1(username) {
      return username + " elutas\xedtotta a megh\xedv\xe1st";
    },
    get$removeAllOtherDevices() {
      return "Minden m\xe1s eszk\xf6z elt\xe1vol\xedt\xe1sa";
    },
    get$unbanFromChat() {
      return "Cseveg\xe9s kitilt\xe1s felold\xe1sa";
    },
    get$removeYourAvatar() {
      return "Profilk\xe9p t\xf6rl\xe9se";
    },
    get$replaceRoomWithNewerVersion() {
      return "Szoba cser\xe9l\xe9se egy \xfajabb verzi\xf3ra";
    },
    get$reply(_) {
      return "V\xe1lasz";
    },
    get$reportMessage() {
      return "\xdczenet jelent\xe9se";
    },
    get$roomHasBeenUpgraded() {
      return "A szoba friss\xedtve lett";
    },
    get$roomVersion() {
      return "Szoba verzi\xf3";
    },
    get$search(_) {
      return "Keres\xe9s";
    },
    get$security() {
      return "Biztons\xe1g";
    },
    get$send(_) {
      return "K\xfcld\xe9s";
    },
    get$sendAsText() {
      return "Sz\xf6vegk\xe9nt k\xfcld\xe9s";
    },
    get$sendAudio() {
      return "Hang\xfczenet k\xfcld\xe9se";
    },
    get$sendFile() {
      return "F\xe1jl k\xfcld\xe9se";
    },
    get$sendImage() {
      return "K\xe9p k\xfcld\xe9se";
    },
    sendImages$1(count) {
      return "Send " + count + " image";
    },
    get$sendMessages() {
      return "\xdczenetek k\xfcld\xe9se";
    },
    get$sendVideo() {
      return "Vide\xf3 k\xfcld\xe9se";
    },
    sentAFile$1(username) {
      return "\ud83d\udcc1 " + username + " k\xfcld\xf6tt egy f\xe1jlt";
    },
    sentAnAudio$1(username) {
      return "\ud83c\udfa4 " + username + " hang\xfczenetet k\xfcld\xf6tt";
    },
    sentAPicture$1(username) {
      return "\ud83d\uddbc\ufe0f " + username + " k\xe9p\xfczenetet k\xfcld\xf6tt";
    },
    sentASticker$1(username) {
      return "\ud83d\ude0a " + username + " matric\xe1t k\xfcld\xf6tt";
    },
    sentAVideo$1(username) {
      return "\ud83c\udfa5 " + username + " vide\xf3t k\xfcld\xf6tt";
    },
    sentCallInformations$1(senderName) {
      return senderName + " h\xedv\xe1sinform\xe1ci\xf3t k\xfcld\xf6tt";
    },
    get$separateChatTypes() {
      return "Csoportok \xe9s k\xf6zvetlen \xfczenetek elk\xfcl\xf6n\xedt\xe9se";
    },
    get$setAsCanonicalAlias() {
      return "Be\xe1ll\xedt\xe1s mint alap\xe9rtelmezett \xe1ln\xe9v";
    },
    get$setChatDescription() {
      return "Cseveg\xe9s le\xedr\xe1s be\xe1ll\xedt\xe1sa";
    },
    get$setPermissionsLevel() {
      return "Jogok be\xe1ll\xedt\xe1sa";
    },
    get$settings() {
      return "Be\xe1ll\xedt\xe1sok";
    },
    get$share(_) {
      return "Megoszt\xe1s";
    },
    sharedTheLocation$1(username) {
      return username + " megosztotta a poz\xedci\xf3j\xe1t";
    },
    get$shareLocation() {
      return "Poz\xedci\xf3 megoszt\xe1sa";
    },
    get$presencesToggle() {
      return "M\xe1sok st\xe1tusz \xfczenet\xe9nek megjelen\xedt\xe9se";
    },
    get$skip(_) {
      return "Kihagy\xe1s";
    },
    get$sourceCode() {
      return "Forr\xe1sk\xf3d";
    },
    get$spaceName() {
      return "T\xe9r neve";
    },
    startedACall$1(senderName) {
      return senderName + " h\xedv\xe1st ind\xedtott";
    },
    get$status(_) {
      return "St\xe1tusz";
    },
    get$submit(_) {
      return "Bek\xfcld\xe9s";
    },
    get$synchronizingPleaseWait() {
      return "Szinkroniz\xe1l\xe1s...k\xe9rem v\xe1rjon.";
    },
    get$systemTheme() {
      return "Rendszer";
    },
    get$theyDontMatch() {
      return "Nem egyeznek";
    },
    get$theyMatch() {
      return "Egyeznek";
    },
    get$tooManyRequestsWarning() {
      return "T\xfal sok egyidej\u0171 k\xe9relem. K\xe9rem pr\xf3b\xe1lja meg k\xe9s\u0151bb!";
    },
    get$tryToSendAgain() {
      return "\xdajrak\xfcld\xe9s megpr\xf3b\xe1l\xe1sa";
    },
    unbannedUser$2(username, targetName) {
      return username + " feloldotta " + targetName + " kitilt\xe1s\xe1t";
    },
    get$unblockDevice() {
      return "Eszk\xf6z blokkol\xe1s\xe1nak megsz\xfcntet\xe9se";
    },
    get$unknownDevice() {
      return "Ismeretlen eszk\xf6z";
    },
    get$unknownEncryptionAlgorithm() {
      return "Ismeretlen titkos\xedt\xe1si algoritmus";
    },
    unknownEvent$1(type) {
      return "Ismeretlen esem\xe9ny: '" + type + "'";
    },
    get$unpin() {
      return "R\xf6gz\xedt\xe9s megsz\xfcntet\xe9se";
    },
    userAndOthersAreTyping$2(username, count) {
      return username + " \xe9s " + count + " m\xe1sik r\xe9sztvev\u0151 g\xe9pel\u2026";
    },
    userAndUserAreTyping$2(username, username2) {
      return username + " \xe9s " + username2 + " g\xe9pel\u2026";
    },
    userIsTyping$1(username) {
      return username + " g\xe9pel\u2026";
    },
    userLeftTheChat$1(username) {
      return "\ud83d\udeaa " + username + " elhagyta a cseveg\xe9st";
    },
    get$username(_) {
      return "Felhaszn\xe1l\xf3n\xe9v";
    },
    userSentUnknownEvent$2(username, type) {
      return username + " " + type + " esem\xe9nyt k\xfcld\xf6tt";
    },
    get$unverified() {
      return "Nem visszaigazolt";
    },
    get$verified() {
      return "Visszaigazolt";
    },
    get$verifyStart() {
      return "Hiteles\xedt\xe9s megkezd\xe9se";
    },
    get$verifySuccess() {
      return "Sikeres hiteles\xedt\xe9s!";
    },
    get$verifyTitle() {
      return "M\xe1sik fi\xf3k hiteles\xedt\xe9se";
    },
    get$visibilityOfTheChatHistory() {
      return "Cseveg\xe9si el\u0151zm\xe9ny l\xe1that\xf3s\xe1ga";
    },
    get$visibleForAllParticipants() {
      return "Minden r\xe9sztvev\u0151 sz\xe1m\xe1ra l\xe1that\xf3";
    },
    get$visibleForEveryone() {
      return "B\xe1rki sz\xe1m\xe1ra l\xe1that\xf3";
    },
    get$voiceMessage() {
      return "Hang\xfczenet";
    },
    get$waitingPartnerAcceptRequest() {
      return "V\xe1rakoz\xe1s a partnerre, hogy elfogadja a k\xe9r\xe9st\u2026";
    },
    get$waitingPartnerEmoji() {
      return "V\xe1rakoz\xe1s a partnerre, hogy elfogadja az emojit\u2026";
    },
    get$waitingPartnerNumbers() {
      return "V\xe1rakoz\xe1s a partnerre, hogy elfogadja a sz\xe1mokat\u2026";
    },
    get$warning() {
      return "Figyelmeztet\xe9s!";
    },
    get$weSentYouAnEmail() {
      return "K\xfcldt\xfcnk \xd6nnek egy emailt";
    },
    get$whoCanPerformWhichAction() {
      return "Ki milyen m\u0171veletet v\xe9gezhet";
    },
    get$whoIsAllowedToJoinThisGroup() {
      return "Ki csatlakozhat a csoporthoz";
    },
    get$whyDoYouWantToReportThis() {
      return "Mi\xe9rt k\xedv\xe1nja ezt bejelenteni?";
    },
    get$withTheseAddressesRecoveryDescription() {
      return "Ezekkel a c\xedmekkel vissza tudja \xe1ll\xedtani a jelszav\xe1t.";
    },
    get$writeAMessage() {
      return "\xcdrjon egy \xfczenetet\u2026";
    },
    writeAMessageFlag$2(l1flag, l2flag) {
      return "Write a message in " + l1flag + " or " + l2flag;
    },
    get$yes() {
      return "Igen";
    },
    get$you() {
      return "\xd6n";
    },
    get$youAreNoLongerParticipatingInThisChat() {
      return "Imm\xe1ron nem vesz r\xe9szt ebben a cseveg\xe9sben";
    },
    get$youHaveBeenBannedFromThisChat() {
      return "Kitiltott\xe1k ebb\u0151l a cseveg\xe9sb\u0151l";
    },
    get$yourPublicKey() {
      return "A publikus kulcsa";
    },
    get$messageInfo() {
      return "\xdczenet inform\xe1ci\xf3";
    },
    get$time(_) {
      return "Id\u0151";
    },
    get$sender() {
      return "K\xfcld\u0151";
    },
    get$openGallery() {
      return "Gal\xe9ria megnyit\xe1sa";
    },
    get$removeFromSpace() {
      return "Elt\xe1vol\xedt\xe1s a t\xe9rr\u0151l";
    },
    videoWithSize$1(size) {
      return "Vide\xf3 (" + size + ")";
    },
    get$markAsRead() {
      return "Olvasottk\xe9nt megjel\xf6l\xe9s";
    },
    get$reportUser() {
      return "Felhaszn\xe1l\xf3 jelent\xe9se";
    },
    reactedWith$2(sender, reaction) {
      return sender + " a k\xf6vetkez\u0151t reag\xe1lta: " + reaction;
    },
    get$pinMessage() {
      return "Kit\u0171z\xe9s a szob\xe1ban";
    },
    get$confirmEventUnpin() {
      return "Biztosan v\xe9gleg le akarja venni a kit\u0171z\xf6tt esem\xe9nyt?";
    },
    get$emojis() {
      return "Emojik";
    },
    get$youRejectedTheInvitation() {
      return "Visszautas\xedtotta a megh\xedv\xe1st";
    },
    get$youJoinedTheChat() {
      return "Becsatlakozott a cseveg\xe9sbe";
    },
    get$youAcceptedTheInvitation() {
      return "\ud83d\udc4d Elfogadta a megh\xedv\xe1st";
    },
    youBannedUser$1(user) {
      return "Letitotta " + user + "-t";
    },
    youHaveWithdrawnTheInvitationFor$1(user) {
      return "Visszavonta a megh\xedv\xe1st " + user + "-t\xf3l";
    },
    youInvitedBy$1(user) {
      return "\ud83d\udce9 Megh\xedv\xe1st kapott " + user + "-t\xf3l";
    },
    youInvitedUser$1(user) {
      return "\ud83d\udce9 Megh\xedvta " + user + "-t";
    },
    youKicked$1(user) {
      return "\ud83d\udc5e Kir\xfagta " + user + "-t";
    },
    youUnbannedUser$1(user) {
      return "Levette a letilt\xe1st " + user + "-r\u0151l";
    },
    hasKnocked$1(user) {
      return "\ud83d\udeaa " + user + " bekopogott";
    },
    get$usersMustKnock() {
      return "A felhaszn\xe1l\xf3knak be kell kopogniuk";
    },
    get$noOneCanJoin() {
      return "Senki sem csatlakozhat";
    },
    userWouldLikeToChangeTheChat$1(user) {
      return user + " szeretne csatlakozni a cseveg\xe9shez.";
    },
    get$knock() {
      return "Kopog\xe1s";
    },
    get$users() {
      return "Felhaszn\xe1l\xf3k";
    },
    countFiles$1(count) {
      return count + " f\xe1jl";
    },
    get$user() {
      return "Felhaszn\xe1l\xf3";
    },
    get$custom() {
      return "Egy\xe9ni";
    },
    get$noKeyForThisMessage() {
      return "Akkor fordulhat el\u0151, ha az \xfczenet az eszk\xf6zre val\xf3 bejelentkez\xe9s el\u0151tt ker\xfclt k\xfcld\xe9sre.\n\nAz is elk\xe9pzelhet\u0151, hogy a k\xfcld\u0151 blokkolta az eszk\xf6z\xe9t, vagy valami probl\xe9ma l\xe9pett fel az internet kapcsolatban.\n\nM\xe1s helyen l\xe1tja az \xfczenetet? Akkor \xe1t tudja m\xe1solni ide is! Menjen a Be\xe1ll\xedt\xe1sok > Eszk\xf6z\xf6k r\xe9szbe, \xe9s gy\u0151z\u0151dj\xf6n meg r\xf3la, hogy az eszk\xf6zei meger\u0151s\xedtett\xe9k egym\xe1st. Legk\xf6zelebb amikor ezt a szob\xe1t megnyitja, \xe9s mind a k\xe9t kliens az el\u0151t\xe9rben van, akkor szikroniz\xe1l\xf3dni fognak.\n\nNem akarja elvesz\xedteni a kulcsokat amikor kijelentkezik, vagy eszk\xf6zt cser\xe9l? Gy\u0151z\u0151dj\xf6n meg r\xf3la, hogy bekapcsolta a chat ment\xe9st a be\xe1ll\xedt\xe1sokban.";
    },
    get$newSpace() {
      return "\xdaj t\xe9r";
    },
    get$doNotShowAgain() {
      return "Ne mutassa \xfajra";
    },
    wasDirectChatDisplayName$1(oldDisplayName) {
      return "\xdcres cseveg\xe9s (kor\xe1bban " + oldDisplayName + ")";
    },
    get$reopenChat() {
      return "Cseveg\xe9s \xfajranyit\xe1sa";
    },
    get$noBackupWarning() {
      return "Figyelem! Ha nem kapcsolja be a cseveg\xe9s ment\xe9st, elvesz\xedti a hozz\xe1f\xe9r\xe9st a tikos\xedtott \xfczeneteihez. Er\u0151sen aj\xe1nlott a cseveg\xe9s ment\xe9s bekapcsol\xe1sa kijelentkez\xe9s el\u0151tt.";
    },
    get$noOtherDevicesFound() {
      return "Nem tal\xe1lhat\xf3 m\xe1s eszk\xf6z";
    },
    fileIsTooBigForServer$1(max) {
      return "A szerver sz\xe1m\xe1ra t\xfal nagy a f\xe1jl a k\xfcld\xe9shez.";
    },
    get$jumpToLastReadMessage() {
      return "Az utolj\xe1ra olvasott \xfczenethez ugr\xe1s";
    },
    get$readUpToHere() {
      return "Ezid\xe1ig elolvasva";
    },
    get$jump() {
      return "Ugr\xe1s";
    },
    get$openLinkInBrowser() {
      return "Hivatkoz\xe1s megnyit\xe1sa b\xf6ng\xe9sz\u0151ben";
    },
    get$profileNotFound() {
      return "A felhaszn\xe1l\xf3 nem tal\xe1lhat\xf3 a szerveren. Lehets\xe9ges, hogy csatlakoz\xe1si probl\xe9m\xe1k ad\xf3dtak, vagy nem l\xe9tezik a felhaszn\xe1l\xf3.";
    },
    get$setColorTheme() {
      return "Sz\xedn t\xe9ma be\xe1ll\xedt\xe1sa:";
    },
    get$invite() {
      return "Megh\xedv\xe1s";
    },
    get$invitePrivateChat() {
      return "\ud83d\udce8 Megh\xedv\xf3 cseveg\xe9shez";
    },
    get$invalidInput() {
      return "Hib\xe1s bevitel!";
    },
    wrongPinEntered$1(seconds) {
      return "Hib\xe1s pink\xf3d ker\xfclt be\xedr\xe1sra. Pr\xf3b\xe1lja \xfajra " + seconds + " mp m\xfalva...";
    },
    get$allCorrect() {
      return "That's how I would say it! Nice!";
    },
    get$newWayAllGood() {
      return "That's not how I would have said it but it looks good!";
    },
    get$othersAreBetter() {
      return "Hm, there might be a better way to say that.";
    },
    get$holdForInfo() {
      return "Click and hold for word info.";
    },
    get$greenFeedback() {
      return "That's what I would put!";
    },
    get$yellowFeedback() {
      return "Hm, you can try that and see if it works! To use this word, just click it again.";
    },
    get$redFeedback() {
      return "I don't think that's right...";
    },
    get$itInstructionsTitle() {
      return "I can help you translate!";
    },
    get$itInstructionsBody() {
      return "You can click and hold choices for word info.";
    },
    get$gaTooltip() {
      return "L2 use with grammar assistance";
    },
    get$taTooltip() {
      return "L2 use with translation assistance";
    },
    get$unTooltip() {
      return "Other";
    },
    get$interactiveTranslatorSliderHeader() {
      return "Interactive Translator";
    },
    get$interactiveGrammarSliderHeader() {
      return "Interactive Grammar Checker";
    },
    get$multiLingualSpace() {
      return "Multilingual Space";
    },
    get$waTooltip() {
      return "L2 use without assistance";
    },
    get$addStudents() {
      return "Invite users by link or code";
    },
    get$copyClassLink() {
      return "Copy invite link";
    },
    get$copyClassLinkDesc() {
      return "Clicking this link will take users to the app, direct them to make an account and they will automatically join this space.";
    },
    get$copyClassCode() {
      return "Copy invite code";
    },
    get$inviteStudentByUserName() {
      return "Invite users by username";
    },
    get$selectLanguageLevel() {
      return "Select language level";
    },
    get$noIdenticalLanguages() {
      return "Please choose different base and target languages";
    },
    get$iWantALanguagePartnerFrom() {
      return "Is from:";
    },
    get$worldWide() {
      return "Worldwide";
    },
    get$noResults() {
      return "No results! Try broadening your search.";
    },
    get$iWantAConversationPartner() {
      return "I want a conversation partner who";
    },
    get$iWantALanguagePartnerWhoSpeaks() {
      return "Speaks:";
    },
    get$iWantALanguagePartnerWhoIsLearning() {
      return "Is learning:";
    },
    get$joinWithClassCode() {
      return "Join space";
    },
    get$joinWithClassCodeHint() {
      return "Enter invite code";
    },
    get$unableToFindClass() {
      return "There's no space with that code. Please try again.";
    },
    get$languageLevelPreA1() {
      return "True Beginner (Pre A1)";
    },
    get$languageLevelA1() {
      return "Beginner (A1)";
    },
    get$languageLevelA2() {
      return "Elementary (A2)";
    },
    get$languageLevelB1() {
      return "Intermediate (B1)";
    },
    get$languageLevelB2() {
      return "Upper Intermediate (B2)";
    },
    get$languageLevelC1() {
      return "Advanced (C1)";
    },
    get$languageLevelC2() {
      return "Mastery (C2)";
    },
    get$changeTheNameOfTheClass() {
      return "Change the name";
    },
    get$changeTheNameOfTheChat() {
      return "Change the name of the chat";
    },
    get$sorryNoResults() {
      return "Sorry, no results.";
    },
    get$ignoreInThisText() {
      return "Ignore";
    },
    get$helpMeTranslate() {
      return "Yes!";
    },
    get$needsItShortMessage() {
      return "Out of target";
    },
    needsItMessage$1(targetLanguage) {
      return "Wait, that's not " + targetLanguage + "! Do you need help translating?";
    },
    get$tokenTranslationTitle() {
      return "A word is in your base language.";
    },
    get$spanTranslationDesc() {
      return "See possible translations below.";
    },
    get$spanTranslationTitle() {
      return "Some words are in your base language.";
    },
    get$l1SpanAndGrammarTitle() {
      return "Outside target language";
    },
    get$l1SpanAndGrammarDesc() {
      return "This could in your base language or it could be a grammar error.";
    },
    get$countryInformation() {
      return "My country";
    },
    get$myLanguages() {
      return "My base and target languages";
    },
    get$targetLanguage() {
      return "Target Language";
    },
    get$sourceLanguage() {
      return "Base language";
    },
    get$updateLanguage() {
      return "My languages";
    },
    get$whatLanguageYouWantToLearn() {
      return "What language do you want to learn?";
    },
    get$whatIsYourBaseLanguage() {
      return "What is your base language?";
    },
    get$saveChanges() {
      return "Save changes";
    },
    get$publicProfileTitle() {
      return "Allow my profile to be found in search";
    },
    get$publicProfileDesc() {
      return "By enabling this option, I confirm that I am of legal age in my country of residence";
    },
    get$errorDisableIT() {
      return "Translation assistance is turned off.";
    },
    get$errorDisableIGC() {
      return "Grammar assistance is turned off.";
    },
    get$errorDisableLanguageAssistance() {
      return "Translation assistance and grammar assistance are turned off.";
    },
    get$errorDisableITUserDesc() {
      return "Click here to update translation assistance settings";
    },
    get$errorDisableIGCUserDesc() {
      return "Click here to update grammar assistance settings";
    },
    get$errorDisableLanguageAssistanceUserDesc() {
      return "Click here to update translation assistance and grammar assistance settings";
    },
    get$errorDisableITClassDesc() {
      return "Translation assistance is turned off for the space that this chat is in.";
    },
    get$errorDisableIGCClassDesc() {
      return "Grammar assistance is turned off for the space that this chat is in.";
    },
    get$error405Title() {
      return "Languages not set";
    },
    get$error405Desc() {
      return "Please set your languages in Main Menu > Learning Settings.";
    },
    get$iAgreeToThe() {
      return "I agree to the ";
    },
    get$termsAndConditions() {
      return "Terms and Conditions";
    },
    get$error502504Title() {
      return "Wow, there are a lot of students online!";
    },
    get$error502504Desc() {
      return "Translation and grammar tools may be slow or unavailable while the Pangea bots catch up.";
    },
    get$error404Title() {
      return "Translation error!";
    },
    get$error404Desc() {
      return "Pangea Bot isn't sure how to translate that...";
    },
    get$errorPleaseRefresh() {
      return "We're looking into it! Please reload and try again.";
    },
    get$toggleToolSettingsDescription() {
      return "Here you can toggle your individual language tool settings.";
    },
    get$connectedToStaging() {
      return "Connected to Staging";
    },
    get$learningSettings() {
      return "Learning settings";
    },
    get$inviteStudentByUserNameDesc() {
      return "If your student already has an account, you can search for them.";
    },
    get$almostPerfect() {
      return "That seems right! Here's what I would have said.";
    },
    get$prettyGood() {
      return "Pretty good! Here's what I would have said.";
    },
    get$letMeThink() {
      return "Hmm, let's see how you did!";
    },
    get$clickMessageTitle() {
      return "Need help?";
    },
    get$clickMessageBody() {
      return "Click a message for language tools like translation, play back and more!";
    },
    get$allDone() {
      return "All done!";
    },
    get$vocab() {
      return "Vocabulary";
    },
    get$subscribe(_) {
      return "Subscribe";
    },
    get$getAccess() {
      return "Subscribe now!";
    },
    get$subscriptionDesc() {
      return "Messaging is free! Subscribe to unlock interactive translation, grammar checking and learning analytics.";
    },
    get$subscriptionManagement() {
      return "Subscription Management";
    },
    get$currentSubscription() {
      return "Current Subscription";
    },
    get$cancelSubscription() {
      return "Cancel your subscription";
    },
    get$selectYourPlan() {
      return "Select Your Plan";
    },
    get$subsciptionPlatformTooltip() {
      return "Please login to your original device to manage your subscription plan";
    },
    get$subscriptionManagementUnavailable() {
      return "Subscription management not available";
    },
    get$paymentMethod() {
      return "Payment Method";
    },
    get$paymentHistory() {
      return "Payment History";
    },
    get$emptyChatDownloadWarning() {
      return "Cannot download empty chat";
    },
    get$toggleImmersionMode() {
      return "Immersion Mode";
    },
    get$toggleImmersionModeDesc() {
      return "When enabled, all messages are displayed in your target language. This setting is most useful in language exchanges.";
    },
    get$itToggleDescription() {
      return "This language learning tool will identify words in your base language and help you translate them to your target language. Though rare, the AI can make translation errors.";
    },
    get$igcToggleDescription() {
      return "This language learning tool will identify common spelling, grammar and punctuation errors in your message and suggest corrections. Though rare, the AI can make correction errors.";
    },
    get$alreadyInClass() {
      return "You are already in this space.";
    },
    get$originalMessage() {
      return "Original Message";
    },
    get$sentMessage() {
      return "Sent Message";
    },
    get$useType() {
      return "Use Type";
    },
    get$notAvailable() {
      return "Not Available";
    },
    get$taAndGaTooltip() {
      return "L2 use with translation assistance and grammar assistance";
    },
    get$definitionsToolName() {
      return "Word Definitions";
    },
    get$definitionsToolDescription() {
      return "When enabled, words underlined in blue can be clicked for definitions. Click messages to access definitions.";
    },
    get$welcomeBack() {
      return "Welcome back! If you were part of the 2023-2024 pilot, please contact us for your special pilot subscription. If you are a teacher who has (or whose institution has) purchased licenses for your class, contact us for your teacher subscription.";
    },
    get$downloadTxtFile() {
      return "Download Text File";
    },
    get$downloadCSVFile() {
      return "Download CSV File";
    },
    get$promotionalSubscriptionDesc() {
      return "You currently have a lifetime promotional subscription. Message support@pangea.chat for help changing your subscription.";
    },
    originalSubscriptionPlatform$1(purchasePlatform) {
      return "Subscription purchased through " + purchasePlatform;
    },
    get$oneWeekTrial() {
      return "One Week Trial";
    },
    get$downloadXLSXFile() {
      return "Download Excel File";
    },
    get$abDisplayName() {
      return "Abkhaz";
    },
    get$aaDisplayName() {
      return "Afar";
    },
    get$afDisplayName() {
      return "Afrikaans";
    },
    get$akDisplayName() {
      return "Akan";
    },
    get$sqDisplayName() {
      return "Albanian";
    },
    get$amDisplayName() {
      return "Amharic";
    },
    get$arDisplayName() {
      return "Arabic";
    },
    get$anDisplayName() {
      return "Aragonese";
    },
    get$hyDisplayName() {
      return "Armenian";
    },
    get$asDisplayName() {
      return "Assamese";
    },
    get$avDisplayName() {
      return "Avaric";
    },
    get$aeDisplayName() {
      return "Avestan";
    },
    get$ayDisplayName() {
      return "Aymara";
    },
    get$azDisplayName() {
      return "Azerbaijani";
    },
    get$bmDisplayName() {
      return "Bambara";
    },
    get$baDisplayName() {
      return "Bashkir";
    },
    get$euDisplayName() {
      return "Basque";
    },
    get$beDisplayName() {
      return "Belarusian";
    },
    get$bnDisplayName() {
      return "Bengali";
    },
    get$bhDisplayName() {
      return "Bihari";
    },
    get$biDisplayName() {
      return "Bislama";
    },
    get$bsDisplayName() {
      return "Bosnian";
    },
    get$brDisplayName() {
      return "Breton";
    },
    get$bgDisplayName() {
      return "Bulgarian";
    },
    get$myDisplayName() {
      return "Burmese";
    },
    get$caDisplayName() {
      return "Catalan, Valencian";
    },
    get$chDisplayName() {
      return "Chamorro";
    },
    get$ceDisplayName() {
      return "Chechen";
    },
    get$nyDisplayName() {
      return "Chichewa, Chewa, Nyanja";
    },
    get$zhDisplayName() {
      return "Chinese";
    },
    get$cvDisplayName() {
      return "Chuvash";
    },
    get$kwDisplayName() {
      return "Cornish";
    },
    get$coDisplayName() {
      return "Corsican";
    },
    get$crDisplayName() {
      return "Cree";
    },
    get$hrDisplayName() {
      return "Croatian";
    },
    get$csDisplayName() {
      return "Czech";
    },
    get$daDisplayName() {
      return "Danish";
    },
    get$dvDisplayName() {
      return "Divehi; Dhivehi; Maldivian;";
    },
    get$nlDisplayName() {
      return "Dutch";
    },
    get$enDisplayName() {
      return "English";
    },
    get$eoDisplayName() {
      return "Esperanto";
    },
    get$etDisplayName() {
      return "Estonian";
    },
    get$eeDisplayName() {
      return "Ewe";
    },
    get$foDisplayName() {
      return "Faroese";
    },
    get$fjDisplayName() {
      return "Fijian";
    },
    get$fiDisplayName() {
      return "Finnish";
    },
    get$frDisplayName() {
      return "French";
    },
    get$ffDisplayName() {
      return "Fula; Fulah; Pulaar; Pular";
    },
    get$glDisplayName() {
      return "Galician";
    },
    get$kaDisplayName() {
      return "Georgian";
    },
    get$deDisplayName() {
      return "German";
    },
    get$elDisplayName() {
      return "Greek, Modern";
    },
    get$gnDisplayName() {
      return "Guaran\xed";
    },
    get$guDisplayName() {
      return "Gujarati";
    },
    get$htDisplayName() {
      return "Haitian, Haitian Creole";
    },
    get$haDisplayName() {
      return "Hausa";
    },
    get$heDisplayName() {
      return "Hebrew (modern)";
    },
    get$hzDisplayName() {
      return "Herero";
    },
    get$hiDisplayName() {
      return "Hindi";
    },
    get$hoDisplayName() {
      return "Hiri Motu";
    },
    get$huDisplayName() {
      return "Hungarian";
    },
    get$iaDisplayName() {
      return "Interlingua";
    },
    get$idDisplayName() {
      return "Indonesian";
    },
    get$ieDisplayName() {
      return "Interlingue";
    },
    get$gaDisplayName() {
      return "Irish";
    },
    get$igDisplayName() {
      return "Igbo";
    },
    get$ikDisplayName() {
      return "Inupiaq";
    },
    get$ioDisplayName() {
      return "Ido";
    },
    get$isDisplayName() {
      return "Icelandic";
    },
    get$itDisplayName() {
      return "Italian";
    },
    get$iuDisplayName() {
      return "Inuktitut";
    },
    get$jaDisplayName() {
      return "Japanese";
    },
    get$jvDisplayName() {
      return "Javanese";
    },
    get$klDisplayName() {
      return "Kalaallisut, Greenlandic";
    },
    get$knDisplayName() {
      return "Kannada";
    },
    get$krDisplayName() {
      return "Kanuri";
    },
    get$ksDisplayName() {
      return "Kashmiri";
    },
    get$kkDisplayName() {
      return "Kazakh";
    },
    get$kmDisplayName() {
      return "Khmer";
    },
    get$kiDisplayName() {
      return "Kikuyu, Gikuyu";
    },
    get$rwDisplayName() {
      return "Kinyarwanda";
    },
    get$kyDisplayName() {
      return "Kirghiz, Kyrgyz";
    },
    get$kvDisplayName() {
      return "Komi";
    },
    get$kgDisplayName() {
      return "Kongo";
    },
    get$koDisplayName() {
      return "Korean";
    },
    get$kuDisplayName() {
      return "Kurdish";
    },
    get$kjDisplayName() {
      return "Kwanyama, Kuanyama";
    },
    get$laDisplayName() {
      return "Latin";
    },
    get$lbDisplayName() {
      return "Luxembourgish, Letzeburgesch";
    },
    get$lgDisplayName() {
      return "Luganda";
    },
    get$liDisplayName() {
      return "Limburgish, Limburgan, Limburger";
    },
    get$lnDisplayName() {
      return "Lingala";
    },
    get$loDisplayName() {
      return "Lao";
    },
    get$ltDisplayName() {
      return "Lithuanian";
    },
    get$luDisplayName() {
      return "Luba-Katanga";
    },
    get$lvDisplayName() {
      return "Latvian";
    },
    get$gvDisplayName() {
      return "Manx";
    },
    get$mkDisplayName() {
      return "Macedonian";
    },
    get$mgDisplayName() {
      return "Malagasy";
    },
    get$msDisplayName() {
      return "Malay";
    },
    get$mlDisplayName() {
      return "Malayalam";
    },
    get$mtDisplayName() {
      return "Maltese";
    },
    get$miDisplayName() {
      return "M\u0101ori";
    },
    get$mrDisplayName() {
      return "Marathi (Mar\u0101\u1e6dh\u012b)";
    },
    get$mhDisplayName() {
      return "Marshallese";
    },
    get$mnDisplayName() {
      return "Mongolian";
    },
    get$naDisplayName() {
      return "Nauru";
    },
    get$nvDisplayName() {
      return "Navajo, Navaho";
    },
    get$nbDisplayName() {
      return "Norwegian Bokm\xe5l";
    },
    get$ndDisplayName() {
      return "North Ndebele";
    },
    get$neDisplayName() {
      return "Nepali";
    },
    get$ngDisplayName() {
      return "Ndonga";
    },
    get$nnDisplayName() {
      return "Norwegian Nynorsk";
    },
    get$noDisplayName() {
      return "Norwegian";
    },
    get$iiDisplayName() {
      return "Nuosu";
    },
    get$nrDisplayName() {
      return "South Ndebele";
    },
    get$ocDisplayName() {
      return "Occitan";
    },
    get$ojDisplayName() {
      return "Ojibwe, Ojibwa";
    },
    get$cuDisplayName() {
      return "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic";
    },
    get$omDisplayName() {
      return "Oromo";
    },
    get$orDisplayName() {
      return "Oriya";
    },
    get$osDisplayName() {
      return "Ossetian, Ossetic";
    },
    get$paDisplayName() {
      return "Panjabi, Punjabi";
    },
    get$piDisplayName() {
      return "P\u0101li";
    },
    get$faDisplayName() {
      return "Persian";
    },
    get$plDisplayName() {
      return "Polish";
    },
    get$psDisplayName() {
      return "Pashto, Pushto";
    },
    get$ptDisplayName() {
      return "Portuguese";
    },
    get$quDisplayName() {
      return "Quechua";
    },
    get$rmDisplayName() {
      return "Romansh";
    },
    get$rnDisplayName() {
      return "Kirundi";
    },
    get$roDisplayName() {
      return "Romanian, Moldavian, Moldovan";
    },
    get$ruDisplayName() {
      return "Russian";
    },
    get$saDisplayName() {
      return "Sanskrit (Sa\u1e41sk\u1e5bta)";
    },
    get$scDisplayName() {
      return "Sardinian";
    },
    get$sdDisplayName() {
      return "Sindhi";
    },
    get$seDisplayName() {
      return "Northern Sami";
    },
    get$smDisplayName() {
      return "Samoan";
    },
    get$sgDisplayName() {
      return "Sango";
    },
    get$srDisplayName() {
      return "Serbian";
    },
    get$gdDisplayName() {
      return "Scottish Gaelic, Gaelic";
    },
    get$snDisplayName() {
      return "Shona";
    },
    get$siDisplayName() {
      return "Sinhala, Sinhalese";
    },
    get$skDisplayName() {
      return "Slovak";
    },
    get$slDisplayName() {
      return "Slovene";
    },
    get$soDisplayName() {
      return "Somali";
    },
    get$stDisplayName() {
      return "Southern Sotho";
    },
    get$esDisplayName() {
      return "Spanish";
    },
    get$suDisplayName() {
      return "Sundanese";
    },
    get$swDisplayName() {
      return "Swahili";
    },
    get$ssDisplayName() {
      return "Swati";
    },
    get$svDisplayName() {
      return "Swedish";
    },
    get$taDisplayName() {
      return "Tamil";
    },
    get$teDisplayName() {
      return "Telugu";
    },
    get$tgDisplayName() {
      return "Tajik";
    },
    get$thDisplayName() {
      return "Thai";
    },
    get$tiDisplayName() {
      return "Tigrinya";
    },
    get$boDisplayName() {
      return "Tibetan Standard, Tibetan, Central";
    },
    get$tkDisplayName() {
      return "Turkmen";
    },
    get$tlDisplayName() {
      return "Tagalog";
    },
    get$tnDisplayName() {
      return "Tswana";
    },
    get$toDisplayName() {
      return "Tonga (Tonga Islands)";
    },
    get$trDisplayName() {
      return "Turkish";
    },
    get$tsDisplayName() {
      return "Tsonga";
    },
    get$ttDisplayName() {
      return "Tatar";
    },
    get$twDisplayName() {
      return "Twi";
    },
    get$tyDisplayName() {
      return "Tahitian";
    },
    get$ugDisplayName() {
      return "Uighur, Uyghur";
    },
    get$ukDisplayName() {
      return "Ukrainian";
    },
    get$urDisplayName() {
      return "Urdu";
    },
    get$uzDisplayName() {
      return "Uzbek";
    },
    get$veDisplayName() {
      return "Venda";
    },
    get$viDisplayName() {
      return "Vietnamese";
    },
    get$voDisplayName() {
      return "Volap\xfck";
    },
    get$waDisplayName() {
      return "Walloon";
    },
    get$cyDisplayName() {
      return "Welsh";
    },
    get$woDisplayName() {
      return "Wolof";
    },
    get$fyDisplayName() {
      return "Western Frisian";
    },
    get$xhDisplayName() {
      return "Xhosa";
    },
    get$yiDisplayName() {
      return "Yiddish";
    },
    get$yoDisplayName() {
      return "Yoruba";
    },
    get$zaDisplayName() {
      return "Zhuang, Chuang";
    },
    get$unkDisplayName() {
      return "Unknown";
    },
    get$zuDisplayName() {
      return "Zulu";
    },
    get$hawDisplayName() {
      return "Hawaiian";
    },
    get$hmnDisplayName() {
      return "Hmong";
    },
    get$multiDisplayName() {
      return "Multi";
    },
    get$cebDisplayName() {
      return "Cebuano";
    },
    get$dzDisplayName() {
      return "Dzongkha";
    },
    get$iwDisplayName() {
      return "Hebrew";
    },
    get$jwDisplayName() {
      return "Javanese";
    },
    get$moDisplayName() {
      return "Moldavian";
    },
    get$shDisplayName() {
      return "Serbo-Croatian";
    },
    get$wwCountryDisplayName() {
      return "World Wide";
    },
    get$afCountryDisplayName() {
      return "Afghanistan";
    },
    get$axCountryDisplayName() {
      return "Aland Islands";
    },
    get$alCountryDisplayName() {
      return "Albania";
    },
    get$dzCountryDisplayName() {
      return "Algeria";
    },
    get$asCountryDisplayName() {
      return "American Samoa";
    },
    get$adCountryDisplayName() {
      return "Andorra";
    },
    get$aoCountryDisplayName() {
      return "Angola";
    },
    get$aiCountryDisplayName() {
      return "Anguilla";
    },
    get$agCountryDisplayName() {
      return "Antigua and Barbuda";
    },
    get$arCountryDisplayName() {
      return "Argentina";
    },
    get$amCountryDisplayName() {
      return "Armenia";
    },
    get$awCountryDisplayName() {
      return "Aruba";
    },
    get$acCountryDisplayName() {
      return "Ascension Island";
    },
    get$auCountryDisplayName() {
      return "Australia";
    },
    get$atCountryDisplayName() {
      return "Austria";
    },
    get$azCountryDisplayName() {
      return "Azerbaijan";
    },
    get$bsCountryDisplayName() {
      return "Bahamas";
    },
    get$bhCountryDisplayName() {
      return "Bahrain";
    },
    get$bdCountryDisplayName() {
      return "Bangladesh";
    },
    get$bbCountryDisplayName() {
      return "Barbados";
    },
    get$byCountryDisplayName() {
      return "Belarus";
    },
    get$beCountryDisplayName() {
      return "Belgium";
    },
    get$bzCountryDisplayName() {
      return "Belize";
    },
    get$bjCountryDisplayName() {
      return "Benin";
    },
    get$bmCountryDisplayName() {
      return "Bermuda";
    },
    get$btCountryDisplayName() {
      return "Bhutan";
    },
    get$boCountryDisplayName() {
      return "Bolivia";
    },
    get$baCountryDisplayName() {
      return "Bosnia and Herzegovina";
    },
    get$bwCountryDisplayName() {
      return "Botswana";
    },
    get$brCountryDisplayName() {
      return "Brazil";
    },
    get$ioCountryDisplayName() {
      return "British Indian Ocean Territory";
    },
    get$vgCountryDisplayName() {
      return "British Virgin Islands";
    },
    get$bnCountryDisplayName() {
      return "Brunei";
    },
    get$bgCountryDisplayName() {
      return "Bulgaria";
    },
    get$bfCountryDisplayName() {
      return "Burkina Faso";
    },
    get$biCountryDisplayName() {
      return "Burundi";
    },
    get$khCountryDisplayName() {
      return "Cambodia";
    },
    get$cmCountryDisplayName() {
      return "Cameroon";
    },
    get$caCountryDisplayName() {
      return "Canada";
    },
    get$cvCountryDisplayName() {
      return "Cape Verde";
    },
    get$bqCountryDisplayName() {
      return "Caribbean Netherlands";
    },
    get$kyCountryDisplayName() {
      return "Cayman Islands";
    },
    get$cfCountryDisplayName() {
      return "Central African Republic";
    },
    get$tdCountryDisplayName() {
      return "Chad";
    },
    get$clCountryDisplayName() {
      return "Chile";
    },
    get$cnCountryDisplayName() {
      return "China";
    },
    get$cxCountryDisplayName() {
      return "Christmas Island";
    },
    get$ccCountryDisplayName() {
      return "Cocos [Keeling] Islands";
    },
    get$coCountryDisplayName() {
      return "Colombia";
    },
    get$kmCountryDisplayName() {
      return "Comoros";
    },
    get$cdCountryDisplayName() {
      return "Democratic Republic Congo";
    },
    get$cgCountryDisplayName() {
      return "Republic of Congo";
    },
    get$ckCountryDisplayName() {
      return "Cook Islands";
    },
    get$crCountryDisplayName() {
      return "Costa Rica";
    },
    get$ciCountryDisplayName() {
      return "C\xf4te d'Ivoire";
    },
    get$hrCountryDisplayName() {
      return "Croatia";
    },
    get$cuCountryDisplayName() {
      return "Cuba";
    },
    get$cwCountryDisplayName() {
      return "Cura\xe7ao";
    },
    get$cyCountryDisplayName() {
      return "Cyprus";
    },
    get$czCountryDisplayName() {
      return "Czech Republic";
    },
    get$dkCountryDisplayName() {
      return "Denmark";
    },
    get$djCountryDisplayName() {
      return "Djibouti";
    },
    get$dmCountryDisplayName() {
      return "Dominica";
    },
    get$doCountryDisplayName() {
      return "Dominican Republic";
    },
    get$tlCountryDisplayName() {
      return "East Timor";
    },
    get$ecCountryDisplayName() {
      return "Ecuador";
    },
    get$egCountryDisplayName() {
      return "Egypt";
    },
    get$svCountryDisplayName() {
      return "El Salvador";
    },
    get$gqCountryDisplayName() {
      return "Equatorial Guinea";
    },
    get$erCountryDisplayName() {
      return "Eritrea";
    },
    get$eeCountryDisplayName() {
      return "Estonia";
    },
    get$szCountryDisplayName() {
      return "Eswatini";
    },
    get$etCountryDisplayName() {
      return "Ethiopia";
    },
    get$fkCountryDisplayName() {
      return "Falkland Islands";
    },
    get$foCountryDisplayName() {
      return "Faroe Islands";
    },
    get$fjCountryDisplayName() {
      return "Fiji";
    },
    get$fiCountryDisplayName() {
      return "Finland";
    },
    get$frCountryDisplayName() {
      return "France";
    },
    get$gfCountryDisplayName() {
      return "French Guiana";
    },
    get$pfCountryDisplayName() {
      return "French Polynesia";
    },
    get$gaCountryDisplayName() {
      return "Gabon";
    },
    get$gmCountryDisplayName() {
      return "Gambia";
    },
    get$geCountryDisplayName() {
      return "Georgia";
    },
    get$deCountryDisplayName() {
      return "Germany";
    },
    get$ghCountryDisplayName() {
      return "Ghana";
    },
    get$giCountryDisplayName() {
      return "Gibraltar";
    },
    get$grCountryDisplayName() {
      return "Greece";
    },
    get$glCountryDisplayName() {
      return "Greenland";
    },
    get$gdCountryDisplayName() {
      return "Grenada";
    },
    get$gpCountryDisplayName() {
      return "Guadeloupe";
    },
    get$guCountryDisplayName() {
      return "Guam";
    },
    get$gtCountryDisplayName() {
      return "Guatemala";
    },
    get$ggCountryDisplayName() {
      return "Guernsey";
    },
    get$gnCountryDisplayName() {
      return "Guinea Conakry";
    },
    get$gwCountryDisplayName() {
      return "Guinea-Bissau";
    },
    get$gyCountryDisplayName() {
      return "Guyana";
    },
    get$htCountryDisplayName() {
      return "Haiti";
    },
    get$hmCountryDisplayName() {
      return "Heard Island and McDonald Islands";
    },
    get$hnCountryDisplayName() {
      return "Honduras";
    },
    get$hkCountryDisplayName() {
      return "Hong Kong";
    },
    get$huCountryDisplayName() {
      return "Hungary";
    },
    get$isCountryDisplayName() {
      return "Iceland";
    },
    get$inCountryDisplayName() {
      return "India";
    },
    get$idCountryDisplayName() {
      return "Indonesia";
    },
    get$irCountryDisplayName() {
      return "Iran";
    },
    get$iqCountryDisplayName() {
      return "Iraq";
    },
    get$ieCountryDisplayName() {
      return "Ireland";
    },
    get$imCountryDisplayName() {
      return "Isle of Man";
    },
    get$ilCountryDisplayName() {
      return "Israel";
    },
    get$itCountryDisplayName() {
      return "Italy";
    },
    get$jmCountryDisplayName() {
      return "Jamaica";
    },
    get$jpCountryDisplayName() {
      return "Japan";
    },
    get$jeCountryDisplayName() {
      return "Jersey";
    },
    get$joCountryDisplayName() {
      return "Jordan";
    },
    get$kzCountryDisplayName() {
      return "Kazakhstan";
    },
    get$keCountryDisplayName() {
      return "Kenya";
    },
    get$kiCountryDisplayName() {
      return "Kiribati";
    },
    get$xkCountryDisplayName() {
      return "Kosovo";
    },
    get$kwCountryDisplayName() {
      return "Kuwait";
    },
    get$kgCountryDisplayName() {
      return "Kyrgyzstan";
    },
    get$laCountryDisplayName() {
      return "Laos";
    },
    get$lvCountryDisplayName() {
      return "Latvia";
    },
    get$lbCountryDisplayName() {
      return "Lebanon";
    },
    get$lsCountryDisplayName() {
      return "Lesotho";
    },
    get$lrCountryDisplayName() {
      return "Liberia";
    },
    get$lyCountryDisplayName() {
      return "Libya";
    },
    get$liCountryDisplayName() {
      return "Liechtenstein";
    },
    get$ltCountryDisplayName() {
      return "Lithuania";
    },
    get$luCountryDisplayName() {
      return "Luxembourg";
    },
    get$moCountryDisplayName() {
      return "Macau";
    },
    get$mkCountryDisplayName() {
      return "Macedonia";
    },
    get$mgCountryDisplayName() {
      return "Madagascar";
    },
    get$mwCountryDisplayName() {
      return "Malawi";
    },
    get$myCountryDisplayName() {
      return "Malaysia";
    },
    get$mvCountryDisplayName() {
      return "Maldives";
    },
    get$mlCountryDisplayName() {
      return "Mali";
    },
    get$mtCountryDisplayName() {
      return "Malta";
    },
    get$mhCountryDisplayName() {
      return "Marshall Islands";
    },
    get$mqCountryDisplayName() {
      return "Martinique";
    },
    get$mrCountryDisplayName() {
      return "Mauritania";
    },
    get$muCountryDisplayName() {
      return "Mauritius";
    },
    get$ytCountryDisplayName() {
      return "Mayotte";
    },
    get$mxCountryDisplayName() {
      return "Mexico";
    },
    get$fmCountryDisplayName() {
      return "Micronesia";
    },
    get$mdCountryDisplayName() {
      return "Moldova";
    },
    get$mcCountryDisplayName() {
      return "Monaco";
    },
    get$mnCountryDisplayName() {
      return "Mongolia";
    },
    get$meCountryDisplayName() {
      return "Montenegro";
    },
    get$msCountryDisplayName() {
      return "Montserrat";
    },
    get$maCountryDisplayName() {
      return "Morocco";
    },
    get$mzCountryDisplayName() {
      return "Mozambique";
    },
    get$mmCountryDisplayName() {
      return "Myanmar (Burma)";
    },
    get$naCountryDisplayName() {
      return "Namibia";
    },
    get$nrCountryDisplayName() {
      return "Nauru";
    },
    get$npCountryDisplayName() {
      return "Nepal";
    },
    get$nlCountryDisplayName() {
      return "Netherlands";
    },
    get$ncCountryDisplayName() {
      return "New Caledonia";
    },
    get$nzCountryDisplayName() {
      return "New Zealand";
    },
    get$niCountryDisplayName() {
      return "Nicaragua";
    },
    get$neCountryDisplayName() {
      return "Niger";
    },
    get$ngCountryDisplayName() {
      return "Nigeria";
    },
    get$nuCountryDisplayName() {
      return "Niue";
    },
    get$nfCountryDisplayName() {
      return "Norfolk Island";
    },
    get$kpCountryDisplayName() {
      return "North Korea";
    },
    get$mpCountryDisplayName() {
      return "Northern Mariana Islands";
    },
    get$noCountryDisplayName() {
      return "Norway";
    },
    get$omCountryDisplayName() {
      return "Oman";
    },
    get$pkCountryDisplayName() {
      return "Pakistan";
    },
    get$pwCountryDisplayName() {
      return "Palau";
    },
    get$psCountryDisplayName() {
      return "Palestinian Territories";
    },
    get$paCountryDisplayName() {
      return "Panama";
    },
    get$pgCountryDisplayName() {
      return "Papua New Guinea";
    },
    get$pyCountryDisplayName() {
      return "Paraguay";
    },
    get$peCountryDisplayName() {
      return "Peru";
    },
    get$phCountryDisplayName() {
      return "Philippines";
    },
    get$plCountryDisplayName() {
      return "Poland";
    },
    get$ptCountryDisplayName() {
      return "Portugal";
    },
    get$prCountryDisplayName() {
      return "Puerto Rico";
    },
    get$qaCountryDisplayName() {
      return "Qatar";
    },
    get$reCountryDisplayName() {
      return "R\xe9union";
    },
    get$roCountryDisplayName() {
      return "Romania";
    },
    get$ruCountryDisplayName() {
      return "Russia";
    },
    get$rwCountryDisplayName() {
      return "Rwanda";
    },
    get$blCountryDisplayName() {
      return "Saint Barth\xe9lemy";
    },
    get$shCountryDisplayName() {
      return "Saint Helena";
    },
    get$knCountryDisplayName() {
      return "St. Kitts";
    },
    get$lcCountryDisplayName() {
      return "St. Lucia";
    },
    get$mfCountryDisplayName() {
      return "Saint Martin";
    },
    get$pmCountryDisplayName() {
      return "Saint Pierre and Miquelon";
    },
    get$vcCountryDisplayName() {
      return "St. Vincent";
    },
    get$wsCountryDisplayName() {
      return "Samoa";
    },
    get$smCountryDisplayName() {
      return "San Marino";
    },
    get$stCountryDisplayName() {
      return "S\xe3o Tom\xe9 and Pr\xedncipe";
    },
    get$saCountryDisplayName() {
      return "Saudi Arabia";
    },
    get$snCountryDisplayName() {
      return "Senegal";
    },
    get$rsCountryDisplayName() {
      return "Serbia";
    },
    get$scCountryDisplayName() {
      return "Seychelles";
    },
    get$slCountryDisplayName() {
      return "Sierra Leone";
    },
    get$sgCountryDisplayName() {
      return "Singapore";
    },
    get$sxCountryDisplayName() {
      return "Sint Maarten";
    },
    get$skCountryDisplayName() {
      return "Slovakia";
    },
    get$siCountryDisplayName() {
      return "Slovenia";
    },
    get$sbCountryDisplayName() {
      return "Solomon Islands";
    },
    get$soCountryDisplayName() {
      return "Somalia";
    },
    get$zaCountryDisplayName() {
      return "South Africa";
    },
    get$gsCountryDisplayName() {
      return "South Georgia and the South Sandwich Islands";
    },
    get$krCountryDisplayName() {
      return "South Korea";
    },
    get$ssCountryDisplayName() {
      return "South Sudan";
    },
    get$esCountryDisplayName() {
      return "Spain";
    },
    get$lkCountryDisplayName() {
      return "Sri Lanka";
    },
    get$sdCountryDisplayName() {
      return "Sudan";
    },
    get$srCountryDisplayName() {
      return "Suriname";
    },
    get$sjCountryDisplayName() {
      return "Svalbard and Jan Mayen";
    },
    get$seCountryDisplayName() {
      return "Sweden";
    },
    get$chCountryDisplayName() {
      return "Switzerland";
    },
    get$syCountryDisplayName() {
      return "Syria";
    },
    get$twCountryDisplayName() {
      return "Taiwan";
    },
    get$tjCountryDisplayName() {
      return "Tajikistan";
    },
    get$tzCountryDisplayName() {
      return "Tanzania";
    },
    get$thCountryDisplayName() {
      return "Thailand";
    },
    get$tgCountryDisplayName() {
      return "Togo";
    },
    get$tkCountryDisplayName() {
      return "Tokelau";
    },
    get$toCountryDisplayName() {
      return "Tonga";
    },
    get$ttCountryDisplayName() {
      return "Trinidad/Tobago";
    },
    get$tnCountryDisplayName() {
      return "Tunisia";
    },
    get$trCountryDisplayName() {
      return "Turkey";
    },
    get$tmCountryDisplayName() {
      return "Turkmenistan";
    },
    get$tcCountryDisplayName() {
      return "Turks and Caicos Islands";
    },
    get$tvCountryDisplayName() {
      return "Tuvalu";
    },
    get$viCountryDisplayName() {
      return "U.S. Virgin Islands";
    },
    get$ugCountryDisplayName() {
      return "Uganda";
    },
    get$uaCountryDisplayName() {
      return "Ukraine";
    },
    get$aeCountryDisplayName() {
      return "United Arab Emirates";
    },
    get$gbCountryDisplayName() {
      return "United Kingdom";
    },
    get$usCountryDisplayName() {
      return "United States";
    },
    get$uyCountryDisplayName() {
      return "Uruguay";
    },
    get$uzCountryDisplayName() {
      return "Uzbekistan";
    },
    get$vuCountryDisplayName() {
      return "Vanuatu";
    },
    get$vaCountryDisplayName() {
      return "Vatican City";
    },
    get$veCountryDisplayName() {
      return "Venezuela";
    },
    get$vnCountryDisplayName() {
      return "Vietnam";
    },
    get$wfCountryDisplayName() {
      return "Wallis and Futuna";
    },
    get$ehCountryDisplayName() {
      return "Western Sahara";
    },
    get$yeCountryDisplayName() {
      return "Yemen";
    },
    get$zmCountryDisplayName() {
      return "Zambia";
    },
    get$zwCountryDisplayName() {
      return "Zimbabwe";
    },
    get$pay() {
      return "Pay";
    },
    get$copyClassCodeDesc() {
      return "Users who are already in the app can 'Join space' via the main menu.";
    },
    invitedToSpace$2(space, user) {
      return user + " has invited you to join a space: " + space + "! Do you wish to accept?";
    },
    get$declinedInvitation() {
      return "Declined invitation";
    },
    get$acceptedInvitation() {
      return "Accepted invitation";
    },
    get$youreInvited() {
      return "\ud83d\udce9 You're invited!";
    },
    invitedToChat$2($name, user) {
      return user + " has invited you to join a chat: " + $name + "! Do you wish to accept?";
    },
    get$monthlySubscription() {
      return "Monthly";
    },
    get$yearlySubscription() {
      return "Yearly";
    },
    get$defaultSubscription() {
      return "Pangea Chat Subscription";
    },
    get$freeTrial() {
      return "Free Trial";
    },
    get$noDataFound() {
      return "No data found";
    },
    promoSubscriptionExpirationDesc$1(expiration) {
      return "Your current subscription is promotional and expires on " + expiration + ". Message support@pangea.chat for help changing your subscription.";
    },
    get$blurMeansTranslateTitle() {
      return "Why is the message blurred?";
    },
    get$blurMeansTranslateBody() {
      return "While Immersion Mode is on, messages that are sent in your base language will be blurred while Pangea Bot translates them to your target language. Immersion Mode can be toggled in individual and space settings.";
    },
    get$someErrorTitle() {
      return "Hm, something's not right";
    },
    get$someErrorBody() {
      return "It could be an error or something in your base language.";
    },
    get$bestCorrectionFeedback() {
      return "That's correct!";
    },
    get$distractorFeedback() {
      return "That's not quite right.";
    },
    get$bestAnswerFeedback() {
      return "That's correct!";
    },
    get$definitionDefaultPrompt() {
      return "What does this word mean?";
    },
    get$practiceDefaultPrompt() {
      return "What is the best answer?";
    },
    get$correctionDefaultPrompt() {
      return "What is the best replacement?";
    },
    get$why() {
      return "Why?";
    },
    get$definition() {
      return "Definition";
    },
    get$exampleSentence() {
      return "Example Sentence";
    },
    get$reportToTeacher() {
      return "Who do you want to report this message to?";
    },
    reportMessageTitle$3(reportingUserId, reportedUserId, roomName) {
      return reportingUserId + " has reported a message from " + reportedUserId + " in the chat " + roomName;
    },
    reportMessageBody$2(reportedMessage, reason) {
      return "Message: " + reportedMessage + "\nReason: " + reason;
    },
    get$noTeachersFound() {
      return "No teachers found to report to";
    },
    get$pleaseEnterANumber() {
      return "Adjon meg egy 0-n\xe1l nagyobb sz\xe1mot";
    },
    get$archiveRoomDescription() {
      return "A cseveg\xe9s beker\xfcl az arch\xedvumba. M\xe1s felhaszn\xe1l\xf3k l\xe1tni fogj\xe1k, hogy elhagyta a cseveg\xe9st.";
    },
    get$roomUpgradeDescription() {
      return "A cseveg\xe9s \xfajra elk\xe9sz\xfcl az \xfaj verzi\xf3val. Minden r\xe9sztvev\u0151 \xe9rtes\xedt\xe9st kap, hogy \xe1t kell \xe1llniuk az \xfaj cseveg\xe9sre. Tov\xe1bbi inform\xe1ci\xf3k\xe9rt a szoba verzi\xf3kr\xf3l l\xe1togasson el a https://spec.matrix.org/latest/rooms/ c\xedmre";
    },
    get$removeDevicesDescription() {
      return "Ki fog jelentkezni a k\xe9sz\xfcl\xe9kr\u0151l, \xe9s t\xf6bbi nem fog tudni fogadni \xfczeneteket.";
    },
    get$banUserDescription() {
      return "A felhaszn\xe1l\xf3 kitilt\xe1sra ker\xfcl a cseveg\xe9sb\u0151l, \xe9s nem fog tudni visszaj\xf6nni eg\xe9szen a kitilt\xe1s felold\xe1s\xe1ig.";
    },
    get$unbanUserDescription() {
      return "A felhaszn\xe1l\xf3 vissza tud j\xf6nni a cseveg\xe9sbe ha akar.";
    },
    get$kickUserDescription() {
      return "A felhaszn\xe1l\xf3 kir\xfag\xe1sra ker\xfclt a cseveg\xe9sb\u0151l, de nincs kitiltva. Publikus cseveg\xe9s eset\xe9n a felhaszn\xe1l\xf3 b\xe1rmikor visszat\xe9rhet.";
    },
    get$makeAdminDescription() {
      return "Miut\xe1n a felhaszn\xe1l\xf3b\xf3l admin lesz, nem fogja tudni visszavonni d\xf6nt\xe9s\xe9t, mivel azonos jogosults\xe1gi szinttel fognak rendelkezni.";
    },
    get$yourGlobalUserIdIs() {
      return "A glob\xe1lis felhaszn\xe1l\xf3-ID-je: ";
    },
    noUsersFoundWithQuery$1(query) {
      return '"' + query + '" n\xe9ven nem tal\xe1lhat\xf3 felhaszn\xe1l\xf3. Ellen\u0151rizze nincs e el\xedr\xe1s.';
    },
    get$knocking() {
      return "Bekopog\xe1s";
    },
    chatCanBeDiscoveredViaSearchOnServer$1(server) {
      return "Cseveg\xe9s felfedezhet\u0151 a " + server + " szerveren t\xf6rt\xe9n\u0151 keres\xe9ssel";
    },
    get$searchChatsRooms() {
      return "Keressen #cseveg\xe9seket, @felhaszn\xe1l\xf3kat...";
    },
    trialExpiration$1(expiration) {
      return "Your free trial expires on " + expiration;
    },
    get$freeTrialDesc() {
      return "New users recieve a one week free trial of Pangea Chat";
    },
    get$activateTrial() {
      return "Free 7-Day Trial";
    },
    get$successfullySubscribed() {
      return "You have successfully subscribed!";
    },
    get$clickToManageSubscription() {
      return "Click here to manage your subscription.";
    },
    get$nothingFound() {
      return "Nincs tal\xe1lat...";
    },
    get$wrongRecoveryKey() {
      return "Sajnos, \xfagy t\u0171nik hib\xe1san adta meg a vissza\xe1ll\xedt\xe1si kulcsot.";
    },
    get$startConversation() {
      return "Besz\xe9lget\xe9s ind\xedt\xe1sa";
    },
    get$commandHint_sendraw() {
      return "Tiszta json k\xfcld\xe9se";
    },
    get$searchForUsers() {
      return "Keressen @felhaszn\xe1l\xf3kat...";
    },
    get$pleaseEnterYourCurrentPassword() {
      return "K\xe9rem adja meg jelenlegi jelszav\xe1t";
    },
    get$newPassword() {
      return "\xdaj jelsz\xf3";
    },
    get$pleaseChooseAStrongPassword() {
      return "K\xe9rem v\xe1lasszon egy er\u0151s jelsz\xf3t";
    },
    get$passwordsDoNotMatch() {
      return "A jelszavak nem egyeznek";
    },
    get$passwordIsWrong() {
      return "A be\xedrt jelszava hib\xe1s";
    },
    get$publicChatAddresses() {
      return "Nyilv\xe1nos cseveg\xe9s c\xedmek";
    },
    get$createNewAddress() {
      return "\xdaj c\xedm l\xe9trehoz\xe1sa";
    },
    get$joinSpace() {
      return "Csatlakoz\xe1s a t\xe9rre";
    },
    get$publicSpaces() {
      return "Nyilv\xe1nos terek";
    },
    get$decline() {
      return "Elutas\xedt\xe1s";
    },
    get$thisDevice() {
      return "Ez az eszk\xf6z:";
    },
    get$initAppError() {
      return "Hiba l\xe9pett fel az app ind\xedt\xe1sa sor\xe1n";
    },
    get$userRole() {
      return "Felhaszn\xe1l\xf3i szerep";
    },
    searchIn$1(chat) {
      return 'Keres\xe9s a cseveg\xe9sben "' + chat + '"...';
    },
    get$searchMore() {
      return "Tov\xe1bbi keres\xe9s...";
    },
    get$gallery() {
      return "Gal\xe9ria";
    },
    get$files(_) {
      return "F\xe1jlok";
    },
    sessionLostBody$2(url, error) {
      return "A munkamenete elvesz\u0151d\xf6tt. K\xe9rem jelentse ezt a fejleszt\u0151knek a " + url + " c\xedmen. A hiba sz\xf6vege a k\xf6vetkez\u0151: " + error;
    },
    restoreSessionBody$2(url, error) {
      return "Megpr\xf3b\xe1lkozunk vissza\xe1ll\xedtani a munkamenet\xe9t egy kor\xe1bbi ment\xe9sb\u0151l. K\xe9rem jelezze a hib\xe1t a fejleszt\u0151knek a " + url + " c\xedmen. A hiba sz\xf6vege a k\xf6vetkez\u0151: " + error;
    },
    forwardMessageTo$1(roomName) {
      return "\xdczenet tov\xe1bb\xedt\xe1sa a " + roomName + " szob\xe1ba?";
    },
    get$signUp() {
      return "Sign up";
    },
    pleaseChooseAtLeastChars$1(min) {
      return "Please choose at least " + min + " characters.";
    },
    get$pleaseEnterValidEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseChooseAUsername() {
      return "Please choose a username";
    },
    get$sendReadReceipts() {
      return "Olvas\xe1si igazol\xe1s k\xfcld\xe9se";
    },
    get$sendTypingNotificationsDescription() {
      return "A cseveg\xe9s t\xf6bbi tagja l\xe1tja amikor g\xe9pel.";
    },
    get$sendReadReceiptsDescription() {
      return "A cseveg\xe9s t\xf6bbi tagja l\xe1tja melyik \xfczenetet l\xe1tta.";
    },
    get$verifyOtherDevice() {
      return "\ud83d\udd10 M\xe1s eszk\xf6z meger\u0151s\xedt\xe9se";
    },
    get$verifyOtherDeviceDescription() {
      return "Amikor egy m\xe1sik eszk\xf6zt er\u0151s\xedt meg, az eszk\xf6z\xf6k kulcsokat cser\xe9lnek egym\xe1s k\xf6z\xf6tt, ez\xe1ltal n\xf6velve az \xf6sszbiztons\xe1got. \ud83d\udcaa Amikor megkezd\u0151dik a folyamat, mind a k\xe9t eszk\xf6z\xf6n megjelenik egy felugr\xf3 \xfczenet. Emojik \xe9s sz\xe1mok sorozata fog megjelenni, amit \xf6ssze tud hasonl\xedtani a k\xe9t eszk\xf6z\xf6n. \xc9rdemes teh\xe1t mind a k\xe9t eszk\xf6zt a k\xf6zelben tartani. \ud83e\udd33";
    },
    acceptedKeyVerification$1(sender) {
      return sender + " elfogadta a kulcs meger\u0151s\xedt\xe9st";
    },
    canceledKeyVerification$1(sender) {
      return sender + " nem fogadta el a kulcs meger\u0151s\xedt\xe9st";
    },
    completedKeyVerification$1(sender) {
      return sender + " befejezte a kulcs meger\u0151s\xedt\xe9st";
    },
    isReadyForKeyVerification$1(sender) {
      return sender + " k\xe9szen \xe1ll a kulcs meger\u0151s\xedt\xe9sre";
    },
    requestedKeyVerification$1(sender) {
      return sender + " kulcs meger\u0151s\xedt\xe9st k\xe9r";
    },
    startedKeyVerification$1(sender) {
      return sender + " elkezdte a kulcs meger\u0151s\xedt\xe9st";
    },
    get$trialPeriodExpired() {
      return "Your trial period has expired";
    },
    get$subscribedToUnlockTools() {
      return "Subscribe to unlock interactive translation and grammar checking, audio playback, personalized practice activities, and learning analytics!";
    },
    get$translationTooltip() {
      return "Translate";
    },
    get$audioTooltip() {
      return "Play Audio";
    },
    get$speechToTextTooltip() {
      return "Transcript";
    },
    get$kickBotWarning() {
      return "Kicking Pangea Bot will remove the conversation bot from this chat.";
    },
    get$stickers() {
      return "Matrica";
    },
    get$discover() {
      return "Felfedez\xe9s";
    },
    get$commandHint_ignore() {
      return "Adott matrix ID figyelmen k\xedv\xfcl hagy\xe1sa";
    },
    get$commandHint_unignore() {
      return "Adott matrix ID figyelembe v\xe9tele";
    },
    get$accuracy(_) {
      return "Accuracy";
    },
    get$conversationBotModeSelectDescription() {
      return "Chat activity";
    },
    get$conversationBotModeSelectOption_discussion() {
      return "Discussion";
    },
    get$conversationBotModeSelectOption_custom() {
      return "Custom";
    },
    get$conversationBotDiscussionZone_discussionTopicPlaceholder() {
      return "Set discussion topic";
    },
    get$conversationBotDiscussionZone_discussionKeywordsPlaceholder() {
      return "Set discussion keywords";
    },
    get$conversationBotCustomZone_customSystemPromptPlaceholder() {
      return "Set custom system prompt";
    },
    get$botConfig() {
      return "Bot and activity settings";
    },
    get$botConfigNoPermissionTitle() {
      return "No permission";
    },
    get$botConfigNoPermissionMessage() {
      return "Contact room admin to change bot configuration";
    },
    get$conversationBotStatus() {
      return "Invite bot";
    },
    get$updatePhoneOS() {
      return "You may need to update your device's OS version.";
    },
    get$wordsPerMinute() {
      return "Words per minute";
    },
    get$autoIGCToolName() {
      return "Run language assistance automatically";
    },
    get$autoIGCToolDescription() {
      return "Automatically run language assistance after typing messages";
    },
    get$leaveRoomDescription() {
      return "The chat will be moved to the archive. Other users will be able to see that you have left the chat.";
    },
    get$leaveSpaceDescription() {
      return "All chats within this space will be moved to the archive. Other users will be able to see that you have left the space.";
    },
    get$onlyAdminDescription() {
      return "Since there are no other admins, all other participants will also be removed.";
    },
    get$tooltipInstructionsTitle() {
      return "Not sure what that does?";
    },
    get$tooltipInstructionsBrowserBody() {
      return "Hover over items to view tooltips.";
    },
    get$chatCapacity() {
      return "Chat capacity";
    },
    get$spaceCapacity() {
      return "Space capacity";
    },
    get$roomFull() {
      return "This room is already at capacity.";
    },
    get$chatCapacityHasBeenChanged() {
      return "Chat capacity changed";
    },
    get$spaceCapacityHasBeenChanged() {
      return "Space capacity changed";
    },
    get$chatCapacitySetTooLow() {
      return "Chat capacity cannot be set below the current number of non-admins.";
    },
    get$spaceCapacitySetTooLow() {
      return "Space capacity cannot be set below the current number of non-admins.";
    },
    get$chatCapacityExplanation() {
      return "Chat capacity limits the number of non-admins allowed in a chat.";
    },
    get$spaceCapacityExplanation() {
      return "Space capacity limits the number of non-admins allowed in a space.";
    },
    get$chatExceedsCapacity() {
      return "This chat exceeds its capacity.";
    },
    get$spaceExceedsCapacity() {
      return "This space exceeds its capacity.";
    },
    get$tooManyRequest() {
      return "Too many request, please try again later.";
    },
    get$enterNumber() {
      return "Please enter a whole number value.";
    },
    get$buildTranslation() {
      return "Build your translation from the choices above";
    },
    thereAreCountUsersBlocked$1(count) {
      return "Jelenleg " + count + " felhaszn\xe1l\xf3 van letiltva.";
    },
    get$restricted() {
      return "Korl\xe1tozott";
    },
    get$knockRestricted() {
      return "Kopog\xe1s korl\xe1tozva";
    },
    get$createNewSpace() {
      return "\xdaj t\xe9r";
    },
    get$practice() {
      return "Practice";
    },
    get$speechToTextBody() {
      return "See how well you did by looking at your Accuracy and Words Per Minute scores";
    },
    get$versionNotFound() {
      return "Version Not Found";
    },
    get$fetchingVersion() {
      return "Fetching version...";
    },
    get$versionFetchError() {
      return "Error fetching version";
    },
    versionText$2(version, buildNumber) {
      return "Version: " + version + "+" + buildNumber;
    },
    get$l1TranslationBody() {
      return "Messages in your base language will not be translated.";
    },
    get$continueText() {
      return "Continue";
    },
    get$deleteSubscriptionWarningTitle() {
      return "You have an active subscription";
    },
    get$deleteSubscriptionWarningBody() {
      return "Deleting your account will not automatically cancel your subscription.";
    },
    get$manageSubscription() {
      return "Manage Subscription";
    },
    get$createChat() {
      return "Create chat";
    },
    get$error520Title() {
      return "Please try again.";
    },
    get$error520Desc() {
      return "Sorry, we could not understand your message...";
    },
    get$level(_) {
      return "Level";
    },
    get$translationChoicesBody() {
      return "Click and hold an option for a hint.";
    },
    get$sendCanceled() {
      return "Visszavon\xe1s k\xfcld\xe9se";
    },
    goToSpace$1(space) {
      return "Menj a t\xe9rre: " + space;
    },
    get$markAsUnread() {
      return "Olvasatlannak jel\xf6l\xe9s";
    },
    userLevel$1(level) {
      return "" + level + " - Felhaszn\xe1l\xf3";
    },
    moderatorLevel$1(level) {
      return "" + level + " - Moder\xe1tor";
    },
    adminLevel$1(level) {
      return "" + level + " - Rendszergazda";
    },
    get$changeGeneralChatSettings() {
      return "\xc1ltal\xe1nos cseveg\xe9s be\xe1ll\xedt\xe1sok m\xf3dos\xedt\xe1sa";
    },
    get$inviteOtherUsers() {
      return "M\xe1s felhaszn\xe1l\xf3k megh\xedv\xe1sa a cseveg\xe9sbe";
    },
    get$changeTheChatPermissions() {
      return "Cseveg\xe9s enged\xe9lyek v\xe1ltoztat\xe1sa";
    },
    get$changeTheVisibilityOfChatHistory() {
      return "Cseveg\xe9si el\u0151zm\xe9nyek l\xe1that\xf3s\xe1g\xe1nak v\xe1ltoztat\xe1sa";
    },
    get$changeTheCanonicalRoomAlias() {
      return "Cseveg\xe9s f\u0151, nyilv\xe1nos c\xedm\xe9nek v\xe1ltoztat\xe1sa";
    },
    get$sendRoomNotifications() {
      return "@room \xe9rtes\xedt\xe9s k\xfcld\xe9se";
    },
    get$changeTheDescriptionOfTheGroup() {
      return "Cseveg\xe9s le\xedr\xe1s\xe1nak v\xe1ltoztat\xe1sa";
    },
    get$chatPermissionsDescription() {
      return "Adja meg milyen er\u0151ss\xe9gi szint kell egyes cseveg\xe9si akci\xf3khoz. A 0, 50 \xe9s 100-as szintek \xe1ltal\xe1ban felhaszn\xe1l\xf3kat, moder\xe1torokat \xe9s rendszergazd\xe1kat jel\xf6lnek de b\xe1rmilyen szintez\xe9s lehets\xe9ges.";
    },
    updateInstalled$1(version) {
      return "\ud83c\udf89 " + version + " verzi\xf3j\xfa fejleszt\xe9s telep\xedtve!";
    },
    get$doesNotSeemToBeAValidHomeserver() {
      return "Nem t\u0171nik kompatibilisnak a M\xe1trix-kiszolg\xe1l\xf3val. Helytelen URL?";
    },
    get$grammar() {
      return "Grammar";
    },
    get$contactHasBeenInvitedToTheChat() {
      return "Contact has been invited to the chat";
    },
    get$inviteChat() {
      return "\ud83d\udce8 Invite chat";
    },
    get$chatName() {
      return "Chat name";
    },
    get$clickTheWordAgainToDeselect() {
      return "Click the selected word to deselect it.";
    },
    get$l2SupportNa() {
      return "Not Available";
    },
    get$l2SupportAlpha() {
      return "Alpha";
    },
    get$l2SupportBeta() {
      return "Beta";
    },
    get$l2SupportFull() {
      return "Full";
    },
    get$missingVoiceTitle() {
      return "Missing voice";
    },
    get$voiceNotAvailable() {
      return "You don't have a voice installed for this language.";
    },
    get$playAudio() {
      return "Play";
    },
    get$stop(_) {
      return "Stop";
    },
    get$grammarCopyPOSsconj() {
      return "Subordinating Conjunction";
    },
    get$grammarCopyPOSnum() {
      return "Number";
    },
    get$grammarCopyPOSverb() {
      return "Verb";
    },
    get$grammarCopyPOSaffix() {
      return "Affix";
    },
    get$grammarCopyPOSpart() {
      return "Particle";
    },
    get$grammarCopyPOSadj() {
      return "Adjective";
    },
    get$grammarCopyPOScconj() {
      return "Coordinating Conjunction";
    },
    get$grammarCopyPOSpunct() {
      return "Punctuation";
    },
    get$grammarCopyPOSadv() {
      return "Adverb";
    },
    get$grammarCopyPOSaux() {
      return "Auxiliary";
    },
    get$grammarCopyPOSspace() {
      return "Space";
    },
    get$grammarCopyPOSsym() {
      return "Symbol";
    },
    get$grammarCopyPOSdet() {
      return "Determiner";
    },
    get$grammarCopyPOSpron() {
      return "Pronoun";
    },
    get$grammarCopyPOSadp() {
      return "Adposition";
    },
    get$grammarCopyPOSpropn() {
      return "Proper Noun";
    },
    get$grammarCopyPOSnoun() {
      return "Noun";
    },
    get$grammarCopyPOSintj() {
      return "Interjection";
    },
    get$grammarCopyPOSx() {
      return "Other";
    },
    get$grammarCopyGENDERfem() {
      return "Feminine";
    },
    get$grammarCopyPERSON2() {
      return "Second Person";
    },
    get$grammarCopyMOODimp() {
      return "Imperative";
    },
    get$grammarCopyPUNCTTYPEqest() {
      return "Question";
    },
    get$grammarCopyASPECTperf() {
      return "Perfect";
    },
    get$grammarCopyCASEaccnom() {
      return "Accusative, Nominative";
    },
    get$grammarCopyCASEobl() {
      return "Oblique";
    },
    get$grammarCopyVOICEact() {
      return "Active";
    },
    get$grammarCopyPUNCTTYPEbrck() {
      return "Bracket";
    },
    get$grammarCopyNOUNTYPEart() {
      return "Article";
    },
    get$grammarCopyNUMBERsing() {
      return "Singular";
    },
    get$grammarCopyGENDERmasc() {
      return "Masculine";
    },
    get$grammarCopyVERBTYPEmod() {
      return "Modal";
    },
    get$grammarCopyADVTYPEadverbial() {
      return "Adverbial";
    },
    get$grammarCopyTENSEperi() {
      return "Periphrastic";
    },
    get$grammarCopyNUMFORMdigit() {
      return "Digit";
    },
    get$grammarCopyNOUNTYPEnot_proper() {
      return "Not Proper";
    },
    get$grammarCopyNUMTYPEcard() {
      return "Cardinal";
    },
    get$grammarCopyNOUNTYPEprop() {
      return "Proper";
    },
    get$grammarCopyPUNCTTYPEdash() {
      return "Dash";
    },
    get$grammarCopyPUNCTTYPEyes() {
      return "Yes";
    },
    get$grammarCopyPUNCTTYPEsemi() {
      return "Semicolon";
    },
    get$grammarCopyPUNCTTYPEcomm() {
      return "Comma";
    },
    get$grammarCopyMOODcnd() {
      return "Conditional";
    },
    get$grammarCopyCASEacc() {
      return "Accusative";
    },
    get$grammarCopyPARTTYPEpart() {
      return "Partitive";
    },
    get$grammarCopyTENSEpast() {
      return "Past";
    },
    get$grammarCopyDEGREEsup() {
      return "Superlative";
    },
    get$grammarCopyPUNCTTYPEcolo() {
      return "Colon";
    },
    get$grammarCopyPERSON3() {
      return "Third Person";
    },
    get$grammarCopyNUMBERplur() {
      return "Plural";
    },
    get$grammarCopyPRONTYPEnpr() {
      return "Proper Noun";
    },
    get$grammarCopyPRONTYPEinterrogative() {
      return "Interrogative";
    },
    get$grammarCopyPOLITEinfm() {
      return "Informal";
    },
    get$grammarCopyADVTYPEtim() {
      return "Time";
    },
    get$grammarCopyPOLARITYneg() {
      return "Negative";
    },
    get$grammarCopyNUMTYPEtot() {
      return "Total";
    },
    get$grammarCopyADVTYPEadnomial() {
      return "Adnominal";
    },
    get$grammarCopyASPECTprog() {
      return "Progressive";
    },
    get$grammarCopyMOODsub() {
      return "Subjunctive";
    },
    get$grammarCopyVERBFORMcomplementive() {
      return "Complementive";
    },
    get$grammarCopyCASEnom() {
      return "Nominative";
    },
    get$grammarCopyTENSEfut() {
      return "Future";
    },
    get$grammarCopyCASEdat() {
      return "Dative";
    },
    get$grammarCopyTENSEpres() {
      return "Present";
    },
    get$grammarCopyGENDERneut() {
      return "Neuter";
    },
    get$grammarCopyPRONTYPErel() {
      return "Relative";
    },
    get$grammarCopyVERBFORMfinalEnding() {
      return "Final Ending";
    },
    get$grammarCopyPRONTYPEdem() {
      return "Demonstrative";
    },
    get$grammarCopyPREPCASEpre() {
      return "Prepositional";
    },
    get$grammarCopyVERBFORMfin() {
      return "Finite";
    },
    get$grammarCopyDEGREEpos() {
      return "Positive";
    },
    get$grammarCopyPUNCTTYPEquot() {
      return "Quotation";
    },
    get$grammarCopyVERBFORMger() {
      return "Gerund";
    },
    get$grammarCopyVOICEpass() {
      return "Passive";
    },
    get$grammarCopyCASEgen() {
      return "Genitive";
    },
    get$grammarCopyTENSEprs() {
      return "Present";
    },
    get$grammarCopyDEFINITEdef() {
      return "Definite";
    },
    get$grammarCopyNUMTYPEord() {
      return "Ordinal";
    },
    get$grammarCopyCASEins() {
      return "Instrumental";
    },
    get$grammarCopyVERBFORMinf() {
      return "Infinitive";
    },
    get$grammarCopyNUMFORMlong() {
      return "Long";
    },
    get$grammarCopyCASEloc() {
      return "Locative";
    },
    get$grammarCopyMOODind() {
      return "Indicative";
    },
    get$grammarCopyDEGREEcmp() {
      return "Comparative";
    },
    get$grammarCopyCASErelativeCase() {
      return "Relative";
    },
    get$grammarCopyPUNCTTYPEexcl() {
      return "Exclamative";
    },
    get$grammarCopyPERSON1() {
      return "First Person";
    },
    get$grammarCopyPUNCTSIDEini() {
      return "Initial";
    },
    get$grammarCopyGENDERperson() {
      return "Person";
    },
    get$grammarCopyFOREIGNyes() {
      return "Foreign";
    },
    get$grammarCopyVOICEvoice() {
      return "Voice";
    },
    get$grammarCopyVERBTYPEverbType() {
      return "Verb";
    },
    get$grammarCopyPOSSpass() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEprepCase() {
      return "Prepositional";
    },
    get$grammarCopyNUMTYPEnumType() {
      return "Numeral";
    },
    get$grammarCopyNOUNTYPEnounType() {
      return "Noun";
    },
    get$grammarCopyREFLEXreflex() {
      return "Reflexive";
    },
    get$grammarCopyPRONTYPEpronType() {
      return "Pronoun";
    },
    get$grammarCopyPUNCTSIDEpunctSide() {
      return "Punctuation Side";
    },
    get$grammarCopyVERBFORMverbForm() {
      return "Verb";
    },
    get$grammarCopyGENDERgender() {
      return "Gender";
    },
    get$grammarCopyMOODmood() {
      return "Mood";
    },
    get$grammarCopyASPECTaspect() {
      return "Aspect";
    },
    get$grammarCopyPUNCTTYPEpunctType() {
      return "Punctuation";
    },
    get$grammarCopyTENSEtense() {
      return "Tense";
    },
    get$grammarCopyDEGREEdegree() {
      return "Degree";
    },
    get$grammarCopyPOLITEpolite() {
      return "Politeness";
    },
    get$grammarCopyADVTYPEadvType() {
      return "Adverb";
    },
    get$grammarCopyNUMFORMnumber() {
      return "Number";
    },
    get$grammarCopyCONJTYPEconjType() {
      return "Conjunction";
    },
    get$grammarCopyPOLARITYpolarity() {
      return "Polarity";
    },
    get$grammarCopyCASEcase() {
      return "Case";
    },
    get$grammarCopyDEFINITEdefinite() {
      return "Definiteness";
    },
    get$grammarCopyNUMFORMnumForm() {
      return "Numeral";
    },
    get$grammarCopyPRONTYPEadn() {
      return "Adnominal";
    },
    get$grammarCopyVOCvoc() {
      return "Vocative";
    },
    get$grammarCopyCMPLcmpl() {
      return "Complementizer";
    },
    get$grammarCopyADVadv() {
      return "Adverbial";
    },
    get$grammarCopyMOODjus() {
      return "Jussive";
    },
    get$grammarCopyGENDERcom() {
      return "Common";
    },
    get$grammarCopyREFLEXrflx() {
      return "Reflexive";
    },
    get$grammarCopyPARTTYPEpar() {
      return "Partitive";
    },
    get$grammarCopySPCspc() {
      return "Specific";
    },
    get$grammarCopyTENSEpqp() {
      return "Pluperfect";
    },
    get$grammarCopyREFLEXref() {
      return "Reflexive";
    },
    get$grammarCopyPUNCTTYPEnshrt() {
      return "Short";
    },
    get$grammarCopyNUMBERdual() {
      return "Dual";
    },
    get$grammarCopyNUMFORMlng() {
      return "Long";
    },
    get$grammarCopyVOICEmid() {
      return "Middle";
    },
    get$grammarCopyINTRELintRel() {
      return "Interrogative, Relative";
    },
    get$grammarCopyINTint() {
      return "Interrogative";
    },
    get$grammarCopyVOICEcaus() {
      return "Causative";
    },
    get$grammarCopyUnknown() {
      return "Unknown";
    },
    get$grammarCopyEVIDENTevident() {
      return "Evidentiality";
    },
    get$grammarCopyNUMFORMnumberPsor() {
      return "Possessor's Number";
    },
    get$grammarCopyASPECThab() {
      return "Habitual";
    },
    get$grammarCopyCASEabl() {
      return "Ablative";
    },
    get$grammarCopyCASEall() {
      return "Allative";
    },
    get$grammarCopyCASEess() {
      return "Essive";
    },
    get$grammarCopyCASEtra() {
      return "Translative";
    },
    get$grammarCopyCASEequ() {
      return "Equative";
    },
    get$grammarCopyCASEdis() {
      return "Distributive";
    },
    get$grammarCopyCASEabs() {
      return "Absolutive";
    },
    get$grammarCopyCASEerg() {
      return "Ergative";
    },
    get$grammarCopyCASEcau() {
      return "Causal";
    },
    get$grammarCopyCASEben() {
      return "Benefactive";
    },
    get$grammarCopyCASEtem() {
      return "Temporal";
    },
    get$grammarCopyCONJTYPEcoord() {
      return "Coordinating";
    },
    get$grammarCopyDEFINITEcons() {
      return "Construct State";
    },
    get$grammarCopyDEGREEabs() {
      return "Absolute Degree";
    },
    get$grammarCopyEVIDENTfh() {
      return "Factual Evidentiality";
    },
    get$grammarCopyEVIDENTnfh() {
      return "Non-factual Evidentiality";
    },
    get$grammarCopyMOODopt() {
      return "Optative";
    },
    get$grammarCopyMOODadm() {
      return "Admirative";
    },
    get$grammarCopyMOODdes() {
      return "Desiderative";
    },
    get$grammarCopyMOODnec() {
      return "Necessitative";
    },
    get$grammarCopyMOODpot() {
      return "Potential";
    },
    get$grammarCopyMOODprp() {
      return "Propositive";
    },
    get$grammarCopyMOODqot() {
      return "Quotative";
    },
    get$grammarCopyNUMFORMword() {
      return "Word Form";
    },
    get$grammarCopyNUMFORMroman() {
      return "Roman Numeral";
    },
    get$grammarCopyNUMFORMletter() {
      return "Letter Form";
    },
    get$grammarCopyNUMTYPEmult() {
      return "Multiplicative";
    },
    get$grammarCopyNUMTYPEfrac() {
      return "Fractional";
    },
    get$grammarCopyNUMTYPEsets() {
      return "Set";
    },
    get$grammarCopyNUMTYPErange() {
      return "Range";
    },
    get$grammarCopyNUMTYPEdist() {
      return "Distributive";
    },
    get$grammarCopyNUMBERtri() {
      return "Trial";
    },
    get$grammarCopyNUMBERpauc() {
      return "Paucal";
    },
    get$grammarCopyNUMBERgrpa() {
      return "Greater Paucal";
    },
    get$grammarCopyNUMBERgrpl() {
      return "Greater Plural";
    },
    get$grammarCopyNUMBERinv() {
      return "Inverse";
    },
    get$grammarCopyPERSON0() {
      return "Zero";
    },
    get$grammarCopyPERSON4() {
      return "Fourth";
    },
    get$grammarCopyPOLITEform() {
      return "Formal";
    },
    get$grammarCopyPOLITEelev() {
      return "Elevated";
    },
    get$grammarCopyPOLITEhumb() {
      return "Humble";
    },
    get$grammarCopyPRONTYPEemp() {
      return "Emphatic";
    },
    get$grammarCopyPRONTYPEexc() {
      return "Exclamative";
    },
    get$grammarCopyPRONTYPErcp() {
      return "Reciprocal";
    },
    get$grammarCopyPRONTYPEintRelPronType() {
      return "Interrogative-Relative";
    },
    get$grammarCopyTENSEaor() {
      return "Aorist";
    },
    get$grammarCopyTENSEeps() {
      return "Epistemic";
    },
    get$grammarCopyTENSEprosp() {
      return "Prospective";
    },
    get$grammarCopyVERBFORMpart() {
      return "Participle";
    },
    get$grammarCopyVERBFORMconv() {
      return "Converb";
    },
    get$grammarCopyVERBFORMvnoun() {
      return "Verbal Noun";
    },
    get$grammarCopyVOICEantip() {
      return "Antipassive";
    },
    get$grammarCopyVOICEcauVoice() {
      return "Causative";
    },
    get$grammarCopyVOICedir() {
      return "Direct";
    },
    get$grammarCopyVOICEinvVoice() {
      return "Inverse";
    },
    get$grammarCopyVOICErcpVoice() {
      return "Reciprocal";
    },
    get$grammarCopyPOS() {
      return "Part of Speech";
    },
    get$grammarCopyGENDER() {
      return "Gender";
    },
    get$grammarCopyPERSON() {
      return "Person";
    },
    get$grammarCopyMOOD() {
      return "Mood";
    },
    get$grammarCopyPUNCTTYPE() {
      return "Punctuation Type";
    },
    get$grammarCopyASPECT() {
      return "Aspect";
    },
    get$grammarCopyCASE() {
      return "Case";
    },
    get$grammarCopyVOICE() {
      return "Voice";
    },
    get$grammarCopyNOUNTYPE() {
      return "Noun Type";
    },
    get$grammarCopyVERBTYPE() {
      return "Verb Type";
    },
    get$grammarCopyADVTYPE() {
      return "Adverb Type";
    },
    get$grammarCopyNUMFORM() {
      return "Numeral Form";
    },
    get$grammarCopyNUMTYPE() {
      return "Numeral Type";
    },
    get$grammarCopyNUMBER() {
      return "Number";
    },
    get$grammarCopyDEFINITE() {
      return "Definiteness";
    },
    get$grammarCopyDEGREE() {
      return "Degree";
    },
    get$grammarCopyEVIDENT() {
      return "Evidentiality";
    },
    get$grammarCopyFOREIGN() {
      return "Foreign";
    },
    get$grammarCopyPOLARITY() {
      return "Polarity";
    },
    get$grammarCopyPOLITE() {
      return "Politeness";
    },
    get$grammarCopyPREPCASE() {
      return "Prepositional Case";
    },
    get$grammarCopyPRONTYPE() {
      return "Pronoun Type";
    },
    get$grammarCopyPUNCTSIDE() {
      return "Punctuation Side";
    },
    get$grammarCopyREFLEX() {
      return "Reflexive";
    },
    get$grammarCopyTENSE() {
      return "Tense";
    },
    get$grammarCopyVERBFORM() {
      return "Verb Form";
    },
    get$grammarCopyCONJTYPE() {
      return "Conjunction Type";
    },
    get$grammarCopyNUMBERPSOR() {
      return "Possessor's Number";
    },
    get$grammarCopyPOSS() {
      return "Possessive";
    },
    get$grammarCopyCASEaccdat() {
      return "Accusative-Dative";
    },
    get$grammarCopyDEFINITEind() {
      return "Indefinite";
    },
    get$grammarCopyNUMBERPSORsing() {
      return "Possessor's Singular";
    },
    get$grammarCopyNUMBERPSORplur() {
      return "Possessor's Plural";
    },
    get$grammarCopyNUMBERPSORdual() {
      return "Possessor's Dual";
    },
    get$grammarCopyPOSSyes() {
      return "Possessive";
    },
    get$grammarCopyPREPCASEnpr() {
      return "Non-prepositional";
    },
    get$grammarCopyPRONTYPEprs() {
      return "Personal";
    },
    get$grammarCopyPRONTYPEint() {
      return "Interrogative";
    },
    get$grammarCopyPRONTYPEtot() {
      return "Total";
    },
    get$grammarCopyPRONTYPEneg() {
      return "Negative";
    },
    get$grammarCopyPRONTYPEart() {
      return "Article";
    },
    get$grammarCopyPRONTYPEind() {
      return "Indefinite";
    },
    get$grammarCopyPRONTYPEintrel() {
      return "Interrogative-Relative";
    },
    get$grammarCopyPUNCTSIDEfin() {
      return "Final Punctuation";
    },
    get$grammarCopyPUNCTTYPEperi() {
      return "Period";
    },
    get$grammarCopyREFLEXyes() {
      return "Reflexive";
    },
    get$grammarCopyTENSEimp() {
      return "Imperfect";
    },
    get$enterPrompt() {
      return "Please enter a system prompt";
    },
    get$selectBotLanguage() {
      return "Select bot language";
    },
    get$chooseVoice() {
      return "Choose a voice";
    },
    get$enterLanguageLevel() {
      return "Please enter a language level";
    },
    get$enterDiscussionTopic() {
      return "Please enter a discussion topic";
    },
    get$selectBotChatMode() {
      return "Select chat mode";
    },
    get$other() {
      return "Other";
    },
    levelShort$1(level) {
      return "LVL " + level;
    },
    get$botModeValidation() {
      return "Please select a chat mode";
    },
    get$clickBestOption() {
      return "Choose the best options to translate your message!";
    },
    get$unlockedLanguageTools() {
      return "You\u2019ve unlocked the language tools for this message. Try them out by clicking below!";
    },
    get$botSettingsSubtitle() {
      return "Invite bot to moderate chat activity";
    },
    get$noCapacityLimit() {
      return "No capacity limit";
    },
    get$downloadGroupText() {
      return "Download group text";
    },
    get$notificationsOn() {
      return "Notifications on";
    },
    get$notificationsOff() {
      return "Notifications off";
    },
    get$calculatingFileSize() {
      return "Calculating file size...";
    },
    get$prepareSendingAttachment() {
      return "Prepare sending attachment...";
    },
    get$sendingAttachment() {
      return "Sending attachment...";
    },
    sendingAttachmentCountOfCount$2(index, $length) {
      return "Sending attachment " + index + " of " + $length + "...";
    },
    serverLimitReached$1(seconds) {
      return "Server limit reached! Waiting " + seconds + " seconds...";
    },
    get$noticeChatBackupDeviceVerification() {
      return "Note: When you connect all your devices to the chat backup, they are automatically verified.";
    },
    get$requireCodeToJoin() {
      return "Require code to join";
    },
    get$canFindInSearch() {
      return "Can find in search";
    },
    get$addSubspaceWarning() {
      return "Once you add this, it will not appear in public search results, and it will be visible to all members of the parent space.";
    },
    get$nestedSpaceError() {
      return "Spaces should not be added as children of other spaces";
    },
    get$blur(_) {
      return "Blur:";
    },
    get$opacity(_) {
      return "Opacity:";
    },
    get$setWallpaper() {
      return "Set wallpaper";
    },
    get$noContactInformationProvided() {
      return "Server does not provide any valid contact information";
    },
    get$contactServerAdmin() {
      return "Contact server admin";
    },
    get$contactServerSecurity() {
      return "Contact server security";
    },
    get$supportPage() {
      return "Support page";
    },
    get$serverInformation() {
      return "Server information:";
    },
    get$name(_) {
      return "Name";
    },
    get$version(_) {
      return "Version";
    },
    get$compress() {
      return "Compress";
    },
    get$boldText() {
      return "Bold text";
    },
    get$italicText() {
      return "Italic text";
    },
    get$strikeThrough() {
      return "Strikethrough";
    },
    get$pleaseFillOut() {
      return "Please fill out";
    },
    get$invalidUrl() {
      return "Invalid url";
    },
    get$addLink() {
      return "Add link";
    },
    get$unableToJoinChat() {
      return "Unable to join chat. Maybe the other party has already closed the conversation.";
    },
    get$createChatAndInviteUsers() {
      return "Create chat and invite users";
    },
    get$updatedNewSpaceDescription() {
      return "Spaces allow you to consolidate your chats and build private or public communities.";
    },
    get$joinWithCode() {
      return "Join with code";
    },
    get$enterCodeToJoin() {
      return "Enter code to join";
    },
    get$mandatoryUpdateRequired() {
      return "Mandatory Update Required";
    },
    get$updateAvailable() {
      return "Update Available";
    },
    get$mandatoryUpdateRequiredDesc() {
      return "A new version of the app is required to continue. Please update now to proceed.";
    },
    get$updateAvailableDesc() {
      return "A new version of the app is available. Update now for the latest features and improvements!";
    },
    get$updateNow() {
      return "Update Now";
    },
    get$updateLater() {
      return "Later";
    },
    get$constructUseWaDesc() {
      return "Used without help";
    },
    get$constructUseGaDesc() {
      return "Grammar mistake";
    },
    get$constructUseUnkDesc() {
      return "Unknown";
    },
    get$constructUseCorITDesc() {
      return "Correct in translation";
    },
    get$constructUseIgnITDesc() {
      return "Ignored in translation";
    },
    get$constructUseIncITDesc() {
      return "Incorrect in translation";
    },
    get$constructUseIgnIGCDesc() {
      return "Ignored in grammar correction";
    },
    get$constructUseCorIGCDesc() {
      return "Correct in grammar correction";
    },
    get$constructUseIncIGCDesc() {
      return "Incorrect in grammar correction";
    },
    get$constructUseCorPADesc() {
      return "Correct in word meaning activity";
    },
    get$constructUseIgnPADesc() {
      return "Ignored in word meaning activity";
    },
    get$constructUseIncPADesc() {
      return "Incorrect in word meaning activity";
    },
    get$constructUseCorWLDesc() {
      return "Correct in word listening activity";
    },
    get$constructUseIncWLDesc() {
      return "Incorrect in word listening activity";
    },
    get$constructUseIngWLDesc() {
      return "Ignored in word listening activity";
    },
    get$constructUseCorHWLDesc() {
      return "Correct in hidden word activity";
    },
    get$constructUseIncHWLDesc() {
      return "Incorrect in hidden word activity";
    },
    get$constructUseIgnHWLDesc() {
      return "Ignored in hidden word activity";
    },
    get$constructUseCorLDesc() {
      return "Correct in lemma activity";
    },
    get$constructUseIncLDesc() {
      return "Incorrect in lemma activity";
    },
    get$constructUseIgnLDesc() {
      return "Ignored in lemma activity";
    },
    get$constructUseCorMDesc() {
      return "Correct in grammar activity";
    },
    get$constructUseIncMDesc() {
      return "Incorrect in grammar activity";
    },
    get$constructUseIgnMDesc() {
      return "Ignored in grammar activity";
    },
    get$constructUseEmojiDesc() {
      return "Correct in emoji activity";
    },
    get$constructUseNanDesc() {
      return "Not applicable";
    },
    xpIntoLevel$2(currentXP, maxXP) {
      return "" + currentXP + " / " + maxXP + " XP";
    },
    get$enableTTSToolName() {
      return "Enabled text-to-speech";
    },
    get$enableTTSToolDescription() {
      return "Allow the app to generate text-to-speech output for portions of text in your target language";
    },
    get$couldNotFindTTS() {
      return "We couldn't find a text-to-speech engine for your current target language. ";
    },
    get$ttsInstructionsHyperlink() {
      return "Click here to view instructions for downloading a new voice on your device.";
    },
    get$currentVersion() {
      return "Current Version";
    },
    get$latestVersion() {
      return "Latest Version";
    },
    get$createAnAccount() {
      return "Create an account";
    },
    get$signIn() {
      return "Sign in";
    },
    get$signUpWithEmail() {
      return "Sign up with Email";
    },
    get$signUpWithGoogle() {
      return "Sign up with Google";
    },
    get$signUpWithApple() {
      return "Sign up with Apple";
    },
    get$yourUsername() {
      return "Your username";
    },
    get$yourEmail() {
      return "Your email";
    },
    get$signInWithGoogle() {
      return "Sign in with Google";
    },
    get$signInWithApple() {
      return "Sign in with Apple";
    },
    get$chooseYourAvatar() {
      return "Choose your avatar";
    },
    get$iWantToLearn() {
      return "I want to learn";
    },
    get$letsStart() {
      return "Let's start";
    },
    get$pleaseAgreeToTOS() {
      return "Please agree to the Terms and Conditions";
    },
    get$pleaseEnterEmail() {
      return "Please enter a valid email address.";
    },
    get$pleaseSelectALanguage() {
      return "Please select a language";
    },
    get$myBaseLanguage() {
      return "My base language";
    },
    remove$1($receiver, arg0) {
      return this.get$remove(this).call$1(arg0);
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(B.L10nHu, C.L10n);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"L10nHu":{"L10n":[]}}'));
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_247", e: "endPart", h: h});
})($__dart_deferred_initializers__, "DwseyZNgDyTKaJfFIgjxLhxIY0Q=");
;
//# sourceMappingURL=main.dart.js_247.part.js.map
